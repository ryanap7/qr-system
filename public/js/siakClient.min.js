"use strict";
var SiakClient = (() => {
    const e = [401, 407],
        a = "/",
        t = "integrasi",
        i = t,
        n = "user",
        r = "siak-" + t + ":" + n;
    SiakLocalStorage.init("siak:" + t);
    let s = {},
        o = {},
        l = {},
        d = {},
        p = () => {
            if (moment) {
                let e = moment().local();
                return moment(e).utcOffset("+0700").format("DD-MM-YYYY");
            }
            {
                let e = new Date(),
                    a = e.getDate(),
                    t = e.getMonth() + 1;
                return (
                    a < 10 && (a = "0" + a),
                    t < 10 && (t = "0" + t),
                    a + "-" + t + "-" + e.getFullYear()
                );
            }
        };
    const c = {
        key: r,
        data: { username: null, prop: [], kab: [], kec: [], kel: [] },
    };
    let g = {
            stripEmpty: (e) => (null == e || 0 === $.trim(e).length ? "-" : e),
            camelCaseToDash: (e) =>
                e.replace(/([a-zA-Z])(?=[A-Z])/g, "$1-").toLowerCase(),
            pad: (e, a, t) => (
                (t = t || "0"),
                (e += "").length >= a
                    ? e
                    : new Array(a - e.length + 1).join(t) + e
            ),
            formatDate: (e, a, t) =>
                null == e || 0 === $.trim(e).length
                    ? ""
                    : ("string" != typeof t &&
                          "number" != typeof t &&
                          (t = "YYYY-MM-DDTHH:mm:ssZ"),
                      moment
                          ? t.includes("Z")
                              ? moment(e, t).utcOffset(7).format(a)
                              : moment(e, t).format(a)
                          : e),
            splitTgl: (e) => {
                let a = e.split("to"),
                    t = a[0],
                    i = a[1];
                if (void 0 === t || void 0 === i) return "";
                if (moment) {
                    let e = moment(t).format("HH:mm:ss"),
                        a = moment(i).format("HH:mm:ss");
                    return (
                        (t = moment(t).format("DD-MM-YYYY")),
                        (i = moment(i).format("DD-MM-YYYY")),
                        `<i class="fa fa-calendar"></i> ${t} <i class="fa fa-clock-o"></i> ${e} Sampai <i class="fa fa-calendar"></i> ${i} <i class="fa fa-clock-o"></i> ${a}`
                    );
                }
                return e;
            },
            getLembagaEsign: (e, a) => {
                let t = e.indexOf("O=");
                return -1 !== t ? e.slice(t + 2).split(",")[0] : "";
            },
            refWni: (e, a) => {
                if (void 0 !== s[a]) {
                    let t = s[a].filter(function (a) {
                        return a.hasOwnProperty(e);
                    });
                    if (1 === t.length) return t[0][e];
                }
                return "0";
            },
            refWna: (e, a) => {
                if (void 0 !== o[a]) {
                    let t = o[a].filter(function (a) {
                        return a.hasOwnProperty(e);
                    });
                    if (1 == t.length) return t[0][e];
                }
                return "0";
            },
            refAction: (e) => {
                let a = "";
                return (
                    void 0 !== l[e] &&
                        (a =
                            '<span class="m-badge m-badge--secondary m-badge--wide m-badge--rounded m--font-boldest2 ' +
                            l[e].class +
                            '">' +
                            l[e].name +
                            "</span>"),
                    "undefined" != typeof arguments && arguments.length > 1
                        ? Handlebars.SafeString(a)
                        : a
                );
            },
            refMod: (e) => {
                let a = "";
                return void 0 !== l[e] && (a = l[e]), a;
            },
            refModAdm: (e) => {
                let a = "";
                switch (e) {
                    case "NI":
                    case "NIn":
                    case "ZK":
                    case "ZKn":
                        a = "KARTU KELUARGA";
                        break;
                    case "NE":
                    case "NEn":
                    case "ZB":
                    case "ZBn":
                        a = "BIODATA WNI";
                        break;
                    case "NG":
                    case "NGn":
                        a = "KARTU IDENTITAS ANAK";
                        break;
                    case "NB":
                    case "NBn":
                    case "ZO":
                    case "ZOn":
                        a = "BIODATA WNA";
                        break;
                    case "ND":
                    case "NDn":
                    case "ZY":
                    case "ZYn":
                        a = "SKTT";
                        break;
                    case "NJ":
                    case "NJn":
                        a = "PERPINDAHAN";
                        break;
                    case "AM":
                    case "AMn":
                    case "ZL":
                    case "ZLn":
                        a = "KELAHIRAN WNI";
                        break;
                    case "AN":
                    case "ANn":
                    case "ZT":
                    case "ZTn":
                        a = "KELAHIRAN TANPA ASAL USUL";
                        break;
                    case "AP":
                    case "APn":
                    case "ZN":
                    case "ZNn":
                        a = "LAHIR MATI";
                        break;
                    case "AC":
                    case "ACn":
                    case "ZD":
                    case "ZDn":
                        a = "BAKAK";
                        break;
                    case "AO":
                    case "ZM":
                        a = "KEMATIAN";
                        break;
                    case "AI":
                    case "AIn":
                        a = "BPKAM";
                        break;
                    case "AT":
                    case "ATn":
                    case "ZW":
                    case "ZWn":
                        a = "PERKAWINAN";
                        break;
                    case "AL":
                    case "ALn":
                        a = "PEMBATALAN PERKAWINAN";
                        break;
                    case "AG":
                    case "AGn":
                        a = "BPKAK";
                        break;
                    case "AS":
                    case "ASn":
                    case "ZC":
                    case "ZCn":
                        a = "PERCERAINAN";
                        break;
                    case "AK":
                    case "AKn":
                        a = "PEMBATALAN PERCERAINAN";
                        break;
                    case "AF":
                    case "AFn":
                        a = "BPKAC";
                        break;
                    case "AX":
                    case "AXn":
                    case "AY":
                    case "AYn":
                        a = "PERUBAHAN WNA MENJADI WNI";
                        break;
                    case "AW":
                    case "AWn":
                    case "ZS":
                    case "ZSn":
                    case "AW":
                    case "AWn":
                    case "ZS":
                    case "ZSn":
                        a = "PENGESAHAN ANAK";
                        break;
                    case "AA":
                    case "AAn":
                    case "ZA":
                    case "ZAn":
                        a = "PENGAKUAN ANAK";
                        break;
                    case "AJ":
                    case "AJn":
                        a = "BPKASA";
                        break;
                    case "AH":
                    case "AHn":
                        a = "BPKAKU";
                        break;
                    default:
                        a = e;
                }
                return a;
            },
            bsreInfo: (e) => {
                let a = "";
                if (null != e && "" !== $.trim(e))
                    switch (e) {
                        case 9:
                        case 9n:
                        case "9":
                        case "9n":
                            a = "Pengajuan";
                            break;
                        case 91:
                        case 91n:
                        case "91":
                        case "91n":
                            a = "Pengajuan dibatalkan";
                            break;
                        case 92:
                        case 92n:
                        case "92":
                        case "92n":
                            a = "Pengajuan ditolak";
                            break;
                        case 95:
                        case 95n:
                        case "95":
                        case "95n":
                            a = "Permohonan";
                            break;
                        case 96:
                        case 96n:
                        case "96":
                        case "96n":
                            a = "Permohonan dibatalkan";
                            break;
                        case 1:
                        case 1n:
                        case "1":
                        case "1n":
                            a = "Ter-verifikasi";
                            break;
                        case 11:
                        case 11n:
                        case "11":
                        case "11n":
                            a = "Verifikasi dibatalkan";
                            break;
                        case 12:
                        case 12n:
                        case "12":
                        case "12n":
                            a = "Verifikasi ditolak";
                            break;
                        case 3:
                        case 3n:
                        case "3":
                        case "3n":
                            a = "Pembubuhan TTE";
                            break;
                        case 4:
                        case 4n:
                        case "4":
                        case "4n":
                            a = "Sudah TTD Elektronik";
                            break;
                        case 7:
                        case 7n:
                        case "7":
                        case "7n":
                            a = "Tidak Aktif";
                            break;
                        default:
                            a = "";
                    }
                return a;
            },
            infoFlushSistemLabel: (e) => {
                let a = "";
                if (null != e || "" != e) {
                    switch (e) {
                        case "1":
                            a = a =
                                '<span class="bsre-label m-badge btn-hijau m-badge--wide" data-toggle="m-tooltip" data-skin="dark" data-tte="' +
                                e +
                                '">SIAK</span>';
                            break;
                        case "2":
                            a = a =
                                '<span class="bsre-label m-badge bg-color_marun m-badge--wide" data-toggle="m-tooltip" data-skin="dark" data-tte="' +
                                e +
                                '">WEB</span>';
                            break;
                        case "3":
                            a = a =
                                '<span class="bsre-label m-badge bg-color_tosca m-badge--wide" data-toggle="m-tooltip" data-skin="dark" data-tte="' +
                                e +
                                '">MOBILE</span>';
                            break;
                        default:
                            a = "";
                    }
                    if ("undefined" != typeof arguments && arguments.length > 1)
                        return Handlebars.SafeString(a);
                }
                return a;
            },
            infoAlasanLepasPerangkatLabel: (e) => {
                let a = "";
                if (null != e || "" != e) {
                    switch (e) {
                        case "1":
                            a = a =
                                '<span class="bsre-label m-badge btn-hijau m-badge--wide" data-toggle="m-tooltip" data-skin="dark" data-tte="' +
                                e +
                                '">PERANGKAT HILANG</span>';
                            break;
                        case "2":
                            a = a =
                                '<span class="bsre-label m-badge bg-color_marun m-badge--wide" data-toggle="m-tooltip" data-skin="dark" data-tte="' +
                                e +
                                '">PERANGKAT RUSAK</span>';
                            break;
                        case "3":
                            a = a =
                                '<span class="bsre-label m-badge bg-color_tosca m-badge--wide" data-toggle="m-tooltip" data-skin="dark" data-tte="' +
                                e +
                                '">GANTI PERANGKAT</span>';
                            break;
                        case "99":
                            a = a =
                                '<span class="bsre-label m-badge bg-color_ungu m-badge--wide" data-toggle="m-tooltip" data-skin="dark" data-tte="' +
                                e +
                                '">GANTI PERANGKAT</span>';
                            break;
                        default:
                            a = "";
                    }
                    if ("undefined" != typeof arguments && arguments.length > 1)
                        return Handlebars.SafeString(a);
                }
                return a;
            },
            infoPmhDfdBiodataWniLabel: (e) => {
                let a = "";
                if (null != e || "" != e) {
                    switch (e) {
                        case 1:
                            a = a = "<span>PERUBAHAN ELEMEN DATA</span>";
                            break;
                        case 2:
                            a = a = "<span>PERUBAHAN DOMISILI/ALAMAT</span>";
                            break;
                        case 99:
                            a = a = "<span>LAINNYA</span>";
                            break;
                        default:
                            a = "";
                    }
                    if ("undefined" != typeof arguments && arguments.length > 1)
                        return Handlebars.SafeString(a);
                }
                return a;
            },
            infoPmhDfdKartuKeluargaLabel: (e) => {
                let a = "";
                if (null != e || "" != e) {
                    switch (e) {
                        case 1:
                            a = a = "<span>PERUBAHAN ANGGOTA KELUARGA</span>";
                            break;
                        case 2:
                            a = a = "<span>PERUBAHAN DOMISILI/ALAMAT</span>";
                            break;
                        case 99:
                            a = a = "<span>LAINNYA</span>";
                            break;
                        default:
                            a = "";
                    }
                    if ("undefined" != typeof arguments && arguments.length > 1)
                        return Handlebars.SafeString(a);
                }
                return a;
            },
            bsreLabel: (e) => {
                let a = "";
                if (void 0 !== e && (null !== e || "" !== $.trim(e)))
                    switch (e) {
                        case 9:
                        case 9n:
                        case "9":
                        case "9n":
                            a =
                                '<span class="bsre-label m-badge m-badge--accent m-badge--wide" data-toggle="m-tooltip" data-skin="dark" data-tte="' +
                                e +
                                '">' +
                                g.bsreInfo(e) +
                                "</span>";
                            break;
                        case 91:
                        case 91n:
                        case "91":
                        case "91n":
                        case 92:
                        case 92n:
                        case "92":
                        case "92n":
                        case 96:
                        case 96n:
                        case "96":
                        case "96n":
                        case 11:
                        case 11n:
                        case "11":
                        case "11n":
                        case 12:
                        case 12n:
                        case "12":
                        case "12n":
                            a =
                                '<span class="bsre-label m-badge bg-color_marun m-badge--wide" data-toggle="m-tooltip" data-skin="dark" data-tte="' +
                                e +
                                '">' +
                                g.bsreInfo(e) +
                                "</span>";
                            break;
                        case 95:
                        case 95n:
                        case "95":
                        case "95n":
                            a =
                                '<span class="bsre-label m-badge bg-color_hijau m-badge--wide" data-toggle="m-tooltip" data-skin="dark" data-tte="' +
                                e +
                                '">' +
                                g.bsreInfo(e) +
                                "</span>" +
                                g.infoWebPermohonanLabel(e);
                            break;
                        case 1:
                        case 1n:
                        case "1":
                        case "1n":
                            a =
                                '<span class="bsre-label m-badge bg-color_ungu m-badge--wide" data-toggle="m-tooltip" data-skin="dark" data-tte="' +
                                e +
                                '">' +
                                g.bsreInfo(e) +
                                "</span>";
                            break;
                        case 3:
                        case 3n:
                        case "3":
                        case "3n":
                            a =
                                '<span class="bsre-label m-badge m-badge--primary m-badge--wide" data-toggle="m-tooltip" data-skin="dark" data-tte="' +
                                e +
                                '">' +
                                g.bsreInfo(e) +
                                "</span>";
                            break;
                        case 4:
                        case 4n:
                        case "4":
                        case "4n":
                            a =
                                '<span class="bsre-label m-badge m-badge--danger m-badge--wide" style="background-color: #05587f !important" data-toggle="m-tooltip" data-skin="dark" data-tte="' +
                                e +
                                '">' +
                                g.bsreInfo(e) +
                                "</span>";
                            break;
                        case 7:
                        case 7n:
                        case "7":
                        case "7n":
                            a =
                                '<span class="bsre-label m-badge m-badge--danger m-badge--wide" style="background-color: #d68b04 !important;" data-toggle="m-tooltip" data-skin="dark" data-tte="' +
                                e +
                                '">' +
                                g.bsreInfo(e) +
                                "</span>";
                            break;
                        default:
                            a = "";
                    }
                return "undefined" != typeof arguments &&
                    arguments.length > 1 &&
                    "" !== $.trim(a)
                    ? Handlebars.SafeString(a)
                    : a;
            },
            infoWebPermohonanLabel: (e) => {
                let a = "";
                if (void 0 !== e && (null !== e || "" !== $.trim(e)))
                    switch (e) {
                        case 95:
                        case "Y":
                            a = a =
                                '&nbsp;&nbsp;&nbsp;<span class="bsre-label m-badge bg-color_hijau m-badge--wide" data-toggle="m-tooltip" data-skin="dark" data-tte="' +
                                e +
                                '">Online</span>';
                            break;
                        default:
                            a = "";
                    }
                return "undefined" != typeof arguments &&
                    arguments.length > 1 &&
                    "" !== $.trim(a)
                    ? Handlebars.SafeString(a)
                    : a;
            },
            bioFlagPindah: (e) => {
                let a = "";
                if (void 0 !== e && (null !== e || "" !== $.trim(e)))
                    switch (e) {
                        case 1:
                        case 1n:
                        case "1":
                        case "1n":
                            a = "Dalam satu Desa/Kelurahan";
                            break;
                        case 2:
                        case 2n:
                        case "2":
                        case "2n":
                            a = "Antar Desa/Kelurahan";
                            break;
                        case 3:
                        case 3n:
                        case "3":
                        case "3n":
                            a = "Antar Kecamatan";
                            break;
                        case 4:
                        case 4n:
                        case "4":
                        case "4n":
                            a = "Antar Kabupaten/Kota";
                            break;
                        case 5:
                        case 5n:
                        case "5":
                        case "5n":
                            a = "Antar Provinsi";
                            break;
                        case 6:
                        case 6n:
                        case "6":
                        case "6n":
                            a = "Ke Luar Negeri";
                            break;
                        case 9:
                        case 9n:
                        case "9":
                        case "9n":
                            a = "Kepala Keluarga Flag Status Mati";
                            break;
                        default:
                            a = "";
                    }
                return a;
            },
            bioFlagPindahIconLabel: (e) => {
                let a = "";
                if (void 0 !== e && (null !== e || "" !== $.trim(e)))
                    switch (e) {
                        case 1:
                        case 1n:
                        case "1":
                        case "1n":
                        case 2:
                        case 2n:
                        case "2":
                        case "2n":
                        case 3:
                        case "3":
                        case 4:
                        case 4n:
                        case "4":
                        case "4n":
                        case 5:
                        case 5n:
                        case "5":
                        case "5n":
                        case 6:
                        case 6n:
                        case "6":
                        case "6n":
                            a =
                                '<span style="vertical-align: middle;"><i class="flaticon-truck m--font-accent" data-toggle="m-tooltip" data-skin="dark" data-placement="bottom" data-title="' +
                                g.bioFlagPindah(e) +
                                '" data-original-title="' +
                                g.bioFlagPindah(e) +
                                '"></i></span>';
                            break;
                        case 9:
                        case 9n:
                        case "9":
                        case "9n":
                            a =
                                '<span style="cursor:default" class="m-badge m-badge--warning" data-toggle="m-tooltip" data-skin="dark" data-placement="bottom" data-title="' +
                                g.bioFlagPindah(e) +
                                '" data-original-title="' +
                                g.bioFlagPindah(e) +
                                '">&nbsp;&nbsp;</span>';
                            break;
                        default:
                            a = "";
                    }
                return "undefined" != typeof arguments &&
                    arguments.length > 1 &&
                    "" !== $.trim(a)
                    ? Handlebars.SafeString(a)
                    : a;
            },
            kkFlagPindahIconLabel: (e) => {
                let a = "";
                if (void 0 !== e && (null !== e || "" !== $.trim(e)))
                    switch (e) {
                        case 1:
                        case 1n:
                        case "1":
                        case "1n":
                        case 2:
                        case 2n:
                        case "2":
                        case "2n":
                        case 3:
                        case 3n:
                        case "3":
                        case "3n":
                        case 4:
                        case 4n:
                        case "4":
                        case "4n":
                        case 5:
                        case 5n:
                        case "5":
                        case "5n":
                        case 6:
                        case 6n:
                        case "6":
                        case "6n":
                            (a =
                                '<span class="m-badge m-badge--accent" data-toggle="m-tooltip" data-skin="dark" data-placement="bottom" data-title="Kepala Keluarga dalam proses pindah" data-original-title="Kepala Keluarga dalam proses pindah">&nbsp;&nbsp;</span>'),
                                (a +=
                                    "&nbsp;&nbsp;" +
                                    g.bioFlagPindahIconLabel(e));
                            break;
                        case 9:
                        case 9n:
                        case "9":
                        case "9n":
                            a = g.bioFlagPindahIconLabel(e);
                            break;
                        default:
                            a = "";
                    }
                return "undefined" != typeof arguments &&
                    arguments.length > 1 &&
                    "" !== $.trim(a)
                    ? Handlebars.SafeString(a)
                    : a;
            },
            bioFlagStatus: (e) => {
                let a = "";
                if (void 0 !== e && (null !== e || "" !== $.trim(e)))
                    switch (e) {
                        case 0:
                        case 0n:
                        case "0":
                        case "0n":
                            a = "Aktif";
                            break;
                        case 1:
                        case 1n:
                        case "1":
                        case "1n":
                            a = "Status Biodata Mati";
                            break;
                        case 2:
                        case 2n:
                        case "2":
                        case "2n":
                            a = "Biodata dalam proses pindah";
                            break;
                        case 3:
                        case 3n:
                        case "3":
                        case "3n":
                            a = "Pindah ke luar negeri";
                            break;
                        case 4:
                        case 4n:
                        case "4":
                        case "4n":
                            a = "Duplicate/Indikasi Ganda";
                            break;
                        case 5:
                        case 5n:
                        case "5":
                        case "5n":
                            a = "Berada di luar negeri";
                            break;
                        case 7:
                        case 7n:
                        case "7":
                        case "7n":
                            a = "WNI menjadi OA";
                            break;
                        case 8:
                        case 8n:
                        case "8":
                        case "8n":
                            a = "Telah datang di tujuan";
                            break;
                        case 9:
                        case 9n:
                        case "9":
                        case "9n":
                            a = "Pembuatan Akta Kelahiran belum dilanjutkan";
                            break;
                        case "L":
                            a = "Anomali";
                            break;
                        case "K":
                            a = "Tidak Aktif";
                            break;
                        default:
                            a = "Status Tidak Diketahui";
                    }
                return a;
            },
            bioFlagStatusIconLabel: (e, a) => {
                let t = "";
                if (void 0 !== e && (null !== e || "" !== $.trim(e)))
                    switch (e) {
                        case 0:
                        case 0n:
                        case "0":
                        case "0n":
                            t = "";
                            break;
                        case 1:
                        case 1n:
                        case "1":
                        case "1n":
                        case 4:
                        case 4n:
                        case "4":
                        case "4n":
                        case "L":
                            t =
                                '<span style="cursor:default" class="m-badge m-badge--danger" data-toggle="m-tooltip" data-skin="dark" data-placement="bottom" data-title="' +
                                g.bioFlagStatus(e) +
                                '" data-original-title="' +
                                g.bioFlagStatus(e) +
                                '">' +
                                e +
                                "</span>";
                            break;
                        case 2:
                        case 2n:
                        case "2":
                        case "2n":
                            (t =
                                '<span style="cursor:default" class="m-badge m-badge--accent" data-toggle="m-tooltip" data-skin="dark" data-placement="bottom" data-title="' +
                                g.bioFlagStatus(e) +
                                '" data-original-title="' +
                                g.bioFlagStatus(e) +
                                '">' +
                                e +
                                "</span>"),
                                void 0 !== a &&
                                    (("string" != typeof a &&
                                        "number" != typeof a) ||
                                        (null === a && "" === $.trim(a)) ||
                                        (9 !== a ||
                                        9n !== a ||
                                        "9" !== a ||
                                        "9n" !== a
                                            ? (t +=
                                                  "&nbsp;&nbsp;" +
                                                  g.bioFlagPindahIconLabel(a))
                                            : (t =
                                                  g.bioFlagPindahIconLabel(
                                                      a
                                                  ))));
                            break;
                        case 3:
                        case 3n:
                        case "3":
                        case "3n":
                        case 5:
                        case 5n:
                        case "5":
                        case "5n":
                        case 8:
                        case 8n:
                        case "8":
                        case "8n":
                            t =
                                '<span style="cursor:default" class="m-badge m-badge--accent" data-toggle="m-tooltip" data-skin="dark" data-placement="bottom" data-title="' +
                                g.bioFlagStatus(e) +
                                '" data-original-title="' +
                                g.bioFlagStatus(e) +
                                '">' +
                                e +
                                "</span>";
                            break;
                        case 7:
                        case 7n:
                        case "7":
                        case "7n":
                            t =
                                '<span style="cursor:default" class="m-badge m-badge--brand" data-toggle="m-tooltip" data-skin="dark" data-placement="bottom" data-title="' +
                                g.bioFlagStatus(e) +
                                '" data-original-title="' +
                                g.bioFlagStatus(e) +
                                '">' +
                                e +
                                "</span>";
                            break;
                        case 9:
                        case 9n:
                        case "9":
                        case "9n":
                            t =
                                '<span style="cursor:default" class="m-badge m-badge--warning" data-toggle="m-tooltip" data-skin="dark" data-placement="bottom" data-title="' +
                                g.bioFlagStatus(e) +
                                '" data-original-title="' +
                                g.bioFlagStatus(e) +
                                '">' +
                                e +
                                "</span>";
                            break;
                        case "K":
                            t =
                                '<span style="cursor:default" class="m-badge m-badge--metal" data-toggle="m-tooltip" data-skin="dark" data-placement="bottom" data-title="' +
                                g.bioFlagStatus(e) +
                                '" data-original-title="' +
                                g.bioFlagStatus(e) +
                                '">' +
                                e +
                                "</span>";
                            break;
                        default:
                            t =
                                '<span style="cursor:default" class="m-badge m-badge--metal" data-toggle="m-tooltip" data-skin="dark" data-placement="bottom" data-title="' +
                                g.bioFlagStatus(e) +
                                '" data-original-title="' +
                                g.bioFlagStatus(e) +
                                '">&nbsp;&nbsp;</span>';
                    }
                return "undefined" != typeof arguments &&
                    arguments.length > 1 &&
                    "" !== $.trim(t)
                    ? Handlebars.SafeString(t)
                    : t;
            },
            mutasiCapilStatusIconLabel: (e) => {
                let a = "";
                if (void 0 !== e && (null !== e || "" !== $.trim(e)))
                    switch (e) {
                        case 0:
                        case 0n:
                        case "0":
                        case "0n":
                            a =
                                '<span style="cursor:default" class="m-badge m-badge--danger" data-toggle="m-tooltip" data-skin="dark" data-placement="bottom" data-title="Pengajuan dibatalkan">C</span>';
                            break;
                        case 1:
                        case 1n:
                        case "1":
                        case "1n":
                            a =
                                '<span style="cursor:default" class="m-badge m-badge--warning" data-toggle="m-tooltip" data-skin="dark" data-placement="bottom" data-title="Menunggu persetujuan">W</span>';
                            break;
                        case 2:
                        case 2n:
                        case "2":
                        case "2n":
                            a =
                                '<span style="cursor:default" class="m-badge m-badge--danger" data-toggle="m-tooltip" data-skin="dark" data-placement="bottom" data-title="Pengajuan ditolak">R</span>';
                            break;
                        case 3:
                        case 3n:
                        case "3":
                        case "3n":
                            a =
                                '<span style="cursor:default" class="m-badge m-badge--danger" data-toggle="m-tooltip" data-skin="dark" data-placement="bottom" data-title="Pengajuan disetujui">A</span>';
                    }
                return "undefined" != typeof arguments &&
                    arguments.length > 1 &&
                    "" !== $.trim(a)
                    ? Handlebars.SafeString(a)
                    : a;
            },
            bioWargaNegaraLabel: (e, a) => {
                let t = "";
                if (void 0 !== e && (null !== e || "" !== $.trim(e)))
                    switch (e) {
                        case 1:
                        case 1n:
                        case "1":
                        case "1n":
                            t =
                                '<span class="m-badge m-badge--wide" style="background: #1ba39c!important; color: #fff!important" data-toggle="m-tooltip" data-skin="dark" data-placement="bottom">Biodata WNI</span>';
                            break;
                        case 2:
                        case 2n:
                        case "2":
                        case "2n":
                            (t =
                                '<span class="m-badge m-badge--wide" style="background: #5e738b!important; color: #fff!important" data-toggle="m-tooltip" data-skin="dark" data-placement="bottom">Biodata OA</span>'),
                                void 0 !== a &&
                                    (("string" != typeof a &&
                                        "number" != typeof a) ||
                                        (null === a && "" === $.trim(a)) ||
                                        (t +=
                                            "&nbsp;&nbsp;" +
                                            g.oaImigrasiLabel(a)));
                            break;
                        default:
                            t = "";
                    }
                return "undefined" != typeof arguments &&
                    arguments.length > 1 &&
                    "" !== $.trim(t)
                    ? Handlebars.SafeString(t)
                    : t;
            },
            oaImigrasiLabel: (e) => {
                let a = "";
                if (void 0 !== e && (null !== e || "" !== $.trim(e)))
                    switch (e) {
                        case 1:
                        case 1n:
                        case "1":
                        case "1n":
                            a =
                                '<span class="m-badge m-badge--wide" style="border: 1px solid #5e738b!important" data-toggle="m-tooltip" data-skin="dark" data-placement="bottom">KITAS</span>';
                            break;
                        case 2:
                        case 2n:
                        case "2":
                        case "2n":
                            a =
                                '<span class="m-badge m-badge--wide" style="border: 1px solid #d05454!important" data-toggle="m-tooltip" data-skin="dark" data-placement="bottom">KITAP</span>';
                            break;
                        default:
                            a = "";
                    }
                return "undefined" != typeof arguments &&
                    arguments.length > 1 &&
                    "" !== $.trim(a)
                    ? Handlebars.SafeString(a)
                    : a;
            },
            kkTipeLabel: (e) => {
                let a = "";
                if (void 0 !== e && (null !== e || "" !== $.trim(e)))
                    switch (e) {
                        case 2:
                        case 2n:
                        case "2":
                        case "2n":
                            a =
                                '<span class="m-badge m-badge--metal m-badge--wide m-badge--rounded m--font-boldest" style="background-color: #4c87b9 !important">KITAP</span>';
                            break;
                        case 3:
                        case 3n:
                        case "3":
                        case "3n":
                            a =
                                '<span class="m-badge m-badge--metal m-badge--wide m-badge--rounded m--font-boldest" style="background-color: #c5bf66 !important">KITAS</span>';
                            break;
                        default:
                            a = "";
                    }
                return "undefined" != typeof arguments &&
                    arguments.length > 1 &&
                    "" !== $.trim(a)
                    ? Handlebars.SafeString(a)
                    : a;
            },
            p12StatusLabel: (e) => {
                let a = "";
                return (
                    void 0 !== e &&
                        ((null === e && "" === $.trim(e)) ||
                            (a =
                                '<span class="bsre-label m-badge m-badge--warning m-badge--wide">' +
                                e +
                                "</span>")),
                    "undefined" != typeof arguments &&
                    arguments.length > 1 &&
                    "" !== $.trim(a)
                        ? Handlebars.SafeString(a)
                        : a
                );
            },
            userGroupLevel: (e) => {
                let a = "";
                if (void 0 !== e && (null !== e || "" !== $.trim(e)))
                    switch (e) {
                        case 0:
                        case 0n:
                        case "0":
                        case "0n":
                            a = "PUSAT";
                            break;
                        case 1:
                        case 1n:
                        case "1":
                        case "1n":
                            a = "BEBERAPA PROVINSI";
                            break;
                        case 2:
                        case 2n:
                        case "2":
                        case "2n":
                            a = "PROVINSI";
                            break;
                        case 3:
                        case 3n:
                        case "3":
                        case "3n":
                            a = "BEBERAPA KABUPATEN/KOTA";
                            break;
                        case 4:
                        case 4n:
                        case "4":
                        case "4n":
                            a = "KABUPATEN/KOTA";
                            break;
                        case 5:
                        case 5n:
                        case "5":
                        case "5n":
                            a = "BEBERAPA KECAMATAN";
                            break;
                        case 6:
                        case 6n:
                        case "6":
                        case "6n":
                            a = "KECAMATAN";
                            break;
                        case 7:
                        case 7n:
                        case "7":
                        case "7n":
                            a = "BEBERAPA KELURAHAN/DESA";
                            break;
                        case 8:
                        case 8n:
                        case "8":
                        case "8n":
                            a = "KELURAHAN/DESA";
                            break;
                        case 9:
                        case 9n:
                        case "9":
                        case "9n":
                            a = "LINTAS INSTANSI";
                            break;
                        case "A":
                            a = "LUAR NEGERI";
                            break;
                        default:
                            a = "";
                    }
                return a;
            },
            userGroupLevelLabel: (e) => {
                let a = "";
                if (void 0 !== e && (null !== e || "" !== $.trim(e)))
                    switch (e) {
                        case 0:
                        case 0n:
                        case "0":
                        case "0n":
                            a =
                                '<span class="m-badge m-badge--wide" style="background: #525e64!important; color: #fff!important; font-weight:600;" data-toggle="m-tooltip" data-skin="dark" data-placement="bottom">' +
                                g.userGroupLevel(e) +
                                "</span>";
                            break;
                        case 1:
                        case 1n:
                        case "1":
                        case "1n":
                            a =
                                '<span class="m-badge m-badge--wide" style="background: #e1e5ec!important; color: #4b77be!important; font-weight:600;" data-toggle="m-tooltip" data-skin="dark" data-placement="bottom">' +
                                g.userGroupLevel(e) +
                                "</span>";
                            break;
                        case 2:
                        case 2n:
                        case "2":
                        case "2n":
                            a =
                                '<span class="m-badge m-badge--wide" style="background: #4b77be!important; color: #fff!important; font-weight:600;" data-toggle="m-tooltip" data-skin="dark" data-placement="bottom">' +
                                g.userGroupLevel(e) +
                                "</span>";
                            break;
                        case 3:
                        case 3n:
                        case "3":
                        case "3n":
                            a =
                                '<span class="m-badge m-badge--wide" style="background: #e1e5ec!important; color: #1ba39c!important; font-weight:600;" data-toggle="m-tooltip" data-skin="dark" data-placement="bottom">' +
                                g.userGroupLevel(e) +
                                "</span>";
                            break;
                        case 4:
                        case 4n:
                        case "4":
                        case "4n":
                            a =
                                '<span class="m-badge m-badge--wide" style="background: #1ba39c!important; color: #fff!important; font-weight:600;" data-toggle="m-tooltip" data-skin="dark" data-placement="bottom">' +
                                g.userGroupLevel(e) +
                                "</span>";
                            break;
                        case 5:
                        case "5":
                            a =
                                '<span class="m-badge m-badge--wide" style="background: #e1e5ec!important; color: #fd7e14!important; font-weight:600;" data-toggle="m-tooltip" data-skin="dark" data-placement="bottom">' +
                                g.userGroupLevel(e) +
                                "</span>";
                            break;
                        case 6:
                        case 6n:
                        case "6":
                        case "6n":
                            a =
                                '<span class="m-badge m-badge--wide" style="background: #fd7e14!important; color: #fff!important; font-weight:600;" data-toggle="m-tooltip" data-skin="dark" data-placement="bottom">' +
                                g.userGroupLevel(e) +
                                "</span>";
                            break;
                        case 7:
                        case 7n:
                        case "7":
                        case "7n":
                            a =
                                '<span class="m-badge m-badge--wide" style="background: #e1e5ec!important; color: #9a12b3!important; font-weight:600;" data-toggle="m-tooltip" data-skin="dark" data-placement="bottom">' +
                                g.userGroupLevel(e) +
                                "</span>";
                            break;
                        case 8:
                        case 8n:
                        case "8":
                        case "8n":
                            a =
                                '<span class="m-badge m-badge--wide" style="background: #9a12b3!important; color: #fff!important; font-weight:600;" data-toggle="m-tooltip" data-skin="dark" data-placement="bottom">' +
                                g.userGroupLevel(e) +
                                "</span>";
                            break;
                        case 9:
                        case 9n:
                        case "9":
                        case "9n":
                            a =
                                '<span class="m-badge m-badge--wide" style="background: #ff99ee!important; color: #fff!important; font-weight:600;" data-toggle="m-tooltip" data-skin="dark" data-placement="bottom">' +
                                g.userGroupLevel(e) +
                                "</span>";
                            break;
                        case "A":
                            a =
                                '<span class="m-badge m-badge--wide" style="background: #e1e5ec!important; color: #525e64!important; font-weight:600;" data-toggle="m-tooltip" data-skin="dark" data-placement="bottom">' +
                                g.userGroupLevel(e) +
                                "</span>";
                            break;
                        default:
                            a = "";
                    }
                return "undefined" != typeof arguments &&
                    arguments.length > 1 &&
                    "" !== $.trim(a)
                    ? Handlebars.SafeString(a)
                    : a;
            },
            statusAktifLabel: (e, a) => {
                let t = "",
                    i = !1;
                if (
                    void 0 !== a &&
                    !(
                        ("string" != typeof a && "number" != typeof a) ||
                        (null === a && "" === $.trim(a))
                    )
                )
                    switch (a) {
                        case 1:
                        case 1n:
                        case "1":
                        case "1n":
                        case "true":
                        case "TRUE":
                        case "Y":
                            i = !0;
                            break;
                        default:
                            i = !1;
                    }
                if (void 0 !== e && (null !== e || "" !== $.trim(e)))
                    switch (e) {
                        case 0:
                        case 0n:
                        case "0":
                        case "0n":
                        case "N":
                        case 3:
                        case 3n:
                        case "I":
                        case "In":
                        case "N":
                            (t =
                                '<span class="m-badge m-badge--danger" style="background: #ef4836 !important;" data-toggle="m-tooltip" data-skin="dark" data-placement="bottom" data-original-title="Tidak Aktif">&nbsp;</span>'),
                                i &&
                                    (t =
                                        '<span class="m-badge m-badge--danger m-badge--wide m-badge--rounded m--font-boldest2" style="background: #ef4836 !important;" data-toggle="m-tooltip" data-skin="dark" data-placement="bottom" data-original-title="Tidak Aktif"> INACTIVE </span>');
                            break;
                        case 1:
                        case 1n:
                        case "1":
                        case "1n":
                        case "Y":
                        case 2:
                        case 2n:
                        case "A":
                        case "An":
                        case "Y":
                            (t =
                                '<span class="m-badge m-badge--success" style="background: #26c281 !important;" data-toggle="m-tooltip" data-skin="dark" data-placement="bottom" data-original-title="Aktif">&nbsp;</span>'),
                                i &&
                                    (t =
                                        '<span class="m-badge m-badge--success m-badge--wide m-badge--rounded m--font-boldest2" style="background: #26c281 !important;" data-toggle="m-tooltip" data-skin="dark" data-placement="bottom" data-original-title="Aktif"> &nbsp;&nbsp;ACTIVE&nbsp;&nbsp; </span>');
                            break;
                        default:
                            t = "";
                    }
                return "undefined" != typeof arguments &&
                    arguments.length > 1 &&
                    "" !== $.trim(t)
                    ? Handlebars.SafeString(t)
                    : t;
            },
            yaAtauTidakLabel: (e, a) => {
                let t = "",
                    i = !0;
                if (
                    void 0 !== a &&
                    !(
                        ("string" != typeof a && "number" != typeof a) ||
                        (null === a && "" === $.trim(a))
                    )
                )
                    switch (a) {
                        case 1:
                        case 1n:
                        case "1":
                        case "1n":
                        case "true":
                        case "TRUE":
                        case "Y":
                        case !0:
                            i = !0;
                            break;
                        default:
                            i = !1;
                    }
                if (void 0 !== e && (null !== e || "" !== $.trim(e)))
                    switch (e) {
                        case 0:
                        case 0n:
                        case "0":
                        case "0n":
                        case "N":
                        case "T":
                            (t =
                                '<span class="m-font--danger" style="color: #ef4836 !important;" data-toggle="m-tooltip" data-skin="dark" data-placement="bottom" data-original-title="Tidak">TIDAK</span>'),
                                i &&
                                    (t =
                                        '<span class="m-badge m-badge--danger m-badge--wide m-badge--rounded m--font-boldest2" style="background: #ef4836 !important;" data-toggle="m-tooltip" data-skin="dark" data-placement="bottom" data-original-title="Tidak"> TIDAK </span>');
                            break;
                        case 1:
                        case 1n:
                        case "1":
                        case "1n":
                        case "Y":
                            (t =
                                '<span class="m-font--success" style="color: #26c281 !important;" data-toggle="m-tooltip" data-skin="dark" data-placement="bottom" data-original-title="Ya">YA</span>'),
                                i &&
                                    (t =
                                        '<span class="m-badge m-badge--success m-badge--wide m-badge--rounded m--font-boldest2" style="background: #26c281 !important;" data-toggle="m-tooltip" data-skin="dark" data-placement="bottom" data-original-title="Ya"> &nbsp;&nbsp;YA&nbsp;&nbsp; </span>');
                            break;
                        default:
                            t = "";
                    }
                return "undefined" != typeof arguments &&
                    arguments.length > 1 &&
                    "" !== $.trim(t)
                    ? Handlebars.SafeString(t)
                    : t;
            },
            isNomor: (e) => "number" == typeof e,
            isArray: (e) =>
                e.constructor === Array ||
                !(!e.prop || e.prop.constructor !== Array) ||
                !!Array.isArray(e) ||
                "[object Array]" === Object.prototype.toString.call(e),
            appVersiLabel: (e, a) => {
                let t = "";
                if (
                    (void 0 !== a &&
                        (("string" != typeof a && "number" != typeof a) ||
                            (null === a && "" === $.trim(a)) ||
                            (e = a)),
                    null !== e || "" !== $.trim(e))
                )
                    if (0 !== e) {
                        let a = $.trim(e),
                            i = a.split("."),
                            n = "";
                        i.length >= 1 &&
                            ((n =
                                1 === i.length
                                    ? i[0] + ".0.0"
                                    : 2 === i.length
                                    ? i[0] + "." + i[1] + ".0"
                                    : a),
                            (t =
                                '<br/><span class="m-badge m-badge--metal m-badge--wide m--font-boldest"><span class="m-badge m-badge--info m-badge--dot"></span>&nbsp;v' +
                                n +
                                "</span>"));
                    } else
                        t =
                            '<br/><span class="m-badge m-badge--metal m-badge--wide m--font-boldest"><span class="m-badge m-badge--warning m-badge--dot"></span>&nbsp;v81.0.0+1</span>';
                return "undefined" != typeof arguments &&
                    arguments.length > 1 &&
                    "" !== $.trim(t)
                    ? Handlebars.SafeString(t)
                    : t;
            },
            tampilNik: (e) => SiakDev.siakBigInt(e).value,
        },
        m = (e) => {
            let t = $(e),
                i = new Date(),
                n = $("img.siakImage", t);
            n.each((e, t) => {
                let r = $(t);
                0 === r.attr("src").indexOf("siakImage") &&
                    r.attr("src", a + r.attr("src") + "&_=" + i.getTime()),
                    n.on("error", (e) => {
                        e.stopPropagation(), e.stopImmediatePropagation();
                        let a = $(e.currentTarget),
                            t =
                                -1 !=
                                $.inArray($.trim(a.data("klmin")), [
                                    "1",
                                    "2",
                                    1,
                                    2,
                                ])
                                    ? $.trim(a.data("klmin")) + ".png"
                                    : "0.png";
                        a.attr("src", "minduk/img/" + t);
                    });
                let s = r.closest("a");
                r.bind("contextmenu", (e) => (e.preventDefault(), !1)),
                    s.bind("contextmenu", (e) => (e.preventDefault(), !1));
            });
        },
        u = (e) => {
            let a = $(e),
                t = ["0", "== PILIHAN =="];
            a.data("default") && (t = a.data("default"));
            let i = a.data("sect");
            if (
                (a.append(
                    $("<option></option>").attr("value", t[0]).text(t[1])
                ),
                void 0 !== s[i])
            ) {
                let e = s[i];
                for (let t = 0; t < e.length; t++)
                    $.each(e[t], function (e, t) {
                        a.append(
                            $("<option></option>")
                                .attr("value", e)
                                .text(e + " - " + t)
                        );
                    });
            }
        },
        f = (e) => {
            let a = $(e),
                t = ["0", "== PILIHAN =="];
            a.data("default") && (t = a.data("default"));
            let i = a.data("sect");
            if (
                (a.append(
                    $("<option></option>").attr("value", t[0]).text(t[1])
                ),
                void 0 !== o[i])
            ) {
                let e = o[i];
                for (let t = 0; t < e.length; t++)
                    $.each(e[t], function (e, t) {
                        a.append(
                            $("<option></option>")
                                .attr("value", e)
                                .text(e + " - " + t)
                        );
                    });
            }
        },
        b = {
            SELECT: function (e, a) {
                let t = $(e);
                if (
                    (t.hasClass("ref_wni") &&
                        0 == $("option", t).length &&
                        u(t),
                    t.hasClass("ref_wna") && 0 == $("option", t).length && f(t),
                    "string" == typeof a ||
                        "number" == typeof a ||
                        "bigint" == typeof a)
                )
                    if (
                        ("bigint" == typeof a && (a = a.toString()),
                        0 == $("option[value!='0']", t).length)
                    )
                        t.attr("data-value", a).data("value", a);
                    else if (0 == $("option[value='" + a + "']", t).length) {
                        let e = t.data("default");
                        t.val(e[0]);
                    } else t.val(a);
                else if (null == a) {
                    if ((t.val("0"), t.data("default"))) {
                        let e = t.data("default");
                        t.append(
                            $("<option></option>")
                                .attr("value", e[0])
                                .text(e[1])
                        ),
                            t.val(e[0]);
                    }
                } else {
                    if ((t.empty(), void 0 !== a.value))
                        t.append(
                            $("<option></option>")
                                .attr("value", a.value)
                                .text(a.text)
                        ),
                            t.val(a.value);
                    else {
                        if (t.data("default")) {
                            let e = t.data("default");
                            t.append(
                                $("<option></option>")
                                    .attr("value", e[0])
                                    .text(e[1])
                            );
                        }
                        if (t.is(":not([data-sumber='user'])"))
                            for (let e = 0; e < a.length; e++)
                                $.each(a[e], function (e, a) {
                                    if (
                                        "string" == typeof a ||
                                        "number" == typeof a
                                    ) {
                                        let i = $("<option></option>").attr(
                                            "value",
                                            e
                                        );
                                        t.hasClass("dropdown_wilayah") ||
                                        (!t.hasClass("ref_wni") &&
                                            t.is("[data-default]")) ||
                                        (!t.hasClass("ref_wna") &&
                                            t.is("[data-default]"))
                                            ? i.text(a + " (" + e + ")")
                                            : i.text(a),
                                            t.append(i);
                                    } else
                                        t.append(
                                            $("<option " + a[1] + "></option>")
                                                .attr("value", e)
                                                .text(a[0])
                                        );
                                });
                    }
                    if (t.data("value"))
                        if (
                            $("option[value='" + t.data("value") + "']", t)
                                .length > 0
                        )
                            t.val(t.data("value")), t.removeAttr("data-value");
                        else {
                            let e = t.data("default");
                            e && t.val(e[0]);
                        }
                    else
                        0 == $("option[selected]", t).length &&
                            t.prop("selectedIndex", 0);
                }
                if (t.data("valid"))
                    if (t.data("default")) {
                        let e = t.data("default");
                        t.val() != e[0] && t.select_readonly();
                    } else t.select_readonly();
                else t.select_readonly(!1);
                t.hasClass("m_selectpicker") &&
                    SiakClient.reInitSelectPicker(t);
            },
            INPUT: function (e, a) {
                let t = $(e);
                "string" == typeof a ||
                "number" == typeof a ||
                "bigint" == typeof a
                    ? t.val(a)
                    : null == a && t.val(""),
                    t.data("valid")
                        ? t.prop("readonly", !0)
                        : t.prop("readonly", !1);
            },
            IMG: function (e, a) {
                let t = $(e);
                "string" == typeof a || "number" == typeof a
                    ? (a = $.trim(a)).startsWith("siakImage/view/")
                        ? (t.prop("src", a),
                          t.addClass("siakImage"),
                          m($(t.parent())))
                        : t.prop("src", "data:image/jpeg;base64, " + a)
                    : null == a && t.html("");
            },
            IFRAME: function (e, a) {
                let t = $(e);
                if (t.hasClass("pdf_preview_capil"))
                    if (
                        ($("#" + t.attr("id"))
                            .closest(".m-section__content")
                            .removeData("urlgetpdf")
                            .data(
                                "urlgetpdf",
                                "/previewCapil/pdf/print/getFile?file=" + a
                            ),
                        t.data("usenative"))
                    )
                        if ("undefined" != typeof PDFObject)
                            if (PDFObject.supportsPDFs) {
                                (i = new XMLHttpRequest()).open(
                                    "GET",
                                    "/previewCapil/pdf/print/getFile?file=" + a,
                                    !0
                                ),
                                    (i.responseType = "arraybuffer"),
                                    (i.onload = function (e) {
                                        if (200 == this.status) {
                                            var i = new Blob([this.response], {
                                                    type: "application/pdf",
                                                }),
                                                n = URL.createObjectURL(i),
                                                r = {
                                                    id: t.attr("id"),
                                                    pdfOpenParams: {
                                                        navpanes: 0,
                                                        toolbar: 0,
                                                        statusbar: 0,
                                                        view: "FitH",
                                                        zoom: 100,
                                                    },
                                                    forceIframe: !0,
                                                    PDFJS_URL:
                                                        "/minduk/plugins/pdfjs/web/preview_cetak.html",
                                                },
                                                s = $(
                                                    "#" + t.attr("id")
                                                ).closest(
                                                    ".m-section__content"
                                                );
                                            s
                                                .removeData("urlgetpdf")
                                                .data(
                                                    "urlgetpdf",
                                                    "/previewCapil/pdf/print/getFile?file=" +
                                                        a
                                                ),
                                                PDFObject.embed(n, s, r);
                                        }
                                    }),
                                    i.send();
                            } else {
                                let e = encodeURIComponent(
                                    "/previewCapil/pdf/print/getFile?file=" + a
                                );
                                t.attr(
                                    "src",
                                    "/minduk/plugins/pdfjs/web/preview_cetak.html?file=" +
                                        e
                                );
                            }
                        else {
                            let e = encodeURIComponent(
                                "/previewCapil/pdf/print/getFile?file=" + a
                            );
                            t.attr(
                                "src",
                                "/minduk/plugins/pdfjs/web/preview_cetak.html?file=" +
                                    e
                            );
                        }
                    else {
                        let e = encodeURIComponent(
                            "/previewCapil/pdf/print/getFile?file=" + a
                        );
                        t.attr(
                            "src",
                            "/minduk/plugins/pdfjs/web/preview_cetak.html?file=" +
                                e
                        );
                    }
                else if (t.hasClass("pdf_preview_dafduk")) {
                    if (
                        ($("#" + t.attr("id"))
                            .closest(".m-section__content")
                            .removeData("urlgetpdf")
                            .data(
                                "urlgetpdf",
                                "/previewDafduk/pdf/print/getFile?file=" + a
                            ),
                        t.data("usenative"))
                    )
                        if ("undefined" != typeof PDFObject)
                            if (PDFObject.supportsPDFs) {
                                var i;
                                (i = new XMLHttpRequest()).open(
                                    "GET",
                                    "/previewDafduk/pdf/print/getFile?file=" +
                                        a,
                                    !0
                                ),
                                    (i.responseType = "arraybuffer"),
                                    (i.onload = function (e) {
                                        if (200 == this.status) {
                                            var i = new Blob([this.response], {
                                                    type: "application/pdf",
                                                }),
                                                n = URL.createObjectURL(i),
                                                r = {
                                                    id: t.attr("id"),
                                                    pdfOpenParams: {
                                                        navpanes: 0,
                                                        toolbar: 0,
                                                        statusbar: 0,
                                                        view: "FitH",
                                                        zoom: 100,
                                                    },
                                                    forceIframe: !0,
                                                    PDFJS_URL:
                                                        "/minduk/plugins/pdfjs/web/preview_cetak.html",
                                                },
                                                s = $(
                                                    "#" + t.attr("id")
                                                ).closest(
                                                    ".m-section__content"
                                                );
                                            s
                                                .removeData("urlgetpdf")
                                                .data(
                                                    "urlgetpdf",
                                                    "/previewDafduk/pdf/print/getFile?file=" +
                                                        a
                                                ),
                                                PDFObject.embed(n, s, r);
                                        }
                                    }),
                                    i.send();
                            } else {
                                let e = encodeURIComponent(
                                    "/previewDafduk/pdf/print/getFile?file=" + a
                                );
                                t.attr(
                                    "src",
                                    "/minduk/plugins/pdfjs/web/preview_cetak.html?file=" +
                                        e
                                );
                            }
                        else {
                            let e = encodeURIComponent(
                                "/previewDafduk/pdf/print/getFile?file=" + a
                            );
                            t.attr(
                                "src",
                                "/minduk/plugins/pdfjs/web/preview_cetak.html?file=" +
                                    e
                            );
                        }
                    else {
                        let e = encodeURIComponent(
                            "/previewDafduk/pdf/print/getFile?file=" + a
                        );
                        t.attr(
                            "src",
                            "/minduk/plugins/pdfjs/web/preview_cetak.html?file=" +
                                e
                        );
                    }
                } else t.attr("src", a);
            },
            default: function (e, a) {
                let t = $(e);
                if (
                    "string" == typeof a ||
                    "number" == typeof a ||
                    "bigint" == typeof a
                ) {
                    if (t.data("function"))
                        if ("string" == typeof t.data("function"))
                            a = g[t.data("function")](a);
                        else {
                            let e = Object.assign([], t.data("function")),
                                i = e.shift();
                            e.unshift(a), (a = g[i].apply(null, e));
                        }
                    t.html(a);
                } else null === a ? t.html("") : t.html(a);
            },
        },
        k = (e, a) => {
            let t = $(e);
            if (t.is("[data-map]")) {
                var i = t.data("map");
                $.each(i, function (e, i) {
                    if (void 0 !== a[i]) {
                        let n = $("#" + e);
                        n.length > 0 &&
                            (void 0 === b[n.prop("tagName")]
                                ? b.default(n, a[i])
                                : b[n.prop("tagName")](n, a[i]),
                            t.is("[id]") &&
                                (n.removeAttr("data-src").removeData("src"),
                                n
                                    .attr("data-src", t.attr("id"))
                                    .data("src", t.attr("id"))));
                    }
                });
            } else
                $.each(a, function (e, a) {
                    let i = $("#" + e);
                    void 0 === b[i.prop("tagName")]
                        ? b.default(i, a)
                        : b[i.prop("tagName")](i, a),
                        t.is("[id]") &&
                            (i.removeAttr("data-src").removeData("src"),
                            i
                                .attr("data-src", t.attr("id"))
                                .data("src", t.attr("id")));
                });
        },
        h = {
            hidden_then: {
                kembaliHandler(e) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                    let a = $(e.currentTarget);
                    a.attr("disabled", !1),
                        SiakClient.initAjax(a),
                        SiakClient.initUtil(a),
                        SiakClient.loading_unblock(),
                        a.trigger("reshown");
                },
                reshown(e) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                },
            },
            list_data: {
                afterAjaxSuccess(e) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                    let a = $(e.currentTarget);
                    a.attr("disabled", !1),
                        SiakClient.initAjax(a),
                        SiakClient.initUtil(a),
                        SiakClient.loading_unblock(),
                        a.trigger("ajaxSuccessExtendedHandler");
                },
                ajaxSuccessExtendedHandler(e) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                },
            },
            view_edit: {
                afterAjaxSuccess(e) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                    let a = $(e.currentTarget);
                    SiakClient.initAjax(a),
                        SiakClient.initUtil(a),
                        SiakClient.loading_unblock(),
                        a.trigger("ajaxSuccessExtendedHandler");
                },
                ajaxSuccessExtendedHandler(e) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                },
            },
            view_templ: {
                afterAjaxSuccess(e) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                    let a = $(e.currentTarget);
                    SiakClient.initAjax(a),
                        SiakClient.initUtil(a),
                        SiakClient.loading_unblock(),
                        a.trigger("ajaxSuccessExtendedHandler");
                },
                ajaxSuccessExtendedHandler(e) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                },
            },
            form_login: {
                validasiError(e) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                    let a = $(e.currentTarget);
                    a.attr("disabled", !1),
                        a.data("nonDisable") || SiakClient.disable_form(a);
                },
                ajaxErrorElement(e, a) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                    let t = $(e.currentTarget);
                    if (
                        (t.attr("disabled", !1),
                        0 !== a.status ||
                            ("" !== a.statusText && "error" !== a.statusText))
                    ) {
                        if (
                            (a.getResponseHeader("content-type") || "").indexOf(
                                "application/json"
                            ) >= 0
                        ) {
                            let e = SiakDev.JSONBig.parse(a.responseText),
                                i = "Tidak bisa login";
                            void 0 !== e.message &&
                                ((i = e.message), delete e.message),
                                SiakClient.peringatan_inline(i, t);
                        } else SiakClient.peringatan_inline(a.responseText, t);
                    } else SiakClient.peringatan_inline(htmltroubleshooting, t);
                    t.removeData("redirect"), t.trigger("afterMessageError");
                },
                ajaxSuccessElement(e, a) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                    let t = $(e.currentTarget);
                    if (
                        (t
                            .removeData("redirect")
                            .data(
                                "redirect",
                                "window.location.replace('menu.html')"
                            ),
                        a
                            .getResponseHeader("content-type")
                            .indexOf("application/json") >= 0)
                    ) {
                        let e = SiakDev.JSONBig.parse(a.responseText);
                        void 0 !== e.javascript &&
                            (t
                                .removeData("redirect")
                                .data("redirect", e.javascript),
                            delete e.javascript),
                            (c.data = e),
                            SiakLocalStorage.create(i, c)
                                .then(() => {
                                    setTimeout(() => {
                                        SiakClient.loading_block(),
                                            t.trigger("afterAjaxSuccess");
                                    }, 1e3);
                                })
                                .catch(() => {
                                    SiakClient.peringatan_inline(
                                        "Browser is not supported",
                                        t
                                    ),
                                        t.trigger("afterMessageError");
                                });
                    } else
                        SiakClient.peringatan_inline(
                            "Browser is not supported",
                            t
                        ),
                            t.trigger("afterMessageError");
                },
                afterAjaxSuccess(e) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                    let a = $(e.currentTarget);
                    a.attr("disabled", !1),
                        SiakClient.loading_unblock(),
                        SiakLocalStorage.read(i, c.key)
                            .then((e) => {
                                null !== e.data.username
                                    ? window.eval.call(null, a.data("redirect"))
                                    : window.eval.call(
                                          null,
                                          'window.location.replace("index.html")'
                                      );
                            })
                            .catch(() => {
                                window.eval.call(
                                    null,
                                    'window.location.replace("index.html")'
                                );
                            });
                },
                afterMessageError(e) {
                    e.stopPropagation(),
                        e.stopImmediatePropagation(),
                        $(e.currentTarget).attr("disabled", !1),
                        SiakClient.loading_unblock();
                },
            },
            form_cari: {
                validasiError(e) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                    let a = $(e.currentTarget);
                    a.attr("disabled", !1),
                        a.data("nonDisable") || SiakClient.disable_form(a);
                },
                ajaxErrorElement(a, t) {
                    a.stopPropagation(), a.stopImmediatePropagation();
                    let n = $(a.currentTarget);
                    if (
                        0 !== t.status ||
                        ("" !== t.statusText && "error" !== t.statusText)
                    )
                        if (-1 !== jQuery.inArray(t.status, e)) {
                            SiakClient.loading_block();
                            let e = "Unauthorize";
                            t
                                .getResponseHeader("content-type")
                                .indexOf("application/json") >= 0 &&
                                t.responseJSON &&
                                void 0 !== t.responseJSON.message &&
                                (e = t.responseJSON.message),
                                SiakLocalStorage.delete(i, r),
                                swal({
                                    type: "error",
                                    title: e,
                                    showConfirmButton: !1,
                                    timer: 3e3,
                                }).then(() => {
                                    window.eval.call(
                                        null,
                                        'window.location.replace("index.html")'
                                    );
                                });
                        } else {
                            if ((n.attr("disabled", !1), n.data("target"))) {
                                let e = $("#" + n.data("target"));
                                e.empty().off("*");
                                let a = Handlebars.compile(
                                        $("#alertError").html()
                                    ),
                                    i = {
                                        pesan: "Tidak ada data yang dapat ditampilkan",
                                    };
                                if (
                                    t
                                        .getResponseHeader("content-type")
                                        .indexOf("application/json") >= 0
                                ) {
                                    let e = SiakDev.JSONBig.parse(
                                        t.responseText
                                    );
                                    void 0 !== e.message &&
                                        ((i.pesan = e.message),
                                        delete e.message),
                                        void 0 !== e.siakExecTime &&
                                            ((i.siakExecTime = e.siakExecTime),
                                            delete e.siakExecTime);
                                } else i.pesan = t.responseText;
                                let r = a(i);
                                e.html(r),
                                    e.hasClass("list_data")
                                        ? e.trigger("afterAjaxSuccess")
                                        : (SiakClient.initAjax(e),
                                          SiakClient.initUtil(e)),
                                    e.show();
                            }
                            n.trigger("afterMessageError");
                        }
                    else {
                        let e = "Terjadi Kesalahan<br/>" + htmltroubleshooting;
                        SiakClient.peringatan(e, n),
                            n.trigger("afterMessageError");
                    }
                },
                ajaxSuccessElement(e, a) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                    let t = $(e.currentTarget);
                    if (t.data("target")) {
                        let e = $("#" + t.data("target"));
                        if (
                            (e.off("*"),
                            a
                                .getResponseHeader("content-type")
                                .indexOf("application/json") >= 0)
                        ) {
                            let i = t.attr("action") + ".html",
                                n = SiakDev.JSONBigStr.parse(a.responseText),
                                r = "";
                            void 0 !== n.javascript &&
                                ((r = n.javascript), delete n.javascript);
                            let s = "listData";
                            e.data("id-template") &&
                                (s = e.data("id-template")),
                                e.load(i, function () {
                                    let a = Handlebars.compile(
                                        $("#" + s, e).html()
                                    );
                                    n = JSON.parse(
                                        SiakDev.JSONBigStr.stringify(n)
                                    );
                                    let i = a(n);
                                    if ((e.append(i), t.data("hidden"))) {
                                        $("#" + t.data("hidden")).hide();
                                    }
                                    if (void 0 !== n.order) {
                                        let a = n.order,
                                            t =
                                                "&nbsp;<i class='la la-arrow-down'></i>&nbsp;",
                                            i = "sorting_asc";
                                        n.order.endsWith(" desc") &&
                                            ((a = n.order.substring(
                                                0,
                                                n.order.length - 5
                                            )),
                                            (t =
                                                "&nbsp;<i class='la la-arrow-up'></i>&nbsp;"),
                                            (i = "sorting_desc")),
                                            $(
                                                "th.sorting[data-kolom='" +
                                                    a +
                                                    "']",
                                                e
                                            ).append(t),
                                            $(
                                                "th.sorting[data-kolom='" +
                                                    a +
                                                    "']",
                                                e
                                            )
                                                .removeClass("sorting")
                                                .addClass(i);
                                    }
                                    r.length > 0 && window.eval.call(null, r),
                                        e.hasClass("list_data")
                                            ? e.trigger("afterAjaxSuccess")
                                            : (SiakClient.initAjax(e),
                                              SiakClient.initUtil(e)),
                                        e.show();
                                });
                        } else {
                            if ((e.html(a.responseText), t.data("hidden"))) {
                                $("#" + t.data("hidden")).hide();
                            }
                            e.hasClass("list_data")
                                ? e.trigger("afterAjaxSuccess")
                                : (SiakClient.initAjax(e),
                                  SiakClient.initUtil(e)),
                                e.show();
                        }
                    }
                    t.trigger("afterAjaxSuccess");
                },
                afterAjaxSuccess(e) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                    let a = $(e.currentTarget);
                    a.attr("disabled", !1),
                        SiakClient.loading_unblock(),
                        a.trigger("ajaxSuccessExtendedHandler");
                },
                ajaxSuccessExtendedHandler(e) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                },
                afterMessageError(e) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                    let a = $(e.currentTarget);
                    a.attr("disabled", !1),
                        SiakClient.loading_unblock(),
                        a.trigger("ajaxErrorExtendedHandler");
                },
                ajaxErrorExtendedHandler(e) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                },
            },
            form_input: {
                validasiError(e) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                    let a = $(e.currentTarget);
                    a.attr("disabled", !1),
                        a.data("nonDisable") || SiakClient.disable_form(a);
                },
                konfirmasiOk(e) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                    let a = $(e.currentTarget);
                    a.attr("disabled", !1), a.trigger("submit", !0);
                },
                konfirmasiCancel(e) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                    let a = $(e.currentTarget);
                    a.attr("disabled", !1),
                        a.data("nonDisable") || SiakClient.disable_form(a);
                },
                ajaxErrorElement(a, t) {
                    a.stopPropagation(), a.stopImmediatePropagation();
                    let n = $(a.currentTarget);
                    if (
                        (n.attr("disabled", !1),
                        n.data("nonDisable") || SiakClient.disable_form(n),
                        0 !== t.status ||
                            ("" !== t.statusText && "error" !== t.statusText))
                    )
                        if (-1 !== jQuery.inArray(t.status, e)) {
                            SiakClient.loading_block();
                            let e = "Unauthorize";
                            t
                                .getResponseHeader("content-type")
                                .indexOf("application/json") >= 0 &&
                                t.responseJSON &&
                                void 0 !== t.responseJSON.message &&
                                (e = t.responseJSON.message),
                                SiakLocalStorage.delete(i, r),
                                swal({
                                    type: "error",
                                    title: e,
                                    showConfirmButton: !1,
                                    timer: 3e3,
                                }).then(() => {
                                    window.eval.call(
                                        null,
                                        'window.location.replace("index.html")'
                                    );
                                });
                        } else {
                            if (
                                t.getResponseHeader("content-type") &&
                                t
                                    .getResponseHeader("content-type")
                                    .indexOf("application/json") >= 0
                            ) {
                                let e = SiakDev.JSONBig.parse(t.responseText),
                                    i = "";
                                void 0 !== e.javascript &&
                                    ((i = e.javascript), delete e.javascript);
                                let r = "Kode CAPTCHA tidak sesuai";
                                void 0 !== e.message &&
                                    ((r = e.message), delete e.message);
                                let s = -1;
                                void 0 !== e.siakExecTime &&
                                    ((s = e.siakExecTime),
                                    delete e.siakExecTime),
                                    SiakClient.peringatan(r, n),
                                    i.length > 0 && window.eval.call(null, i),
                                    s >= 0 &&
                                        SiakClient.notifyExecTime(
                                            a,
                                            s,
                                            "danger"
                                        );
                            } else SiakClient.peringatan(t.responseText, n);
                            n.trigger("afterMessageError");
                        }
                    else {
                        let e = "Terjadi Kesalahan<br/>" + htmltroubleshooting;
                        SiakClient.peringatan(e, n),
                            n.trigger("afterMessageError");
                    }
                },
                ajaxSuccessElement(e, a) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                    let t = $(e.currentTarget);
                    if (t.data("target")) {
                        let i = $("#" + t.data("target"));
                        if ((i.off("*"), t.data("hidden"))) {
                            $("#" + t.data("hidden")).hide();
                        }
                        if (
                            a
                                .getResponseHeader("content-type")
                                .indexOf("application/json") >= 0
                        ) {
                            if (t.data("server")) {
                                let n =
                                        new URL(
                                            "https://dukancil/" +
                                                t.attr("action")
                                        ).pathname.substr(1) + ".html",
                                    r = SiakDev.JSONBig.parse(a.responseText),
                                    s = "";
                                void 0 !== r.javascript &&
                                    ((s = r.javascript), delete r.javascript);
                                let o = "Ok";
                                void 0 !== r.message &&
                                    ((o = r.message), delete r.message);
                                let l = -1;
                                void 0 !== r.siakExecTime &&
                                    ((l = r.siakExecTime),
                                    delete r.siakExecTime),
                                    i.load(n, function () {
                                        if (i.hasClass("view_templ")) {
                                            r = JSON.parse(
                                                SiakDev.JSONBigStr.stringify(r)
                                            );
                                            let e = "tabData";
                                            i.data("id-template") &&
                                                (e = i.data("id-template"));
                                            let a = Handlebars.compile(
                                                $("#" + e, i).html()
                                            )(r);
                                            i.append(a),
                                                i.trigger("afterAjaxSuccess");
                                        } else k(i, r), i.hasClass("view_edit") ? i.trigger("afterAjaxSuccess") : (SiakClient.initAjax(i), SiakClient.initUtil(i));
                                        i.show(),
                                            s.length > 0 &&
                                                window.eval.call(null, s),
                                            l >= 0 &&
                                                SiakClient.notifyExecTime(
                                                    e,
                                                    l,
                                                    "success"
                                                );
                                    });
                            }
                        } else
                            a
                                .getResponseHeader("content-type")
                                .indexOf("text/html") >= 0 &&
                                (i.html(a.responseText),
                                i.hasClass("view_templ") ||
                                i.hasClass("view_edit") ||
                                i.hasClass("list_data")
                                    ? i.trigger("afterAjaxSuccess")
                                    : (SiakClient.initAjax(i),
                                      SiakClient.initUtil(i)),
                                i.show());
                        t.trigger("afterAjaxSuccess");
                    } else {
                        if (
                            a
                                .getResponseHeader("content-type")
                                .indexOf("application/json") >= 0
                        ) {
                            let i = SiakDev.JSONBig.parse(a.responseText),
                                n = "";
                            void 0 !== i.javascript &&
                                ((n = i.javascript), delete i.javascript);
                            let r = "Ok";
                            void 0 !== i.message &&
                                ((r = i.message), delete i.message);
                            let s = -1;
                            void 0 !== i.siakExecTime &&
                                ((s = i.siakExecTime), delete i.siakExecTime),
                                SiakClient.sukses(r, t),
                                k(t, i),
                                n.length > 0 && window.eval.call(null, n),
                                s >= 0 &&
                                    SiakClient.notifyExecTime(e, s, "success");
                        } else SiakClient.sukses(a.responseText, t);
                        t.trigger("afterAjaxSuccess"),
                            $(
                                'input[type="submit"], button[type="submit"]',
                                t
                            ).attr("disabled", !0);
                    }
                },
                afterAjaxSuccess(e) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                    let a = $(e.currentTarget);
                    a.attr("disabled", !1),
                        a.data("nonDisable") || SiakClient.disable_form(a),
                        SiakClient.loading_unblock(),
                        a.trigger("ajaxSuccessExtendedHandler");
                },
                afterMessageSuccess(e) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                    let a = $(e.currentTarget);
                    if (a.data("refresh")) {
                        a.trigger("ajaxSuccessExtendedHandler");
                        let e = $("#" + a.data("refresh"));
                        e.is("form") ? e.submit() : e.click();
                    } else a.trigger("ajaxSuccessExtendedHandler");
                },
                ajaxSuccessExtendedHandler(e) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                },
                afterMessageError(e) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                    let a = $(e.currentTarget);
                    SiakClient.loading_unblock(),
                        a.trigger("ajaxErrorExtendedHandler");
                },
                ajaxErrorExtendedHandler(e) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                },
            },
            form_default: {
                validasiError(e) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                    let a = $(e.currentTarget);
                    a.attr("disabled", !1),
                        a.data("nonDisable") || SiakClient.disable_form(a);
                },
                ajaxErrorElement(a, t) {
                    a.stopPropagation(), a.stopImmediatePropagation();
                    let n = $(a.currentTarget);
                    if (
                        0 !== t.status ||
                        ("" !== t.statusText && "error" !== t.statusText)
                    )
                        if (-1 !== jQuery.inArray(t.status, e)) {
                            SiakClient.loading_block();
                            let e = "Unauthorize";
                            t
                                .getResponseHeader("content-type")
                                .indexOf("application/json") >= 0 &&
                                t.responseJSON &&
                                void 0 !== t.responseJSON.message &&
                                (e = t.responseJSON.message),
                                SiakLocalStorage.delete(i, r),
                                swal({
                                    type: "error",
                                    title: e,
                                    showConfirmButton: !1,
                                    timer: 3e3,
                                }).then(() => {
                                    window.eval.call(
                                        null,
                                        'window.location.replace("index.html")'
                                    );
                                });
                        } else {
                            if (
                                (n.attr("disabled", !1),
                                n.data("nonDisable") ||
                                    SiakClient.disable_form(n),
                                t.getResponseHeader("content-type") &&
                                    t
                                        .getResponseHeader("content-type")
                                        .indexOf("application/json") >= 0)
                            ) {
                                let e = SiakDev.JSONBig.parse(t.responseText),
                                    i = "";
                                void 0 !== e.javascript &&
                                    ((i = e.javascript), delete e.javascript);
                                let r = "Kode CAPTCHA tidak sesuai";
                                void 0 !== e.message &&
                                    ((r = e.message), delete e.message);
                                let s = -1;
                                void 0 !== e.siakExecTime &&
                                    ((s = e.siakExecTime),
                                    delete e.siakExecTime),
                                    SiakClient.peringatan(r, n),
                                    i.length > 0 && window.eval.call(null, i),
                                    s >= 0 &&
                                        SiakClient.notifyExecTime(
                                            a,
                                            s,
                                            "danger"
                                        );
                            } else SiakClient.peringatan(t.responseText, n);
                            n.trigger("afterMessageError");
                        }
                    else {
                        let e = "Terjadi Kesalahan<br/>" + htmltroubleshooting;
                        SiakClient.peringatan(e, n);
                    }
                },
                ajaxSuccessElement(e, a) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                    let t = $(e.currentTarget);
                    if (t.data("target")) {
                        let i = $("#" + t.data("target"));
                        if ((i.off("*"), t.data("hidden"))) {
                            $("#" + t.data("hidden")).hide();
                        }
                        if (
                            a
                                .getResponseHeader("content-type")
                                .indexOf("application/json") >= 0
                        ) {
                            if (t.data("server")) {
                                let t =
                                        new URL(
                                            "https://dukancil/" +
                                                $(this).attr("action")
                                        ).pathname.substr(1) + ".html",
                                    n = SiakDev.JSONBig.parse(a.responseText),
                                    r = "";
                                void 0 !== n.javascript &&
                                    ((r = n.javascript), delete n.javascript);
                                let s = "Ok";
                                void 0 !== n.message &&
                                    ((s = n.message), delete n.message);
                                let o = -1;
                                void 0 !== n.siakExecTime &&
                                    ((o = n.siakExecTime),
                                    delete n.siakExecTime),
                                    i.load(t, function () {
                                        if (i.hasClass("view_templ")) {
                                            n = JSON.parse(
                                                SiakDev.JSONBigStr.stringify(n)
                                            );
                                            let e = "tabData";
                                            i.data("id-template") &&
                                                (e = i.data("id-template"));
                                            let a = Handlebars.compile(
                                                $("#" + e, i).html()
                                            )(n);
                                            i.append(a),
                                                i.trigger("afterAjaxSuccess");
                                        } else k(i, n), i.hasClass("view_edit") ? i.trigger("afterAjaxSuccess") : (SiakClient.initAjax(i), SiakClient.initUtil(i));
                                        i.show(),
                                            r.length > 0 &&
                                                window.eval.call(null, r),
                                            o >= 0 &&
                                                SiakClient.notifyExecTime(
                                                    e,
                                                    o,
                                                    "success"
                                                );
                                    });
                            }
                        } else
                            a
                                .getResponseHeader("content-type")
                                .indexOf("text/html") >= 0 &&
                                (i.html(a.responseText),
                                i.hasClass("view_templ") ||
                                i.hasClass("view_edit") ||
                                i.hasClass("list_data")
                                    ? i.trigger("afterAjaxSuccess")
                                    : (SiakClient.initAjax(i),
                                      SiakClient.initUtil(i)),
                                i.show());
                        t.trigger("afterAjaxSuccess");
                    } else {
                        if (
                            a
                                .getResponseHeader("content-type")
                                .indexOf("application/json") >= 0
                        ) {
                            let i = SiakDev.JSONBig.parse(a.responseText),
                                n = "";
                            void 0 !== i.javascript &&
                                ((n = i.javascript), delete i.javascript);
                            let r = "Ok";
                            void 0 !== i.message &&
                                ((r = i.message), delete i.message);
                            let s = -1;
                            void 0 !== i.siakExecTime &&
                                ((s = i.siakExecTime), delete i.siakExecTime),
                                SiakClient.sukses(r, t),
                                k(t, i),
                                n.length > 0 && window.eval.call(null, n),
                                s >= 0 &&
                                    SiakClient.notifyExecTime(e, s, "success");
                        } else SiakClient.sukses(a.responseText, t);
                        t.trigger("afterAjaxSuccess"),
                            $(
                                'input[type="submit"], button[type="submit"]',
                                t
                            ).attr("disabled", !0);
                    }
                },
                afterAjaxSuccess(e) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                    let a = $(e.currentTarget);
                    a.attr("disabled", !1),
                        a.data("nonDisable") || SiakClient.disable_form(a),
                        SiakClient.loading_unblock(),
                        a.trigger("ajaxSuccessExtendedHandler");
                },
                afterMessageSuccess(e) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                    let a = $(e.currentTarget);
                    if (a.data("refresh")) {
                        a.trigger("ajaxSuccessExtendedHandler");
                        let e = $("#" + a.data("refresh"));
                        e.is("form") ? e.submit() : e.click();
                    } else a.trigger("ajaxSuccessExtendedHandler");
                },
                ajaxSuccessExtendedHandler(e) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                },
                afterMessageError(e) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                    let a = $(e.currentTarget);
                    SiakClient.loading_unblock(),
                        a.trigger("ajaxErrorExtendedHandler");
                },
                ajaxErrorExtendedHandler(e) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                },
            },
            form_esign: {
                validasiError(e) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                    let a = $(e.currentTarget);
                    a.attr("disabled", !1),
                        a.data("nonDisable") || SiakClient.disable_form(a);
                },
                ajaxErrorElement(a, t) {
                    a.stopPropagation(), a.stopImmediatePropagation();
                    let n = $(a.currentTarget);
                    if (
                        0 !== t.status ||
                        ("" !== t.statusText && "error" !== t.statusText)
                    )
                        if (-1 !== jQuery.inArray(t.status, e)) {
                            SiakClient.loading_block();
                            let e = "Unauthorize";
                            t
                                .getResponseHeader("content-type")
                                .indexOf("application/json") >= 0 &&
                                t.responseJSON &&
                                void 0 !== t.responseJSON.message &&
                                (e = t.responseJSON.message),
                                SiakLocalStorage.delete(i, r),
                                swal({
                                    type: "error",
                                    title: e,
                                    showConfirmButton: !1,
                                    timer: 3e3,
                                }).then(() => {
                                    window.eval.call(
                                        null,
                                        'window.location.replace("index.html")'
                                    );
                                });
                        } else {
                            if (
                                (n.attr("disabled", !1),
                                n.data("nonDisable") ||
                                    SiakClient.disable_form(n),
                                t.getResponseHeader("content-type") &&
                                    t
                                        .getResponseHeader("content-type")
                                        .indexOf("application/json") >= 0)
                            ) {
                                let e = SiakDev.JSONBig.parse(t.responseText),
                                    i = "";
                                void 0 !== e.javascript &&
                                    ((i = e.javascript), delete e.javascript);
                                let r = "Kode CAPTCHA tidak sesuai";
                                void 0 !== e.message &&
                                    ((r = e.message), delete e.message);
                                let s = -1;
                                void 0 !== e.siakExecTime &&
                                    ((s = e.siakExecTime),
                                    delete e.siakExecTime),
                                    SiakClient.peringatan(r, n),
                                    i.length > 0 && window.eval.call(null, i),
                                    s >= 0 &&
                                        SiakClient.notifyExecTime(
                                            a,
                                            s,
                                            "danger"
                                        );
                            } else SiakClient.peringatan(t.responseText, n);
                            n.trigger("afterMessageError");
                        }
                    else {
                        let e = "Terjadi Kesalahan<br/>" + htmltroubleshooting;
                        SiakClient.peringatan(e, n);
                    }
                },
                ajaxSuccessElement(e, a) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                    let t = $(e.currentTarget);
                    if (t.data("target")) {
                        let i = $("#" + t.data("target"));
                        if ((i.off("*"), t.data("hidden"))) {
                            $("#" + t.data("hidden")).hide();
                        }
                        if (
                            a
                                .getResponseHeader("content-type")
                                .indexOf("application/json") >= 0
                        ) {
                            if (t.data("server")) {
                                let t =
                                        new URL(
                                            "https://dukancil/" +
                                                $(this).attr("action")
                                        ).pathname.substr(1) + ".html",
                                    n = SiakDev.JSONBig.parse(a.responseText),
                                    r = "";
                                void 0 !== n.javascript &&
                                    ((r = n.javascript), delete n.javascript);
                                let s = "Ok";
                                void 0 !== n.message &&
                                    ((s = n.message), delete n.message);
                                let o = -1;
                                void 0 !== n.siakExecTime &&
                                    ((o = n.siakExecTime),
                                    delete n.siakExecTime),
                                    i.load(t, function () {
                                        if (i.hasClass("view_templ")) {
                                            n = JSON.parse(
                                                SiakDev.JSONBigStr.stringify(n)
                                            );
                                            let e = "tabData";
                                            i.data("id-template") &&
                                                (e = i.data("id-template"));
                                            let a = Handlebars.compile(
                                                $("#" + e, i).html()
                                            )(n);
                                            i.append(a),
                                                i.trigger("afterAjaxSuccess");
                                        } else k(i, n), i.hasClass("view_edit") ? i.trigger("afterAjaxSuccess") : (SiakClient.initAjax(i), SiakClient.initUtil(i));
                                        i.show(),
                                            r.length > 0 &&
                                                window.eval.call(null, r),
                                            o >= 0 &&
                                                SiakClient.notifyExecTime(
                                                    e,
                                                    o,
                                                    "success"
                                                );
                                    });
                            }
                        } else
                            a
                                .getResponseHeader("content-type")
                                .indexOf("text/html") >= 0 &&
                                (i.html(a.responseText),
                                i.hasClass("view_templ") ||
                                i.hasClass("view_edit") ||
                                i.hasClass("list_data")
                                    ? i.trigger("afterAjaxSuccess")
                                    : (SiakClient.initAjax(i),
                                      SiakClient.initUtil(i)),
                                i.show());
                        t.trigger("afterAjaxSuccess");
                    } else {
                        if (
                            a
                                .getResponseHeader("content-type")
                                .indexOf("application/json") >= 0
                        ) {
                            let i = SiakDev.JSONBig.parse(a.responseText),
                                n = "";
                            void 0 !== i.javascript &&
                                ((n = i.javascript), delete i.javascript);
                            let r = "Ok";
                            void 0 !== i.message &&
                                ((r = i.message), delete i.message);
                            let s = -1;
                            void 0 !== i.siakExecTime &&
                                ((s = i.siakExecTime), delete i.siakExecTime),
                                SiakClient.sukses(r, t),
                                k(t, i),
                                n.length > 0 && window.eval.call(null, n),
                                s >= 0 &&
                                    SiakClient.notifyExecTime(e, s, "success");
                        } else SiakClient.sukses(a.responseText, t);
                        t.trigger("afterAjaxSuccess"),
                            $(
                                'input[type="submit"], button[type="submit"]',
                                t
                            ).attr("disabled", !0);
                    }
                },
                afterAjaxSuccess(e) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                    let a = $(e.currentTarget);
                    a.attr("disabled", !1),
                        a.data("nonDisable") || SiakClient.disable_form(a),
                        SiakClient.loading_unblock(),
                        a.trigger("ajaxSuccessExtendedHandler");
                },
                afterMessageSuccess(e) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                    let a = $(e.currentTarget);
                    if (a.data("refresh")) {
                        a.trigger("ajaxSuccessExtendedHandler");
                        let e = $("#" + a.data("refresh"));
                        e.is("form") ? e.submit() : e.click();
                    } else a.trigger("ajaxSuccessExtendedHandler");
                },
                ajaxSuccessExtendedHandler(e) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                },
                afterMessageError(e) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                    let a = $(e.currentTarget);
                    SiakClient.loading_unblock(),
                        a.trigger("ajaxErrorExtendedHandler");
                },
                ajaxErrorExtendedHandler(e) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                },
            },
            ajaxify: {
                konfirmasiOk(e) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                    let a = $(e.currentTarget);
                    a.prop("disabled", !1), a.trigger("click", !0);
                },
                konfirmasiCancel(e) {
                    e.stopPropagation(),
                        e.stopImmediatePropagation(),
                        $(e.currentTarget).prop("disabled", !1);
                },
                ajaxErrorElement(a, t) {
                    a.stopPropagation(), a.stopImmediatePropagation();
                    let n = $(a.currentTarget);
                    if (
                        0 !== t.status ||
                        ("" !== t.statusText && "error" !== t.statusText)
                    )
                        if (-1 !== jQuery.inArray(t.status, e)) {
                            SiakClient.loading_block();
                            let e = "Unauthorize";
                            t
                                .getResponseHeader("content-type")
                                .indexOf("application/json") >= 0 &&
                                t.responseJSON &&
                                void 0 !== t.responseJSON.message &&
                                (e = t.responseJSON.message),
                                SiakLocalStorage.delete(i, r),
                                swal({
                                    type: "error",
                                    title: e,
                                    showConfirmButton: !1,
                                    timer: 3e3,
                                }).then(() => {
                                    window.eval.call(
                                        null,
                                        'window.location.replace("index.html")'
                                    );
                                });
                        } else {
                            if (
                                t
                                    .getResponseHeader("content-type")
                                    .indexOf("application/json") >= 0
                            ) {
                                let e = SiakDev.JSONBig.parse(t.responseText),
                                    i = "";
                                void 0 !== e.javascript &&
                                    ((i = e.javascript), delete e.javascript);
                                let r = "Kesalahan pada client";
                                void 0 !== e.message &&
                                    ((r = e.message), delete e.message);
                                let s = -1;
                                void 0 !== e.siakExecTime &&
                                    ((s = e.siakExecTime),
                                    delete e.siakExecTime),
                                    SiakClient.peringatan(r, n),
                                    i.length > 0 && window.eval.call(null, i),
                                    s >= 0 &&
                                        SiakClient.notifyExecTime(
                                            a,
                                            s,
                                            "danger"
                                        );
                            } else SiakClient.peringatan(t.responseText);
                            n.trigger("afterMessageError");
                        }
                    else {
                        let e = "Terjadi Kesalahan<br/>" + htmltroubleshooting;
                        SiakClient.peringatan(e, n),
                            n.trigger("afterMessageError");
                    }
                },
                ajaxSuccessElement(e, a) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                    let t = $(e.currentTarget);
                    if (
                        a
                            .getResponseHeader("content-type")
                            .indexOf("text/html") >= 0
                    ) {
                        if (t.data("target")) {
                            let e = $("#" + t.data("target"));
                            if ((e.off("*"), t.data("hidden"))) {
                                $("#" + t.data("hidden")).hide();
                            }
                            e.html(a.responseText),
                                e.hasClass("view_templ") ||
                                e.hasClass("view_edit")
                                    ? e.trigger("afterAjaxSuccess")
                                    : (SiakClient.initAjax(e),
                                      SiakClient.initUtil(e)),
                                e.show();
                        }
                    } else if (
                        a
                            .getResponseHeader("content-type")
                            .indexOf("application/json") >= 0 &&
                        t.data("server")
                    ) {
                        let i =
                                new URL(
                                    "https://dukancil/" + t.attr("href")
                                ).pathname.substr(1) + ".html",
                            n = SiakDev.JSONBig.parse(a.responseText),
                            r = "";
                        void 0 !== n.javascript &&
                            ((r = n.javascript), delete n.javascript);
                        let s = "Ok";
                        void 0 !== n.message &&
                            ((s = n.message), delete n.message);
                        let o = -1;
                        if (
                            (void 0 !== n.siakExecTime &&
                                ((o = n.siakExecTime), delete n.siakExecTime),
                            t.data("target"))
                        ) {
                            let a = $("#" + t.data("target"));
                            if ((a.off("*"), t.data("hidden"))) {
                                $("#" + t.data("hidden")).hide();
                            }
                            a.load(i, function () {
                                if (a.hasClass("view_templ")) {
                                    let e = "tabData";
                                    a.data("id-template") &&
                                        (e = a.data("id-template"));
                                    let t = Handlebars.compile(
                                        $("#" + e, a).html()
                                    )(n);
                                    a.append(t), a.trigger("afterAjaxSuccess");
                                } else k(a, n), a.hasClass("view_edit") ? a.trigger("afterAjaxSuccess") : (SiakClient.initAjax(a), SiakClient.initUtil(a));
                                a.show(),
                                    r.length > 0 && window.eval.call(null, r),
                                    o >= 0 &&
                                        SiakClient.notifyExecTime(
                                            e,
                                            o,
                                            "success"
                                        );
                            });
                        } else
                            SiakClient.sukses(s, t),
                                r.length > 0 && window.eval.call(null, r),
                                o >= 0 &&
                                    SiakClient.notifyExecTime(e, o, "success");
                    }
                    t.trigger("afterAjaxSuccess");
                },
                afterAjaxSuccess(e) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                    let a = $(e.currentTarget);
                    a.attr("disabled", !1),
                        SiakClient.loading_unblock(),
                        a.trigger("ajaxSuccessExtendedHandler");
                },
                afterMessageSuccess(e) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                    let a = $(e.currentTarget);
                    if ((a.attr("disabled", !1), a.data("refresh"))) {
                        a.trigger("ajaxSuccessExtendedHandler");
                        let e = $("#" + a.data("refresh"));
                        e.is("form") ? e.submit() : e.click();
                    } else a.trigger("ajaxSuccessExtendedHandler");
                },
                ajaxSuccessExtendedHandler(e) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                },
                afterMessageError(e) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                    let a = $(e.currentTarget);
                    a.attr("disabled", !1),
                        SiakClient.loading_unblock(),
                        a.trigger("ajaxErrorExtendedHandler");
                },
                ajaxErrorExtendedHandler(e) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                },
            },
            ajax_logout: {
                konfirmasiOk(e) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                    let a = $(e.currentTarget);
                    a.prop("disabled", !1), a.trigger("click", !0);
                },
                konfirmasiCancel(e) {
                    e.stopPropagation(),
                        e.stopImmediatePropagation(),
                        $(e.currentTarget).prop("disabled", !1);
                },
                ajaxErrorElement(e, a) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                    let t = $(e.currentTarget),
                        i = "Terjadi Kesalahan";
                    if (
                        0 !== a.status ||
                        ("" !== a.statusText && "error" !== a.statusText)
                    ) {
                        if (
                            (a.getResponseHeader("content-type") || "").indexOf(
                                "application/json"
                            ) >= 0
                        ) {
                            let e = SiakDev.JSONBig.parse(a.responseText);
                            void 0 !== e.message &&
                                ((i = e.message), delete e.message);
                        } else i = a.responseText;
                    }
                    SiakClient.peringatan(i, t), t.trigger("afterMessageError");
                },
                ajaxSuccessElement(e, a) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                    let t = $(e.currentTarget),
                        n = "Keluar Applikasi";
                    if (
                        0 !== a.status ||
                        ("" !== a.statusText && "error" !== a.statusText)
                    ) {
                        if (
                            (a.getResponseHeader("content-type") || "").indexOf(
                                "application/json"
                            ) >= 0
                        ) {
                            let e = SiakDev.JSONBig.parse(a.responseText);
                            void 0 !== e.message &&
                                ((n = e.message), delete e.message);
                        } else n = a.responseText;
                    } else n = "Mengarahkan ke halaman login";
                    SiakClient.loading_block(),
                        swal({
                            type: "info",
                            title: n,
                            showConfirmButton: !1,
                            timer: 1500,
                        }).then(() => {
                            SiakLocalStorage.delete(i, r),
                                setTimeout(() => {
                                    t.trigger("afterAjaxSuccess");
                                }, 1500);
                        });
                },
                afterAjaxSuccess(e) {
                    e.stopPropagation(),
                        e.stopImmediatePropagation(),
                        SiakClient.loading_unblock(),
                        window.eval.call(
                            null,
                            'window.location.replace("index.html")'
                        );
                },
                afterMessageError(e) {
                    e.stopPropagation(),
                        e.stopImmediatePropagation(),
                        $(e.currentTarget).attr("disabled", !1),
                        SiakClient.loading_unblock();
                },
            },
            cari_biodata: {
                ajaxErrorElement(a, t) {
                    a.stopPropagation(), a.stopImmediatePropagation();
                    let n = $(a.currentTarget);
                    if (
                        (n.data("blockui")
                            ? "none" !== n.data("blockui") &&
                              SiakClient.loading_unblock(n.data("blockui"))
                            : SiakClient.loading_unblock(),
                        0 !== t.status ||
                            ("" !== t.statusText && "error" !== t.statusText))
                    )
                        if (-1 !== jQuery.inArray(t.status, e)) {
                            SiakClient.loading_block();
                            let e = "Unauthorize";
                            t
                                .getResponseHeader("content-type")
                                .indexOf("application/json") >= 0 &&
                                t.responseJSON &&
                                void 0 !== t.responseJSON.message &&
                                (e = t.responseJSON.message),
                                SiakLocalStorage.delete(i, r),
                                swal({
                                    type: "error",
                                    title: e,
                                    showConfirmButton: !1,
                                    timer: 3e3,
                                }).then(() => {
                                    window.eval.call(
                                        null,
                                        'window.location.replace("index.html")'
                                    );
                                });
                        } else {
                            if (
                                t
                                    .getResponseHeader("content-type")
                                    .indexOf("application/json") >= 0
                            ) {
                                let e = SiakDev.JSONBig.parse(t.responseText),
                                    i = "";
                                void 0 !== e.javascript &&
                                    ((i = e.javascript), delete e.javascript);
                                let r = "Kode CAPTCHA tidak sesuai";
                                void 0 !== e.message &&
                                    ((r = e.message), delete e.message);
                                let s = -1;
                                void 0 !== e.siakExecTime &&
                                    ((s = e.siakExecTime),
                                    delete e.siakExecTime),
                                    SiakClient.peringatan(r, n),
                                    i.length > 0 && window.eval.call(null, i),
                                    s >= 0 &&
                                        SiakClient.notifyExecTime(
                                            a,
                                            s,
                                            "danger"
                                        );
                            } else SiakClient.peringatan(t.responseText, n);
                            n.trigger("afterMessageError");
                        }
                    else {
                        let e = "Terjadi Kesalahan<br/>" + htmltroubleshooting;
                        SiakClient.peringatan(e, n),
                            n.trigger("afterMessageError");
                    }
                },
                ajaxSuccessElement(e, a) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                    let t = $(e.currentTarget);
                    if (
                        a
                            .getResponseHeader("content-type")
                            .indexOf("application/json") >= 0
                    ) {
                        let i = SiakDev.JSONBig.parse(a.responseText),
                            n = "";
                        void 0 !== i.javascript &&
                            ((n = i.javascript), delete i.javascript);
                        let r = "Ok";
                        void 0 !== i.message &&
                            ((r = i.message), delete i.message);
                        let s = -1;
                        void 0 !== i.siakExecTime &&
                            ((s = i.siakExecTime), delete i.siakExecTime),
                            k(t, i),
                            n.length > 0 && window.eval.call(null, n),
                            s >= 0 &&
                                SiakClient.notifyExecTime(e, s, "success");
                    } else SiakClient.sukses(a.responseText, t);
                    t.trigger("afterAjaxSuccess");
                },
                afterAjaxSuccess(e) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                    let a = $(e.currentTarget);
                    a.attr("disabled", !1),
                        a.removeClass("cari_biodata").addClass("reset_biodata"),
                        a.data("blockui")
                            ? "none" !== a.data("blockui") &&
                              SiakClient.loading_unblock(a.data("blockui"))
                            : SiakClient.loading_unblock(),
                        a.trigger("ajaxSuccessExtendedHandler");
                },
                afterMessageSuccess(e) {
                    e.stopPropagation(),
                        e.stopImmediatePropagation(),
                        $(e.currentTarget).trigger(
                            "ajaxSuccessExtendedHandler"
                        );
                },
                ajaxSuccessExtendedHandler(e) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                },
                afterMessageError(e) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                    let a = $(e.currentTarget);
                    a.attr("disabled", !1),
                        SiakClient.loading_unblock(),
                        a.trigger("ajaxErrorExtendedHandler");
                },
                ajaxErrorExtendedHandler(e) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                },
            },
            init_wilayah: {
                ajaxErrorElement(e, a) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                    let t = $(e.currentTarget);
                    if (
                        a
                            .getResponseHeader("content-type")
                            .indexOf("application/json") >= 0
                    ) {
                        let i = SiakDev.JSONBig.parse(a.responseText),
                            n = "";
                        void 0 !== i.javascript &&
                            ((n = i.javascript), delete i.javascript);
                        let r = "Kode CAPTCHA tidak sesuai";
                        void 0 !== i.message &&
                            ((r = i.message), delete i.message);
                        let s = -1;
                        void 0 !== i.siakExecTime &&
                            ((s = i.siakExecTime), delete i.siakExecTime),
                            SiakClient.peringatan(r, t),
                            n.length > 0 && window.eval.call(null, n),
                            s >= 0 && SiakClient.notifyExecTime(e, s, "danger");
                    } else SiakClient.peringatan(a.responseText, t);
                },
                ajaxSuccessElement(e, a) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                    let t = $(e.currentTarget);
                    if (
                        a
                            .getResponseHeader("content-type")
                            .indexOf("application/json") >= 0
                    ) {
                        let e = SiakDev.JSONBig.parse(a.responseText),
                            i = "";
                        void 0 !== e.javascript &&
                            ((i = e.javascript), delete e.javascript),
                            k(t, e),
                            i.length > 0 && window.eval.call(null, i);
                    } else SiakClient.sukses(a.responseText, t);
                    t.trigger("afterAjaxSuccess");
                },
                afterAjaxSuccess(e) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                    let a = $(e.currentTarget),
                        t = a.data("map");
                    for (let e in t) {
                        let a = $("#" + e);
                        a.data("value") &&
                            a.removeAttr("data-value").removeData("value");
                    }
                    a.removeClass("init_wilayah");
                },
            },
            dropdown_wilayah: {
                ajaxErrorElement(e, a) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                    let t = $(e.currentTarget);
                    if (
                        a
                            .getResponseHeader("content-type")
                            .indexOf("application/json") >= 0
                    ) {
                        let i = SiakDev.JSONBig.parse(a.responseText),
                            n = "";
                        void 0 !== i.javascript &&
                            ((n = i.javascript), delete i.javascript);
                        let r = "Kode CAPTCHA tidak sesuai";
                        void 0 !== i.message &&
                            ((r = i.message), delete i.message);
                        let s = -1;
                        void 0 !== i.siakExecTime &&
                            ((s = i.siakExecTime), delete i.siakExecTime),
                            SiakClient.peringatan(r, t),
                            n.length > 0 && window.eval.call(null, n),
                            s >= 0 && SiakClient.notifyExecTime(e, s, "danger");
                    } else SiakClient.peringatan(a.responseText, t);
                },
                ajaxSuccessElement(e, a) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                    let t = $(e.currentTarget);
                    if (
                        a
                            .getResponseHeader("content-type")
                            .indexOf("application/json") >= 0
                    ) {
                        let e = SiakDev.JSONBig.parse(a.responseText),
                            i = "";
                        void 0 !== e.javascript &&
                            ((i = e.javascript), delete e.javascript),
                            k(t, e),
                            i.length > 0 && window.eval.call(null, i);
                    } else SiakClient.sukses(a.responseText, t);
                    t.trigger("afterAjaxSuccess");
                },
                afterAjaxSuccess(e) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                    let a = $(e.currentTarget);
                    a.select_readonly(!1),
                        a.trigger("ajaxSuccessExtendedHandler");
                },
                ajaxSuccessExtendedHandler(e) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                },
            },
        },
        v = {},
        S = (e) => {
            let t = $(e),
                i = t.attr("href");
            if (
                (t.attr("disabled", !0),
                SiakClient.loading_block(),
                t.data("server"))
            ) {
                let e = a + i;
                $.ajax({
                    url: e,
                    type: "GET",
                    dataType: "json",
                    element_target: t,
                    cache: !1,
                });
            } else
                $.ajax({
                    url: i,
                    type: "GET",
                    dataType: "html",
                    element_target: t,
                });
        },
        y = (e) => {
            let t = $(e);
            t.data("noblock") || SiakClient.loading_block();
            let i = "POST";
            t.data("method") && (i = t.data("method"));
            let n = t.data("url"),
                r = a + n,
                s = t.data("parameter"),
                o = "";
            for (let e in s) {
                let a = $("#" + s[e]);
                "" == o
                    ? a.is(":input")
                        ? a.data("value")
                            ? (o +=
                                  encodeURIComponent(e) +
                                  "=" +
                                  encodeURIComponent(a.data("value")))
                            : (o +=
                                  encodeURIComponent(e) +
                                  "=" +
                                  encodeURIComponent(a.val()))
                        : (o +=
                              encodeURIComponent(e) +
                              "=" +
                              encodeURIComponent(a.html()))
                    : a.is(":input")
                    ? a.data("value")
                        ? (o +=
                              "&" +
                              encodeURIComponent(e) +
                              "=" +
                              encodeURIComponent(a.data("value")))
                        : (o +=
                              "&" +
                              encodeURIComponent(e) +
                              "=" +
                              encodeURIComponent(a.val()))
                    : (o +=
                          "&" +
                          encodeURIComponent(e) +
                          "=" +
                          encodeURIComponent(a.html()));
            }
            n && $.ajax({ type: i, url: r, data: o, element_target: t });
        },
        x = (e) => {
            let t = $(e),
                i = t.attr("action");
            t.data("action") && (i = t.data("action")), (i = a + i);
            let n = t.attr("method");
            t.data("method") && (n = t.data("method"));
            let r = {};
            r =
                t.is("form") || t.is(":input")
                    ? t.serializeJSON({
                          customTypes: {
                              BigInt: (e) => SiakDev.siakBigInt(e).value,
                          },
                      })
                    : t.find(":input").serializeJSON({
                          customTypes: {
                              BigInt: (e) => SiakDev.siakBigInt(e).value,
                          },
                      });
            let s = SiakDev.JSONBig.stringify(r);
            $.ajax({
                url: i,
                contentType: "application/json; charset=utf-8",
                type: n,
                element_target: t,
                data: s,
            });
        },
        P = (e) => {
            let a = $(e);
            $("select.ref_act:not(:has(option))", a).each(function (e, a) {
                let t = $(a);
                ((e) => {
                    let a = $(e),
                        t = ["0", "== PILIHAN =="];
                    if (
                        (a.data("default") && (t = a.data("default")),
                        a.append(
                            $("<option></option>")
                                .attr("value", t[0])
                                .text(t[1])
                        ),
                        void 0 !== l)
                    ) {
                        let e = l;
                        $.each(e, function (e, t) {
                            "string" == typeof t &&
                                a.append(
                                    $("<option></option>")
                                        .attr("value", e)
                                        .text(t)
                                );
                        });
                    }
                })(t),
                    t.hasClass("m_selectpicker") &&
                        SiakClient.reInitSelectPicker(t);
            });
        },
        C = (e) => {
            let a = $(e);
            $("select.ref_mod:not(:has(option))", a).each(function (e, a) {
                let t = $(a);
                ((e) => {
                    let a = $(e),
                        t = ["0", "== PILIHAN =="];
                    if (
                        (a.data("default") && (t = a.data("default")),
                        a.append(
                            $("<option></option>")
                                .attr("value", t[0])
                                .text(t[1])
                        ),
                        void 0 !== l)
                    ) {
                        let e = l;
                        $.each(e, function (e, t) {
                            if (
                                "object" == typeof t &&
                                void 0 !== t.class &&
                                void 0 !== t.name
                            ) {
                                let i =
                                        '<span class="m-badge m-badge--secondary m-badge--wide m-badge--rounded m--font-boldest2 ' +
                                        t.class +
                                        '">' +
                                        t.name +
                                        "</span>",
                                    n =
                                        '<option value="' +
                                        e +
                                        '" data-content="' +
                                        $.trim(i.replace(/"/g, "'")) +
                                        '">' +
                                        t.name +
                                        "</option>",
                                    r = $.parseHTML(n);
                                a.append(r);
                            }
                        });
                    }
                })(t),
                    t.hasClass("m_selectpicker") &&
                        SiakClient.reInitSelectPicker(t);
            });
        },
        A = (e) => {
            let a = $(e);
            $("select.ref_mod_tte:not(:has(option))", a).each(function (e, a) {
                let t = $(a);
                ((e) => {
                    let a = $(e),
                        t = ["0", "== PILIHAN =="];
                    if (
                        (a.data("default") && (t = a.data("default")),
                        a.append(
                            $("<option></option>")
                                .attr("value", t[0])
                                .text(t[1])
                        ),
                        void 0 !== l)
                    ) {
                        let e = l;
                        $.each(e, function (e, t) {
                            if (
                                "object" == typeof t &&
                                void 0 !== t.class &&
                                void 0 !== t.name
                            ) {
                                let i = [
                                    "ACT_PGIN",
                                    "ACT_PGJN",
                                    "ACT_PGRJ",
                                    "ACT_VERI",
                                    "ACT_VEIN",
                                    "ACT_SIGN",
                                    "ACT_SIFL",
                                    "ACT_VERJ",
                                ];
                                if (-1 !== $.inArray($.trim(e), i)) {
                                    let i =
                                            '<span class="m-badge m-badge--secondary m-badge--wide m-badge--rounded m--font-boldest2 ' +
                                            t.class +
                                            '">' +
                                            t.name +
                                            "</span>",
                                        n =
                                            '<option value="' +
                                            e +
                                            '" data-content="' +
                                            $.trim(i.replace(/"/g, "'")) +
                                            '">' +
                                            t.name +
                                            "</option>",
                                        r = $.parseHTML(n);
                                    a.append(r);
                                }
                            }
                        });
                    }
                })(t),
                    t.hasClass("m_selectpicker") &&
                        SiakClient.reInitSelectPicker(t);
            });
        },
        T = (e) => {
            let a = $(e);
            $("select.ref_modadm:not(:has(option))", a).each(function (e, a) {
                let t = $(a);
                ((e) => {
                    let a = $(e),
                        t = ["0", "== PILIHAN =="];
                    if (
                        (a.data("default") && (t = a.data("default")),
                        a.append(
                            $("<option></option>")
                                .attr("value", t[0])
                                .text(t[1])
                        ),
                        void 0 !== d)
                    ) {
                        let e = d;
                        $.each(e, function (e, t) {
                            "string" == typeof t &&
                                a.append(
                                    $("<option></option>")
                                        .attr("value", e)
                                        .text(t)
                                );
                        });
                    }
                })(t),
                    t.hasClass("m_selectpicker") &&
                        SiakClient.reInitSelectPicker(t);
            });
        },
        j = () => {
            Handlebars.registerHelper("if_authRules", function (e, a) {
                return "Y" == e ? a.fn(this) : a.inverse(this);
            }),
                Handlebars.registerHelper("if_not_online", function (e, a) {
                    return "Y" != e ? a.fn(this) : a.inverse(this);
                }),
                Handlebars.registerHelper(
                    "if_flagBsrePengajuanButtonBatal",
                    function (e, a) {
                        return 9 == e || 11 == e || 12 == e
                            ? a.fn(this)
                            : a.inverse(this);
                    }
                ),
                Handlebars.registerHelper(
                    "if_flagBsreVerifikasiButtonBatal",
                    function (e, a) {
                        return 1 == e ? a.fn(this) : a.inverse(this);
                    }
                ),
                Handlebars.registerHelper(
                    "if_flagBsreVerifikasiButtonTolak",
                    function (e, a) {
                        return 9 == e || 11 == e || 12 == e
                            ? a.fn(this)
                            : a.inverse(this);
                    }
                ),
                Handlebars.registerHelper(
                    "if_flagBsreVerifikasiButtonCetakKutipan",
                    function (e, a, t) {
                        return 4 == e && a.indexOf("K") > -1
                            ? t.fn(this)
                            : t.inverse(this);
                    }
                ),
                Handlebars.registerHelper(
                    "if_flagBsreVerifikasiButtonCetakRegister",
                    function (e, a, t) {
                        return 4 == e && a.indexOf("R") > -1
                            ? t.fn(this)
                            : t.inverse(this);
                    }
                ),
                Handlebars.registerHelper(
                    "if_flagBsrePengajuanButtonCrud",
                    function (e, a) {
                        return null == e ||
                            0 == e ||
                            91 == e ||
                            92 == e ||
                            4 == e ||
                            7 == e ||
                            8 == e ||
                            31 == e
                            ? a.fn(this)
                            : a.inverse(this);
                    }
                ),
                Handlebars.registerHelper(
                    "if_flagBsreVerifikasiButtonCrud",
                    function (e, a) {
                        return 9 == e || 11 == e || 12 == e
                            ? a.fn(this)
                            : a.inverse(this);
                    }
                ),
                Handlebars.registerHelper(
                    "if_flagBsrePembubuhanButtonCrud",
                    function (e, a) {
                        return 1 == e ? a.fn(this) : a.inverse(this);
                    }
                ),
                Handlebars.registerHelper("getBsreInfo", function () {
                    return g.bsreInfo.apply(null, arguments);
                }),
                Handlebars.registerHelper("getBsreLabel", function () {
                    return g.bsreLabel.apply(null, arguments);
                }),
                Handlebars.registerHelper(
                    "getInfoWebPermohonanLabel",
                    function () {
                        return g.infoWebPermohonanLabel.apply(null, arguments);
                    }
                ),
                Handlebars.registerHelper(
                    "getInfoFlushSistemLabel",
                    function () {
                        return g.infoFlushSistemLabel.apply(null, arguments);
                    }
                ),
                Handlebars.registerHelper(
                    "getInfoAlasanLepasPerangkatLabel",
                    function () {
                        return g.infoAlasanLepasPerangkatLabel.apply(
                            null,
                            arguments
                        );
                    }
                ),
                Handlebars.registerHelper(
                    "getInfoPmhDfdBiodataWniLabel",
                    function () {
                        return g.infoPmhDfdBiodataWniLabel.apply(
                            null,
                            arguments
                        );
                    }
                ),
                Handlebars.registerHelper(
                    "getInfoPmhDfdKartuKeluargaLabel",
                    function () {
                        return g.infoPmhDfdKartuKeluargaLabel.apply(
                            null,
                            arguments
                        );
                    }
                ),
                Handlebars.registerHelper(
                    "getBioWargaNegaraLabel",
                    function () {
                        return g.bioWargaNegaraLabel.apply(null, arguments);
                    }
                ),
                Handlebars.registerHelper("getOaImigrasiLabel", function () {
                    return g.oaImigrasiLabel.apply(null, arguments);
                }),
                Handlebars.registerHelper("getBioFlagPindah", function () {
                    return g.bioFlagPindah.apply(null, arguments);
                }),
                Handlebars.registerHelper(
                    "getKkFlagPindahIconLabel",
                    function () {
                        return g.kkFlagPindahIconLabel.apply(null, arguments);
                    }
                ),
                Handlebars.registerHelper(
                    "getBioFlagPindahIconLabel",
                    function () {
                        return g.bioFlagPindahIconLabel.apply(null, arguments);
                    }
                ),
                Handlebars.registerHelper("getBioFlagStatus", function () {
                    return g.bioFlagStatus.apply(null, arguments);
                }),
                Handlebars.registerHelper(
                    "getBioFlagStatusIconLabel",
                    function () {
                        return g.bioFlagStatusIconLabel.apply(null, arguments);
                    }
                ),
                Handlebars.registerHelper(
                    "getMutasiCapilStatusIconLabel",
                    function () {
                        return g.mutasiCapilStatusIconLabel.apply(
                            null,
                            arguments
                        );
                    }
                ),
                Handlebars.registerHelper("getKkTipeLabel", function () {
                    return g.kkTipeLabel.apply(null, arguments);
                }),
                Handlebars.registerHelper(
                    "getUserGroupLevelLabel",
                    function () {
                        return g.userGroupLevelLabel.apply(null, arguments);
                    }
                ),
                Handlebars.registerHelper("getStatusAktifLabel", function () {
                    return g.statusAktifLabel.apply(null, arguments);
                }),
                Handlebars.registerHelper("getYaAtauTidakLabel", function () {
                    return g.yaAtauTidakLabel.apply(null, arguments);
                }),
                Handlebars.registerHelper("isNomor", function () {
                    return g.isNomor.apply(null, arguments);
                }),
                Handlebars.registerHelper("isArray", function () {
                    return g.isArray.apply(null, arguments);
                }),
                Handlebars.registerHelper("getAppVersiLabel", function () {
                    return g.appVersiLabel.apply(null, arguments);
                }),
                Handlebars.registerHelper("getBsreColor", function (e, a) {
                    return 9 == e
                        ? "m-badge--accent"
                        : 91 == e || 92 == e
                        ? "bg-color_marun"
                        : 1 == e
                        ? "bg-color_ungu"
                        : 3 == e
                        ? "bg-color_coklat"
                        : 11 == e || 12 == e
                        ? "bg-color_marun"
                        : 4 == e
                        ? "m-badge--primary"
                        : void 0;
                }),
                Handlebars.registerHelper("if_flagPindah", function (e, a) {
                    return "" == e ||
                        ("1" != e &&
                            "2" != e &&
                            "3" != e &&
                            "4" != e &&
                            "5" != e &&
                            "6" != e &&
                            "9" != e)
                        ? a.inverse(this)
                        : a.fn(this);
                }),
                Handlebars.registerHelper("if_flagAnomali", function (e, a) {
                    return "" != $.trim(e) &&
                        "0" != $.trim(e) &&
                        "1" != $.trim(e) &&
                        "2" != $.trim(e)
                        ? a.fn(this)
                        : a.inverse(this);
                }),
                Handlebars.registerHelper("if_flagMati", function (e, a) {
                    return "" != $.trim(e) && "1" == $.trim(e)
                        ? a.fn(this)
                        : a.inverse(this);
                }),
                Handlebars.registerHelper("if_tidakPindah", function (e, a) {
                    return "2" != $.trim(e) ? a.fn(this) : a.inverse(this);
                }),
                Handlebars.registerHelper(
                    "if_fixPindahKeluar",
                    function (e, a, t) {
                        return "2" != $.trim(e) ||
                            ("4" != $.trim(a) &&
                                "5" != $.trim(a) &&
                                "" != $.trim(a) &&
                                null != $.trim(a))
                            ? t.inverse(this)
                            : t.fn(this);
                    }
                ),
                Handlebars.registerHelper("if_fixStatusKawin", function (e, a) {
                    return "2" == $.trim(e) ||
                        "3" == $.trim(e) ||
                        "4" == $.trim(e)
                        ? a.fn(this)
                        : a.inverse(this);
                }),
                Handlebars.registerHelper("if_pageFixMati01", function (e, a) {
                    return "" != $.trim(e) && "pageFixMati01" == $.trim(e)
                        ? a.fn(this)
                        : a.inverse(this);
                }),
                Handlebars.registerHelper("if_pageFixMati02A", function (e, a) {
                    return "" != $.trim(e) && "pageFixMati02A" == $.trim(e)
                        ? a.fn(this)
                        : a.inverse(this);
                }),
                Handlebars.registerHelper("if_pageFixMati02B", function (e, a) {
                    return "" != $.trim(e) && "pageFixMati02B" == $.trim(e)
                        ? a.fn(this)
                        : a.inverse(this);
                }),
                Handlebars.registerHelper("getInfoFlagPindah", function (e, a) {
                    if ("" != e)
                        return "1" == e
                            ? a +
                                  " dalam proses pindah(Dalam satu Desa/Kelurahan)"
                            : "2" == e
                            ? a + " dalam proses pindah(Antar Desa/Kelurahan)"
                            : "3" == e
                            ? a + " dalam proses pindah(Antar Kecamatan)"
                            : "4" == e
                            ? a + " dalam proses pindah(Antar Kab./Kota)"
                            : "5" == e
                            ? a + " dalam proses pindah(Antar Provinsi)"
                            : "6" == e
                            ? a + " dalam proses pindah(Ke Luar Negeri)"
                            : "9" == e
                            ? a + " Flag Status Mati"
                            : a + " Flag Status tidak diketahui";
                }),
                Handlebars.registerHelper(
                    "if_flagStatusBiodata",
                    function (e, a) {
                        return "0" != e ? a.fn(this) : a.inverse(this);
                    }
                ),
                Handlebars.registerHelper(
                    "getInfoFlagStatusBiodata",
                    function (e) {
                        if ("" != e)
                            return "1" == e
                                ? "Biodata Flag Status Mati"
                                : "2" == e
                                ? "Biodata dalam proses pindah"
                                : "3" == e
                                ? "Pindah ke luar negeri"
                                : "4" == e
                                ? "Duplicate/Indikasi Ganda"
                                : "5" == e
                                ? "Berada di luar negeri"
                                : "7" == e
                                ? "WNI menjadi OA"
                                : "8" == e
                                ? "Telah datang di tujuan"
                                : "9" == e
                                ? "Pembuatan Akta Kelahiran belum dilanjutkan"
                                : "L" == e
                                ? "Anomali"
                                : "K" == e
                                ? "Tidak Aktif"
                                : "Flag Status tidak diketahui";
                    }
                ),
                Handlebars.registerHelper("math", function (e, a, t, i) {
                    return (
                        arguments.length < 4 && ((i = t), (t = a), (a = "+")),
                        {
                            "+": (e = parseFloat(e)) + (t = parseFloat(t)),
                            "-": e - t,
                            "*": e * t,
                            "/": e / t,
                            "%": e % t,
                        }[a]
                    );
                }),
                Handlebars.registerHelper("formatDate", function (e, a, t) {
                    return g.formatDate(e, a, t);
                }),
                Handlebars.registerHelper("splitTgl", function (e) {
                    return g.splitTgl(e);
                }),
                Handlebars.registerHelper("getLembagaEsign", function (e, a) {
                    return g.getLembagaEsign(e, a);
                }),
                Handlebars.registerHelper("descKelamin", function (e) {
                    if (void 0 !== s[801]) {
                        let a = s[801].filter(function (a) {
                            return a.hasOwnProperty(e);
                        });
                        if (1 == a.length) return a[0][e];
                    }
                    return "0";
                }),
                Handlebars.registerHelper("descStatusKawin", function (e) {
                    if (void 0 !== s[601]) {
                        let a = s[601].filter(function (a) {
                            return a.hasOwnProperty(e);
                        });
                        if (1 == a.length) return a[0][e];
                    }
                    return "0";
                }),
                Handlebars.registerHelper("stripEmpty", function (e) {
                    return g.stripEmpty(e);
                }),
                Handlebars.registerHelper("strPad", function (e, a) {
                    return g.pad(e, a);
                }),
                Handlebars.registerHelper("formatNumber", function (e) {
                    return Intl.NumberFormat("id").format(e);
                }),
                Handlebars.registerHelper("refWni", function () {
                    return g.refWni.apply(null, arguments);
                }),
                Handlebars.registerHelper("refWna", function () {
                    return g.refWna.apply(null, arguments);
                }),
                Handlebars.registerHelper("refAction", function () {
                    return g.refAction.apply(null, arguments);
                }),
                Handlebars.registerHelper("refMod", function () {
                    return g.refMod.apply(null, arguments);
                }),
                Handlebars.registerHelper("refModAdm", function () {
                    return g.refModAdm.apply(null, arguments);
                }),
                Handlebars.registerHelper({
                    eq: function (e, a) {
                        return e === a;
                    },
                    ne: function (e, a) {
                        return e !== a;
                    },
                    equ: function (e, a) {
                        return e == a;
                    },
                    neu: function (e, a) {
                        return e != a;
                    },
                    lt: function (e, a) {
                        return e < a;
                    },
                    gt: function (e, a) {
                        return e > a;
                    },
                    lte: function (e, a) {
                        return e <= a;
                    },
                    gte: function (e, a) {
                        return e >= a;
                    },
                    and: function () {
                        return Array.prototype.slice
                            .call(arguments)
                            .every(Boolean);
                    },
                    or: function () {
                        return Array.prototype.slice
                            .call(arguments, 0, -1)
                            .some(Boolean);
                    },
                }),
                Handlebars.registerHelper("tampilNik", () =>
                    g.tampilNik.apply(null, arguments)
                ),
                Handlebars.registerHelper("toJson", function (e) {
                    return SiakDev.JSONBig.stringify(e);
                }),
                Handlebars.registerHelper("asJson", function (e) {
                    return SiakDev.JSONBigStr.parse(e);
                }),
                Handlebars.registerHelper("hideString", function (e, a) {
                    return "string" != typeof e
                        ? e
                        : ((a = void 0 !== a ? a : 1),
                          e.length <= a
                              ? new Array(e.length).join("*") + ""
                              : e.substring(0, e.length - 1 - a) +
                                new Array(a).join("*"));
                });
        },
        w = () => {
            jQuery.validator.addMethod(
                "dateINA",
                function (e, a) {
                    let t = !1;
                    if (moment) {
                        t = moment($.trim(e), "DD-MM-YYYY", !0).isValid();
                    } else {
                        if (/^\d{1,2}-\d{1,2}-\d{4}$/.test(e)) {
                            let a = e.split("-"),
                                i = parseInt(a[0], 10),
                                n = parseInt(a[1], 10),
                                r = parseInt(a[2], 10),
                                s = new Date(r, n - 1, i);
                            t =
                                s.getFullYear() === r &&
                                s.getMonth() === n - 1 &&
                                s.getDate() === i;
                        } else t = !1;
                    }
                    return this.optional(a) || t;
                },
                "Please enter a correct date"
            );
            var e = "";
            jQuery.validator.addMethod(
                "input_tgl_minimum",
                function (a, t) {
                    var i = !1,
                        n = new Date(),
                        r = new Date(),
                        s = a.split("-"),
                        o = p(),
                        l = o.split("-");
                    return (
                        n.setFullYear(
                            parseInt(s[2], 10),
                            parseInt(s[1], 10) - 1,
                            parseInt(s[0], 10)
                        ),
                        r.setFullYear(
                            parseInt(l[2], 10),
                            parseInt(l[1], 10) - 1,
                            parseInt(l[0], 10)
                        ),
                        n > r
                            ? (e =
                                  $(t).data("pesan") +
                                  " (" +
                                  a +
                                  ")<br/><b>melebihi</b> Tanggal sekarang (" +
                                  o +
                                  ")")
                            : (i = !0),
                        this.optional(t) || i
                    );
                },
                function () {
                    return e;
                }
            );
            var a = "";
            jQuery.validator.addMethod(
                "banding_tgl_le",
                function (e, t, i) {
                    var n = !1,
                        r = e.split("-"),
                        s = $(i).val().split("-"),
                        o = new Date(),
                        l = new Date();
                    return (
                        l.setFullYear(
                            parseInt(r[2], 10),
                            parseInt(r[1], 10) - 1,
                            parseInt(r[0], 10)
                        ),
                        o.setFullYear(
                            parseInt(s[2], 10),
                            parseInt(s[1], 10) - 1,
                            parseInt(s[0], 10)
                        ),
                        l <= o
                            ? (a =
                                  $(t).data("pesan") +
                                  " (" +
                                  $(t).val() +
                                  ") <b>harus</b> <u>melebihi</u> " +
                                  $(i).data("pesan") +
                                  " (" +
                                  $(i).val() +
                                  ")")
                            : (n = !0),
                        this.optional(t) || n
                    );
                },
                function () {
                    return a;
                }
            );
            var t = "";
            jQuery.validator.addMethod(
                "banding_tgl_lt",
                function (e, a, i) {
                    var n = !1,
                        r = e.split("-"),
                        s = $(i).val().split("-"),
                        o = new Date(),
                        l = new Date();
                    return (
                        l.setFullYear(
                            parseInt(r[2], 10),
                            parseInt(r[1], 10) - 1,
                            parseInt(r[0], 10)
                        ),
                        o.setFullYear(
                            parseInt(s[2], 10),
                            parseInt(s[1], 10) - 1,
                            parseInt(s[0], 10)
                        ),
                        l < o
                            ? (t =
                                  $(a).data("pesan") +
                                  " (" +
                                  $(a).val() +
                                  ") <b>harus</b> <u>melebihi</u> atau <u>sama</u> dengan " +
                                  $(i).data("pesan") +
                                  " (" +
                                  $(i).val() +
                                  ")")
                            : (n = !0),
                        this.optional(a) || n
                    );
                },
                function () {
                    return t;
                }
            );
            var i = "";
            jQuery.validator.addMethod(
                "banding_tgl_ge",
                function (e, a, t) {
                    var n = !1,
                        r = e.split("-"),
                        s = $(t).val().split("-"),
                        o = new Date(),
                        l = new Date();
                    return (
                        l.setFullYear(
                            parseInt(r[2], 10),
                            parseInt(r[1], 10) - 1,
                            parseInt(r[0], 10)
                        ),
                        o.setFullYear(
                            parseInt(s[2], 10),
                            parseInt(s[1], 10) - 1,
                            parseInt(s[0], 10)
                        ),
                        l >= o
                            ? (i =
                                  $(a).data("pesan") +
                                  " (" +
                                  $(a).val() +
                                  ") <b>tidak boleh</b> <u>melebihi</u> atau <u>sama</u> dengan " +
                                  $(t).data("pesan") +
                                  " (" +
                                  $(t).val() +
                                  ")")
                            : (n = !0),
                        this.optional(a) || n
                    );
                },
                function () {
                    return i;
                }
            );
            var n = "";
            jQuery.validator.addMethod(
                "banding_tgl_gt",
                function (e, a, t) {
                    var i = !1,
                        r = e.split("-"),
                        s = $(t).val().split("-"),
                        o = new Date(),
                        l = new Date();
                    return (
                        l.setFullYear(
                            parseInt(r[2], 10),
                            parseInt(r[1], 10) - 1,
                            parseInt(r[0], 10)
                        ),
                        o.setFullYear(
                            parseInt(s[2], 10),
                            parseInt(s[1], 10) - 1,
                            parseInt(s[0], 10)
                        ),
                        l > o
                            ? (n =
                                  $(a).data("pesan") +
                                  " (" +
                                  $(a).val() +
                                  ") <b>tidak boleh</b> <u>melebihi</u> " +
                                  $(t).data("pesan") +
                                  " (" +
                                  $(t).val() +
                                  ")")
                            : (i = !0),
                        this.optional(a) || i
                    );
                },
                function () {
                    return n;
                }
            ),
                jQuery.validator.addMethod(
                    "emailcustom",
                    function (e, a) {
                        var t = !1;
                        return (
                            (t =
                                !!/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(
                                    e
                                )),
                            this.optional(a) || t
                        );
                    },
                    "Invalid email address"
                ),
                jQuery.validator.addMethod(
                    "plus62",
                    function (e, a) {
                        var t = !1;
                        return (
                            (t =
                                !!/^(\(?(?:\+62|62|0)(?:\d{2,3})?\)?)([ .-]?\d{2,4}[ .-]?\d{2,4}[ .-]?\d{2,4})$/.test(
                                    e
                                )),
                            this.optional(a) || t
                        );
                    },
                    "Invalid phone number"
                ),
                jQuery.validator.addMethod(
                    "pukul",
                    function (e, a) {
                        var t = !1;
                        return (
                            (t =
                                !!/^(2[0-3]|[0-1][0-9]):([0-5][0-9])((:[0-5][0-9])?)$/.test(
                                    e
                                )),
                            this.optional(a) || t
                        );
                    },
                    "Invalid Hour"
                ),
                jQuery.validator.addMethod(
                    "ageseventeen",
                    function (e, a) {
                        var t = !1;
                        if (/^\d{1,2}-\d{1,2}-\d{4}$/.test(e)) {
                            var i = new Date(),
                                n = new Date(),
                                r = e.split("-"),
                                s = p().split("-");
                            i.setFullYear(
                                parseInt(r[2], 10),
                                parseInt(r[1], 10) - 1,
                                parseInt(r[0], 10)
                            ),
                                n.setFullYear(
                                    parseInt(s[2], 10),
                                    parseInt(s[1], 10) - 1,
                                    parseInt(s[0], 10)
                                );
                            var o = Math.floor((n - i) / 315576e5);
                            parseInt(o) >= 17 && (t = !0);
                        } else parseInt(e) >= 17 && (t = !0);
                        return this.optional(a) || t;
                    },
                    "Not Seventeen"
                ),
                jQuery.validator.addMethod(
                    "notEqualToGroup",
                    function (e, a, t) {
                        var i = !1,
                            n = $(a).parents("form").find(t),
                            r = e,
                            s = 0;
                        return (
                            $.each(n, (e, a) => {
                                $(a).val() === r && s++;
                            }),
                            s <= 1 && (i = !0),
                            this.optional(a) || i
                        );
                    },
                    jQuery.validator.format("Silahkan isi nilai yang berbeda")
                ),
                jQuery.validator.setDefaults({
                    onkeyup: !1,
                    onclick: !1,
                    onfocusout: !1,
                    errorLabelContainer: "#modal_gagal_hidden ul",
                    wrapper: "li",
                    highlight: function (e) {
                        $(e).closest(".row").addClass("has-danger");
                    },
                    unhighlight: function (e) {
                        $(e).closest(".row").removeClass("has-danger");
                    },
                    focusInvalid: !1,
                    invalidHandler: function (e, a) {
                        let t = $(a.currentForm),
                            i = t.attr("data-tipe")
                                ? t.attr("data-tipe")
                                : "popup",
                            n = $("<ul></ul>");
                        if (
                            (a.errorList.forEach(function (e) {
                                "-" != e.message &&
                                    n.append("<li>" + e.message + "</li>");
                            }),
                            "inline" === i)
                        )
                            t.trigger("validasiError"),
                                SiakClient.peringatan_inline(n, t);
                        else
                            t.trigger("validasiError"),
                                SiakClient.peringatan(n, t);
                    },
                });
        },
        I = (e) => {
            e.selectpicker("destroy"),
                e.removeAttr("data-size").removeData("size"),
                e.attr("data-size", 8).data("size", 8),
                e.removeAttr("data-select-on-tab").removeData("select-on-tab"),
                e.attr("data-select-on-tab", !0).data("select-on-tab", !0),
                e.selectpicker();
        },
        _ = (e) => {
            mUtil.init();
            let a = $(e);
            a.data("top") && mApp.scrollTop(),
                ((e) => {
                    let a = $(e);
                    $(".init_wilayah", a).each(function (e, a) {
                        let t = $(a),
                            i = t.data("map"),
                            n = t.data("url-prefix"),
                            r = {};
                        for (let e in i) r[i[e]] = e;
                        let s = { prop: [], kab: [], kec: [], kel: [] },
                            o = "getProp";
                        t.data("auth") &&
                            Object.keys(s).forEach(function (e) {
                                s[e] = c.data[e].slice(0);
                            });
                        let l = {},
                            d = "user";
                        $.each(i, function (e, a) {
                            let i = $("#" + e);
                            if (i.is("select"))
                                if (
                                    (i
                                        .attr("data-method", "GET")
                                        .data("method", "GET"),
                                    i
                                        .attr("data-noblock", "true")
                                        .data("noblock", !0),
                                    "prop" === a)
                                ) {
                                    if (s.prop.length > 0) {
                                        if ("0" === Object.keys(s.prop[0])[0]) {
                                            let e = [
                                                $.trim(
                                                    Object.keys(s.prop[0])[0]
                                                ),
                                                $.trim(
                                                    s.prop[0][
                                                        Object.keys(
                                                            s.prop[0]
                                                        )[0]
                                                    ]
                                                ),
                                            ];
                                            i.attr(
                                                "data-default",
                                                SiakDev.JSONBigStr.stringify(e)
                                            ).data("default", e);
                                        } else {
                                            let e = [
                                                $.trim(
                                                    Object.keys(s.prop[0])[0]
                                                ),
                                                $.trim(
                                                    s.prop[0][
                                                        Object.keys(
                                                            s.prop[0]
                                                        )[0]
                                                    ] +
                                                        " (" +
                                                        Object.keys(
                                                            s.prop[0]
                                                        )[0] +
                                                        ")"
                                                ),
                                            ];
                                            i.attr(
                                                "data-default",
                                                SiakDev.JSONBigStr.stringify(e)
                                            ).data("default", e);
                                        }
                                        let e = i.data("default");
                                        if (
                                            (i.append(
                                                $("<option></option>")
                                                    .attr("value", e[0])
                                                    .text(e[1])
                                            ),
                                            i.val(e[0]),
                                            (o = "getKab"),
                                            t.is(":not([data-parameter])") &&
                                                (l.NO_PROP = $.trim(
                                                    i.attr("id")
                                                )),
                                            i
                                                .attr("data-sumber", d)
                                                .data("sumber", d),
                                            s[a].shift(),
                                            s[a].length > 0)
                                        ) {
                                            i.is(":not([data-rule-min])") &&
                                                (i
                                                    .attr("data-rule-min", 1)
                                                    .data("rule-min", 1),
                                                i
                                                    .attr(
                                                        "data-msg-min",
                                                        "Provinsi harus dipilih"
                                                    )
                                                    .data(
                                                        "msg-min",
                                                        "Provinsi harus dipilih"
                                                    ),
                                                0 ==
                                                    $(
                                                        "label[for='" +
                                                            i.attr("id") +
                                                            "'] > span.required"
                                                    ).length &&
                                                    1 ==
                                                        $(
                                                            "label[for='" +
                                                                i.attr("id") +
                                                                "']"
                                                        ).length &&
                                                    $(
                                                        "label[for='" +
                                                            i.attr("id") +
                                                            "']"
                                                    ).append(
                                                        $("<span>/<span>")
                                                            .addClass(
                                                                "required"
                                                            )
                                                            .html("*")
                                                    ));
                                            for (
                                                let e = 0;
                                                e < s[a].length;
                                                e++
                                            )
                                                $.each(
                                                    s[a][e],
                                                    function (e, a) {
                                                        let t = $(
                                                            "<option></option>"
                                                        ).attr("value", e);
                                                        t.text(
                                                            a + " (" + e + ")"
                                                        ),
                                                            i.append(t);
                                                    }
                                                );
                                        }
                                    } else {
                                        let e = ["0", "==PILIH PROVINSI=="];
                                        i.attr(
                                            "data-default",
                                            SiakDev.JSONBigStr.stringify(e)
                                        ).data("default", e);
                                        let a = i.data("default");
                                        i.append(
                                            $("<option></option>")
                                                .attr("value", a[0])
                                                .text(a[1])
                                        ),
                                            i.val(a[0]);
                                    }
                                    let e = { NO_PROP: $.trim(i.attr("id")) };
                                    i.attr(
                                        "data-parameter",
                                        SiakDev.JSONBigStr.stringify(e)
                                    ).data("parameter", e);
                                    let p = n + "getKab";
                                    if (
                                        (i.attr("data-url", p).data("url", p),
                                        "undefined" !== r.kab)
                                    ) {
                                        let e = '{"' + r.kab + '":"kab"}';
                                        i.attr("data-map", e).data(
                                            SiakDev.JSONBigStr.parse(e)
                                        );
                                    }
                                } else if ("kab" == a) {
                                    if (s.kab.length > 0) {
                                        if ("0" == Object.keys(s.kab[0])[0]) {
                                            let e = [
                                                $.trim(
                                                    Object.keys(s.kab[0])[0]
                                                ),
                                                $.trim(
                                                    s.kab[0][
                                                        Object.keys(s.kab[0])[0]
                                                    ]
                                                ),
                                            ];
                                            i.attr(
                                                "data-default",
                                                SiakDev.JSONBigStr.stringify(e)
                                            ).data("default", e);
                                        } else {
                                            let e = [
                                                $.trim(
                                                    Object.keys(s.kab[0])[0]
                                                ),
                                                $.trim(
                                                    s.kab[0][
                                                        Object.keys(s.kab[0])[0]
                                                    ] +
                                                        " (" +
                                                        Object.keys(
                                                            s.kab[0]
                                                        )[0] +
                                                        ")"
                                                ),
                                            ];
                                            i.attr(
                                                "data-default",
                                                SiakDev.JSONBigStr.stringify(e)
                                            ).data("default", e);
                                        }
                                        let e = i.data("default");
                                        if (
                                            (i.append(
                                                $("<option></option>")
                                                    .attr("value", e[0])
                                                    .text(e[1])
                                            ),
                                            i.val(e[0]),
                                            i
                                                .attr("data-sumber", d)
                                                .data("sumber", d),
                                            (o = "getKec"),
                                            t.is(":not([data-parameter])") &&
                                                (l.NO_KAB = $.trim(
                                                    i.attr("id")
                                                )),
                                            s[a].shift(),
                                            s[a].length > 0)
                                        ) {
                                            i.is(":not([data-rule-min])") &&
                                                (i
                                                    .attr("data-rule-min", 1)
                                                    .data("rule-min", 1),
                                                i
                                                    .attr(
                                                        "data-msg-min",
                                                        "Kabupaten/Kota harus dipilih"
                                                    )
                                                    .data(
                                                        "msg-min",
                                                        "Kabupaten/Kota harus dipilih"
                                                    ),
                                                0 ==
                                                    $(
                                                        "label[for='" +
                                                            i.attr("id") +
                                                            "'] > span.required"
                                                    ).length &&
                                                    1 ==
                                                        $(
                                                            "label[for='" +
                                                                i.attr("id") +
                                                                "']"
                                                        ).length &&
                                                    $(
                                                        "label[for='" +
                                                            i.attr("id") +
                                                            "']"
                                                    ).append(
                                                        $("<span>/<span>")
                                                            .addClass(
                                                                "required"
                                                            )
                                                            .html("*")
                                                    ));
                                            for (
                                                let e = 0;
                                                e < s[a].length;
                                                e++
                                            )
                                                $.each(
                                                    s[a][e],
                                                    function (e, a) {
                                                        let t = $(
                                                            "<option></option>"
                                                        ).attr("value", e);
                                                        t.text(
                                                            a + " (" + e + ")"
                                                        ),
                                                            i.append(t);
                                                    }
                                                );
                                        }
                                    } else {
                                        let e = [
                                            "0",
                                            "==PILIH KABUPATEN/KOTA==",
                                        ];
                                        i.attr(
                                            "data-default",
                                            SiakDev.JSONBigStr.stringify(e)
                                        ).data("default", e);
                                        let a = i.data("default");
                                        i.append(
                                            $("<option></option>")
                                                .attr("value", a[0])
                                                .text(a[1])
                                        ),
                                            i.val(a[0]);
                                    }
                                    let e = {
                                        NO_PROP: $.trim(r.prop),
                                        NO_KAB: $.trim(i.attr("id")),
                                    };
                                    i.attr(
                                        "data-parameter",
                                        SiakDev.JSONBigStr.stringify(e)
                                    ).data("parameter", e);
                                    let p = n + "getKec";
                                    if (
                                        (i.attr("data-url", p).data("url", p),
                                        "undefined" !== r.kec)
                                    ) {
                                        let e = '{"' + r.kec + '":"kec"}';
                                        i.attr("data-map", e).data(
                                            "map",
                                            SiakDev.JSONBigStr.parse(e)
                                        );
                                    }
                                } else if ("kec" == a) {
                                    if (s.kec.length > 0) {
                                        if ("0" == Object.keys(s.kec[0])[0]) {
                                            let e = [
                                                $.trim(
                                                    Object.keys(s.kec[0])[0]
                                                ),
                                                $.trim(
                                                    s.kec[0][
                                                        Object.keys(s.kec[0])[0]
                                                    ]
                                                ),
                                            ];
                                            i.attr(
                                                "data-default",
                                                SiakDev.JSONBigStr.stringify(e)
                                            ).data("default", e);
                                        } else {
                                            let e = [
                                                $.trim(
                                                    Object.keys(s.kec[0])[0]
                                                ),
                                                $.trim(
                                                    s.kec[0][
                                                        Object.keys(s.kec[0])[0]
                                                    ] +
                                                        " (" +
                                                        Object.keys(
                                                            s.kec[0]
                                                        )[0] +
                                                        ")"
                                                ),
                                            ];
                                            i.attr(
                                                "data-default",
                                                SiakDev.JSONBigStr.stringify(e)
                                            ).data("default", e);
                                        }
                                        let e = i.data("default");
                                        if (
                                            (i.append(
                                                $("<option></option>")
                                                    .attr("value", e[0])
                                                    .text(e[1])
                                            ),
                                            i.val(e[0]),
                                            i
                                                .attr("data-sumber", d)
                                                .data("sumber", d),
                                            (o = "getKel"),
                                            t.is(":not([data-parameter])") &&
                                                (l.NO_KEC = i.attr("id")),
                                            s[a].shift(),
                                            s[a].length > 0)
                                        ) {
                                            i.is(":not([data-rule-min])") &&
                                                (i
                                                    .attr("data-rule-min", 1)
                                                    .data("rule-min", 1),
                                                i
                                                    .attr(
                                                        "data-msg-min",
                                                        "Kecamatan harus dipilih"
                                                    )
                                                    .data(
                                                        "msg-min",
                                                        "Kecamatan harus dipilih"
                                                    ),
                                                0 ==
                                                    $(
                                                        "label[for='" +
                                                            i.attr("id") +
                                                            "'] > span.required"
                                                    ).length &&
                                                    1 ==
                                                        $(
                                                            "label[for='" +
                                                                i.attr("id") +
                                                                "']"
                                                        ).length &&
                                                    $(
                                                        "label[for='" +
                                                            i.attr("id") +
                                                            "']"
                                                    ).append(
                                                        $("<span>/<span>")
                                                            .addClass(
                                                                "required"
                                                            )
                                                            .html("*")
                                                    ));
                                            for (
                                                let e = 0;
                                                e < s[a].length;
                                                e++
                                            )
                                                $.each(
                                                    s[a][e],
                                                    function (e, a) {
                                                        let t = $(
                                                            "<option></option>"
                                                        ).attr("value", e);
                                                        t.text(
                                                            a + " (" + e + ")"
                                                        ),
                                                            i.append(t);
                                                    }
                                                );
                                        }
                                    } else {
                                        let e = ["0", "==PILIH KECAMATAN=="];
                                        i.attr(
                                            "data-default",
                                            SiakDev.JSONBigStr.stringify(e)
                                        ).data("default", e);
                                        let a = i.data("default");
                                        i.append(
                                            $("<option></option>")
                                                .attr("value", a[0])
                                                .text(a[1])
                                        ),
                                            i.val(a[0]);
                                    }
                                    let e = {
                                        NO_PROP: $.trim(r.prop),
                                        NO_KAB: $.trim(r.kab),
                                        NO_KEC: $.trim(i.attr("id")),
                                    };
                                    i.attr(
                                        "data-parameter",
                                        SiakDev.JSONBigStr.stringify(e)
                                    ).data("parameter", e);
                                    let p = n + "getKel";
                                    if (
                                        (i.attr("data-url", p).data("url", p),
                                        "undefined" !== r.kel)
                                    ) {
                                        let e = '{"' + r.kel + '":"kel"}';
                                        i.attr("data-map", e).data(
                                            "map",
                                            SiakDev.JSONBigStr.parse(e)
                                        );
                                    }
                                } else if ("kel" == a)
                                    if (s.kel.length > 0) {
                                        if ("0" == Object.keys(s.kel[0])[0]) {
                                            let e = [
                                                $.trim(
                                                    Object.keys(s.kel[0])[0]
                                                ),
                                                $.trim(
                                                    s.kel[0][
                                                        Object.keys(s.kel[0])[0]
                                                    ]
                                                ),
                                            ];
                                            i.attr(
                                                "data-default",
                                                SiakDev.JSONBigStr.stringify(e)
                                            ).data("default", e);
                                        } else {
                                            let e = [
                                                $.trim(
                                                    Object.keys(s.kel[0])[0]
                                                ),
                                                $.trim(
                                                    s.kel[0][
                                                        Object.keys(s.kel[0])[0]
                                                    ] +
                                                        " (" +
                                                        Object.keys(
                                                            s.kel[0]
                                                        )[0] +
                                                        ")"
                                                ),
                                            ];
                                            i.attr(
                                                "data-default",
                                                SiakDev.JSONBigStr.stringify(e)
                                            ).data("default", e);
                                        }
                                        let e = i.data("default");
                                        if (
                                            (i.append(
                                                $("<option></option>")
                                                    .attr("value", e[0])
                                                    .text(e[1])
                                            ),
                                            i.val(e[0]),
                                            i
                                                .attr("data-sumber", "user")
                                                .data("sumber", "user"),
                                            (o = ""),
                                            s[a].shift(),
                                            s[a].length > 0)
                                        ) {
                                            i.is(":not([data-rule-min])") &&
                                                (i
                                                    .attr("data-rule-min", 1)
                                                    .data("rule-min", 1),
                                                i
                                                    .attr(
                                                        "data-msg-min",
                                                        "Desa/Kelurahan harus dipilih"
                                                    )
                                                    .data(
                                                        "msg-min",
                                                        "Desa/Kelurahan harus dipilih"
                                                    ),
                                                0 ==
                                                    $(
                                                        "label[for='" +
                                                            i.attr("id") +
                                                            "'] > span.required"
                                                    ).length &&
                                                    1 ==
                                                        $(
                                                            "label[for='" +
                                                                i.attr("id") +
                                                                "']"
                                                        ).length &&
                                                    $(
                                                        "label[for='" +
                                                            i.attr("id") +
                                                            "']"
                                                    ).append(
                                                        $("<span>/<span>")
                                                            .addClass(
                                                                "required"
                                                            )
                                                            .html("*")
                                                    ));
                                            for (
                                                let e = 0;
                                                e < s[a].length;
                                                e++
                                            )
                                                $.each(
                                                    s[a][e],
                                                    function (e, a) {
                                                        let t = $(
                                                            "<option></option>"
                                                        ).attr("value", e);
                                                        t.text(
                                                            a + " (" + e + ")"
                                                        ),
                                                            i.append(t);
                                                    }
                                                );
                                        }
                                    } else {
                                        let e = [
                                            "0",
                                            "==PILIH DESA/KELURAHAN==",
                                        ];
                                        i.attr(
                                            "data-default",
                                            SiakDev.JSONBigStr.stringify(e)
                                        ).data("default", e);
                                        let a = i.data("default");
                                        i.append(
                                            $("<option></option>")
                                                .attr("value", a[0])
                                                .text(a[1])
                                        ),
                                            i.val(a[0]);
                                    }
                        }),
                            void 0 !== l.NO_PROP &&
                                t
                                    .attr(
                                        "data-parameter",
                                        SiakDev.JSONBigStr.stringify(l)
                                    )
                                    .data("parameter", l),
                            t.attr("data-url") ||
                                t.attr("data-url", n + o).data("url", n + o),
                            t.attr("data-method", "GET").data("method", "GET"),
                            t.attr("data-noblock", "true").data("noblock", !0),
                            o.length > 0 && y(t);
                    });
                })(a),
                ((e) => {
                    let a = $(e);
                    $("select.ref_wni:not(:has(option))", a).each(function (
                        e,
                        a
                    ) {
                        let t = $(a);
                        u(t),
                            t.hasClass("m_selectpicker") &&
                                SiakClient.reInitSelectPicker(t);
                    });
                })(a),
                ((e) => {
                    let a = $(e);
                    $("select.ref_wna:not(:has(option))", a).each(function (
                        e,
                        a
                    ) {
                        let t = $(a);
                        f(t),
                            t.hasClass("m_selectpicker") &&
                                SiakClient.reInitSelectPicker(t);
                    });
                })(a),
                P(a),
                C(a),
                A(a),
                T(a),
                ((e) => {
                    let a = $(e);
                    $("button.cari_biodata", a).each(function (e, a) {
                        let t = $(a);
                        if (t.is("[id]")) {
                            let e = t.data("map"),
                                a = t.data("parameter"),
                                i = !1;
                            for (let e in a) {
                                let t = $("#" + a[e]);
                                (t.is("select") || t.is(":text")) &&
                                    (i =
                                        "" == t.val().trim() ||
                                        "0" == t.val() ||
                                        i);
                            }
                            for (let a in e) {
                                let n = $("#" + e[a]);
                                i
                                    ? (n
                                          .removeAttr("data-src")
                                          .removeData("src"),
                                      n.is("select")
                                          ? (n.select_readonly(!1),
                                            n.hasClass("m_selectpicker") &&
                                                SiakClient.reInitSelectPicker(
                                                    n
                                                ))
                                          : n.is(":text") &&
                                            n.attr("readonly", !1))
                                    : n
                                          .attr("data-src", t.attr("id"))
                                          .data("src", t.attr("id"));
                            }
                            if (i)
                                for (let e in a) {
                                    let t = $("#" + a[e]);
                                    t.removeAttr("data-src").removeData("src"),
                                        t.is("select")
                                            ? (t.select_readonly(!1),
                                              t.hasClass("m_selectpicker") &&
                                                  SiakClient.reInitSelectPicker(
                                                      t
                                                  ))
                                            : t.is(":text") &&
                                              t.attr("readonly", !1);
                                }
                            else
                                t.removeClass("cari_biodata").addClass(
                                    "reset_biodata"
                                );
                        }
                    });
                })(a),
                m(a);
        },
        E = (e) => {
            let a = $(e);
            if (
                ($(".mask-date", a).length > 0 &&
                    $(".mask-date", a).each((e, a) => {
                        $(a).inputmask("remove"),
                            $(a).inputmask("dd-mm-yyyy", {
                                placeholder: "DD-MM-YYYY",
                                yearrange: { minyear: 1700, maxyear: 2099 },
                                greedy: !1,
                                autoUnmask: !1,
                                clearMaskOnLostFocus: !0,
                            });
                    }),
                $(".mask-mmyyyy", a).length > 0 &&
                    $(".mask-mmyyyy", a).each((e, a) => {
                        $(a).inputmask("remove"),
                            $(a).inputmask("Regex", {
                                regex: "^((0[1-9])|(1[0-2]))-(\\d{4})$",
                                greedy: !1,
                                autoUnmask: !1,
                                clearMaskOnLostFocus: !0,
                            });
                    }),
                $(".mask-yyyy", a).length > 0 &&
                    $(".mask-yyyy", a).each((e, a) => {
                        $(a).inputmask("remove"),
                            $(a).inputmask("Regex", {
                                regex: "^(\\d{4})$",
                                greedy: !1,
                                autoUnmask: !1,
                                clearMaskOnLostFocus: !0,
                            });
                    }),
                $(".mask-time", a).length > 0 &&
                    $(".mask-time", a).each((e, a) => {
                        $(a).inputmask("remove"),
                            $(a).inputmask("hh:mm", {
                                placeholder: "HH:MM",
                                greedy: !1,
                                autoUnmask: !1,
                                clearMaskOnLostFocus: !0,
                            });
                    }),
                $(".mask-ipv4", a).length > 0 &&
                    $(".mask-ipv4", a).each((e, a) => {
                        $(a).inputmask("remove"),
                            $(a).inputmask({
                                alias: "ip",
                                greedy: !0,
                                autoUnmask: !1,
                                clearMaskOnLostFocus: !0,
                            });
                    }),
                $(".mask-lintang", a).length > 0)
            ) {
                let e =
                    "^(\\+|-)?(?:90(?:(?:\\.0{1,7})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,7})?))$";
                $(".mask-lintang", a).each((a, t) => {
                    $(t).inputmask("remove"),
                        $(t).inputmask("Regex", {
                            regex: e,
                            greedy: !1,
                            autoUnmask: !1,
                            clearMaskOnLostFocus: !0,
                        });
                });
            }
            if ($(".mask-bujur", a).length > 0) {
                let e =
                    "^(\\+|-)?(?:180(?:(?:\\.0{1,7})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\\.[0-9]{1,7})?))$";
                $(".mask-bujur", a).each((a, t) => {
                    $(t).inputmask("remove"),
                        $(t).inputmask("Regex", {
                            regex: e,
                            greedy: !1,
                            autoUnmask: !1,
                            clearMaskOnLostFocus: !0,
                        });
                });
            }
            $(".mask-angka", a).length > 0 &&
                $(".mask-angka", a).each((e, a) => {
                    $(a).inputmask("remove"),
                        $(a).inputmask("x{+}", {
                            definitions: { x: { validator: "[0-9]" } },
                            greedy: !1,
                            autoUnmask: !0,
                            clearMaskOnLostFocus: !0,
                        });
                }),
                $(".mask-angka_cari", a).length > 0 &&
                    $(".mask-angka_cari", a).each((e, a) => {
                        $(a).inputmask("remove"),
                            $(a).inputmask("y{+}", {
                                definitions: { y: { validator: "[0-9,]" } },
                                greedy: !1,
                                autoUnmask: !0,
                                clearMaskOnLostFocus: !0,
                            });
                    }),
                $(".mask-bayi", a).length > 0 &&
                    $(".mask-bayi", a).each((e, a) => {
                        $(a).inputmask("remove"),
                            $(a).inputmask("z{+}", {
                                definitions: { z: { validator: "[0-9,.]" } },
                                greedy: !1,
                                autoUnmask: !0,
                                clearMaskOnLostFocus: !0,
                            });
                    }),
                $(".mask-nama", a).length > 0 &&
                    $(".mask-nama", a).each((e, a) => {
                        $(a).inputmask("remove"),
                            $(a).inputmask("0{+}", {
                                definitions: {
                                    0: {
                                        validator: "[a-zA-Z', .-]",
                                        casing: "upper",
                                    },
                                },
                                greedy: !1,
                                autoUnmask: !0,
                                clearMaskOnLostFocus: !0,
                            });
                    }),
                $(".mask-nama_cari", a).length > 0 &&
                    $(".mask-nama_cari", a).each((e, a) => {
                        $(a).inputmask("remove"),
                            $(a).inputmask("1{+}", {
                                definitions: {
                                    1: {
                                        validator: "[a-zA-Z', *.-]",
                                        casing: "upper",
                                    },
                                },
                                greedy: !1,
                                autoUnmask: !0,
                                clearMaskOnLostFocus: !0,
                            });
                    }),
                $(".mask-nama_esign", a).length > 0 &&
                    $(".mask-nama_esign", a).each((e, a) => {
                        $(a).inputmask("remove"),
                            $(a).inputmask("~{+}", {
                                definitions: {
                                    "~": { validator: "[a-zA-Z _-]" },
                                },
                                greedy: !1,
                                autoUnmask: !0,
                                clearMaskOnLostFocus: !0,
                            });
                    }),
                $(".mask-nama-pejabat", a).length > 0 &&
                    $(".mask-nama-pejabat", a).each((e, a) => {
                        $(a).inputmask("remove"),
                            $(a).inputmask("0{+}", {
                                definitions: {
                                    0: { validator: "[a-zA-Z', .-]" },
                                },
                                greedy: !1,
                                autoUnmask: !0,
                                clearMaskOnLostFocus: !0,
                            });
                    }),
                $(".mask-alamat", a).length > 0 &&
                    $(".mask-alamat", a).each((e, a) => {
                        $(a).inputmask("remove"),
                            $(a).inputmask("<{+}", {
                                definitions: {
                                    "<": {
                                        validator: "[a-zA-Z0-9', ./()-]",
                                        casing: "upper",
                                    },
                                },
                                greedy: !1,
                                autoUnmask: !0,
                                clearMaskOnLostFocus: !0,
                            });
                    }),
                $(".mask-alamat_cari", a).length > 0 &&
                    $(".mask-alamat_cari", a).each((e, a) => {
                        $(a).inputmask("remove"),
                            $(a).inputmask(">{+}", {
                                definitions: {
                                    ">": {
                                        validator: "[a-zA-Z0-9', *./()-]",
                                        casing: "upper",
                                    },
                                },
                                greedy: !1,
                                autoUnmask: !0,
                                clearMaskOnLostFocus: !0,
                            });
                    }),
                $(".mask-nodoc", a).length > 0 &&
                    $(".mask-nodoc", a).each((e, a) => {
                        $(a).inputmask("remove"),
                            $(a).inputmask("*{+}", {
                                definitions: {
                                    "*": {
                                        validator: "[a-zA-Z0-9._/()-]",
                                        casing: "upper",
                                    },
                                },
                                greedy: !1,
                                autoUnmask: !0,
                                clearMaskOnLostFocus: !0,
                            });
                    }),
                $(".mask-nodoc_cari", a).length > 0 &&
                    $(".mask-nodoc_cari", a).each((e, a) => {
                        $(a).inputmask("remove"),
                            $(a).inputmask("&{+}", {
                                definitions: {
                                    "&": {
                                        validator: "[a-zA-Z0-9.,*_/()-]",
                                        casing: "upper",
                                    },
                                },
                                greedy: !1,
                                autoUnmask: !0,
                                clearMaskOnLostFocus: !0,
                            });
                    }),
                $(".mask-uuid", a).length > 0 &&
                    $(".mask-uuid", a).each((e, a) => {
                        $(a).inputmask("remove"),
                            $(a).inputmask("`{+}", {
                                definitions: {
                                    "`": { validator: "[a-zA-Z0-9._-]" },
                                },
                                greedy: !1,
                                autoUnmask: !0,
                                clearMaskOnLostFocus: !0,
                            });
                    }),
                $(".mask-uuid_cari", a).length > 0 &&
                    $(".mask-uuid_cari", a).each((e, a) => {
                        $(a).inputmask("remove"),
                            $(a).inputmask("={+}", {
                                definitions: {
                                    "=": { validator: "[a-zA-Z0-9.,*_-]" },
                                },
                                greedy: !1,
                                autoUnmask: !0,
                                clearMaskOnLostFocus: !0,
                            });
                    }),
                $(".mask-captcha", a).length > 0 &&
                    $(".mask-captcha", a).each((e, a) => {
                        $(a).inputmask("remove"),
                            $(a).inputmask("0{+}", {
                                definitions: {
                                    0: {
                                        validator: "[2345678abdefghjkmnpqrty]",
                                    },
                                },
                                greedy: !1,
                                autoUnmask: !0,
                                clearMaskOnLostFocus: !0,
                            });
                    });
        },
        H = (e) => {
            $('[data-toggle="m-tooltip"]', e).length > 0 &&
                $('[data-toggle="m-tooltip"]', e).each((e, a) => {
                    var t, i, n, r, s;
                    $(a).tooltip("dispose"),
                        (t = $(a)),
                        (i = t.data("skin")
                            ? "m-tooltip--skin-" + t.data("skin")
                            : ""),
                        (n =
                            "auto" == t.data("width")
                                ? "m-tooltop--auto-width"
                                : ""),
                        (r = t.data("trigger") ? t.data("trigger") : "hover"),
                        (s =
                            '<div class="m-tooltip ' +
                            i +
                            " " +
                            n +
                            ' tooltip" role="tooltip"><div class="arrow"></div><div class="tooltip-inner"></div></div>'),
                        t.tooltip({ trigger: r, template: s });
                }),
                $('[m-portlet="true"]', e).length > 0 &&
                    $('[m-portlet="true"]', e).each((e, a) => {
                        ((e) => {
                            if (1 != e.data("portlet-initialized")) {
                                var a = $(e);
                                new mPortlet(a[0], {
                                    tooltips: !1,
                                    bodyToggleSpeed: 233,
                                }),
                                    e.data("portlet-initialized", !0);
                            }
                        })($(a));
                    }),
                $("select.m_selectpicker", e).length > 0 &&
                    $("select.m_selectpicker", e).each((e, a) => {
                        I($(a));
                    }),
                E(e);
        },
        O = () => ({
            proxy_connect: () =>
                new Promise(function (e, a) {
                    $.ajax({
                        url: "/ping",
                        type: "GET",
                        contentType: "application/json",
                        dataType: "json",
                        timeout: 15e3,
                    })
                        .done((a) => {
                            (() => {
                                let e = "/referensi/wni";
                                $.ajax({
                                    url: e,
                                    type: "GET",
                                    dataType: "json",
                                    cache: !1,
                                })
                                    .done(function (e) {
                                        s = e;
                                    })
                                    .fail(function (a) {
                                        v.REF_WNI =
                                            "Gagal mengambil referensi WNI dari " +
                                            e;
                                    });
                            })(),
                                (() => {
                                    let e = "/referensi/wna";
                                    $.ajax({
                                        url: e,
                                        type: "GET",
                                        dataType: "json",
                                        cache: !1,
                                    })
                                        .done(function (e) {
                                            o = e;
                                        })
                                        .fail(function (a) {
                                            v.REF_WNA =
                                                "Gagal mengambil referensi WNA dari " +
                                                e;
                                        });
                                })(),
                                (() => {
                                    let e = "/referensi/activity";
                                    $.ajax({
                                        url: e,
                                        type: "GET",
                                        dataType: "json",
                                        cache: !1,
                                    })
                                        .done(function (e) {
                                            l = e;
                                        })
                                        .fail(function (a) {
                                            v.REF_ACTIVITY =
                                                "Gagal mengambil referensi Activity dari " +
                                                e;
                                        });
                                })(),
                                (() => {
                                    let e = "/referensi/moduladm";
                                    $.ajax({
                                        url: e,
                                        type: "GET",
                                        dataType: "json",
                                        cache: !1,
                                    })
                                        .done(function (e) {
                                            d = e;
                                        })
                                        .fail(function (a) {
                                            v.REF_MODULADM =
                                                "Gagal mengambil referensi Modul Adm dari " +
                                                e;
                                        });
                                })(),
                                e(a);
                        })
                        .fail((e) => {
                            a(e);
                        });
                }),
            getUserData: () =>
                new Promise(function (e, a) {
                    SiakLocalStorage.read(i, c.key)
                        .then((a) => {
                            e(a);
                        })
                        .catch(() => {
                            (c.data = {
                                username: null,
                                prop: [],
                                kab: [],
                                kec: [],
                                kel: [],
                            }),
                                SiakLocalStorage.create(i, c)
                                    .then(() => {
                                        e(c);
                                    })
                                    .catch((e) => {
                                        a(e),
                                            SiakClient.loading_block(),
                                            swal({
                                                type: "error",
                                                title: "Terjadi Kesalahan",
                                                html: htmltroubleshooting,
                                                showConfirmButton: !1,
                                                allowEscapeKey: !1,
                                            });
                                    });
                        });
                }),
        }),
        D = () => ({
            check: () =>
                new Promise(function (e, a) {
                    $.ajax({
                        url: "/auth/user/index",
                        type: "GET",
                        contentType: "application/json",
                        dataType: "json",
                    })
                        .done((a) => {
                            e(a);
                        })
                        .fail((e) => {
                            a(e);
                        });
                }),
            redirect: (e) => {
                (e = void 0 !== e ? e : "index.html"),
                    SiakLocalStorage.create(i, c)
                        .then(() => {
                            "index.html" !== e
                                ? swal({
                                      type: "success",
                                      title: "Harap tunggu...!",
                                      showConfirmButton: !1,
                                      timer: 1500,
                                  }).then(() => {
                                      window.eval.call(null, e);
                                  })
                                : swal({
                                      type: "warning",
                                      title: "Session Sudah Berakhir. Harap tunggu...!",
                                      showConfirmButton: !1,
                                      timer: 1500,
                                  }).then(function () {
                                      window.location.replace("index.html");
                                  });
                        })
                        .catch((e) => {
                            window.location.replace("index.html");
                        });
            },
        });
    return {
        init: () => {
            (() => {
                let e = $("#modal_konfirmasi"),
                    a = $("#modal_gagal"),
                    t = $("#modal_berhasil"),
                    i = (e) => {
                        e.data("modal-options-relatedtarget") &&
                            e
                                .removeAttr("data-modal-options-relatedtarget")
                                .removeData("modal-options-relatedtarget"),
                            e.data("modal-options-hidetarget") &&
                                e
                                    .removeAttr("data-modal-options-hidetarget")
                                    .removeData("modal-options-hidetarget");
                    },
                    n = (e) => {
                        let a = $("#korfirmasi_ya", e),
                            t = $("#korfirmasi_tdk", e);
                        return {
                            set: () => {
                                a.one("click", function (a) {
                                    a.preventDefault(),
                                        a.stopPropagation(),
                                        a.stopImmediatePropagation();
                                    let t = $(a.currentTarget);
                                    t.attr("disabled", !0),
                                        e.data("modal-options-relatedtarget") &&
                                            $(
                                                e.data(
                                                    "modal-options-relatedtarget"
                                                )
                                            ).trigger("konfirmasiOk"),
                                        e.data("modal-options-hidetarget") ||
                                            e
                                                .attr(
                                                    "data-modal-options-hidetarget",
                                                    t
                                                )
                                                .data(
                                                    "modal-options-hidetarget",
                                                    t
                                                ),
                                        e.modal("hide");
                                }),
                                    t.one("click", function (a) {
                                        a.preventDefault(),
                                            a.stopPropagation(),
                                            a.stopImmediatePropagation();
                                        let t = $(a.currentTarget);
                                        e.data("modal-options-relatedtarget") &&
                                            $(
                                                e.data(
                                                    "modal-options-relatedtarget"
                                                )
                                            ).trigger("konfirmasiCancel"),
                                            e.data(
                                                "modal-options-hidetarget"
                                            ) ||
                                                e
                                                    .attr(
                                                        "data-modal-options-hidetarget",
                                                        t
                                                    )
                                                    .data(
                                                        "modal-options-hidetarget",
                                                        t
                                                    ),
                                            e.modal("hide");
                                    });
                            },
                            unset: () => {
                                a.off("*"), t.off("*"), i(e);
                            },
                        };
                    };
                e.on("show.bs.modal", function (e) {
                    e.stopPropagation(), e.stopImmediatePropagation();
                    let a = $(e.currentTarget);
                    $("#modal_konfirmasi_tulisan", a).show();
                }),
                    e.on("shown.bs.modal", function (e) {
                        e.stopPropagation(), e.stopImmediatePropagation();
                        let a = $(e.currentTarget);
                        n(a).set(), $(".btn-focus", a).focus();
                    }),
                    e.on("hide.bs.modal", function (e) {
                        e.stopPropagation(), e.stopImmediatePropagation();
                        let a = $(e.currentTarget);
                        a.data("modal-options-hidetarget") ||
                            $("#korfirmasi_tdk", a).trigger("click");
                    }),
                    e.on("hidden.bs.modal", function (e) {
                        e.stopPropagation(), e.stopImmediatePropagation();
                        let a = $(e.currentTarget),
                            t = $("#modal_konfirmasi_tulisan", a);
                        t.empty(), t.hide(), n(a).unset();
                    }),
                    a.on("show.bs.modal", function (e) {
                        e.stopPropagation(), e.stopImmediatePropagation();
                        let a = $(e.currentTarget);
                        $("#modal_gagal_tulisan", a).show();
                    }),
                    a.on("shown.bs.modal", function (e) {
                        e.stopPropagation(), e.stopImmediatePropagation();
                        let a = $(e.currentTarget);
                        $(".btn-focus", a).focus();
                    }),
                    a.on("hide.bs.modal", function (e) {
                        e.stopPropagation(), e.stopImmediatePropagation();
                        let a = $(e.currentTarget);
                        a.data("modal-options-relatedtarget") &&
                            $(a.data("modal-options-relatedtarget")).trigger(
                                "afterMessageError"
                            );
                    }),
                    a.on("hidden.bs.modal", function (e) {
                        e.stopPropagation(), e.stopImmediatePropagation();
                        let a = $(e.currentTarget),
                            t = $("#modal_gagal_tulisan", a);
                        t.empty(), t.hide(), i(a);
                    }),
                    t.on("show.bs.modal", function (e) {
                        e.stopPropagation(), e.stopImmediatePropagation();
                        let a = $(e.currentTarget);
                        $("#modal_berhasil_tulisan", a).show();
                    }),
                    t.on("shown.bs.modal", function (e) {
                        e.stopPropagation(), e.stopImmediatePropagation();
                        let a = $(e.currentTarget);
                        $(".btn-focus", a).focus();
                    }),
                    t.on("hide.bs.modal", function (e) {
                        e.stopPropagation(), e.stopImmediatePropagation();
                        let a = $(e.currentTarget);
                        a.data("modal-options-relatedtarget") &&
                            $(a.data("modal-options-relatedtarget")).trigger(
                                "afterMessageSuccess"
                            );
                    }),
                    t.on("hidden.bs.modal", function (e) {
                        e.stopPropagation(), e.stopImmediatePropagation();
                        let a = $(e.currentTarget),
                            t = $("#modal_berhasil_tulisan", a);
                        t.empty(), t.hide(), i(a);
                    });
            })(),
                w(),
                j(),
                Object.keys(h).forEach((e) => {
                    let a = h[e];
                    void 0 !== a.validasiError &&
                        $(document).on(
                            "validasiError",
                            "." + e,
                            function (e, t) {
                                e.stopPropagation(),
                                    e.stopImmediatePropagation();
                                let i = $(e.currentTarget);
                                a.validasiError.bind(i)(e, t);
                            }
                        ),
                        void 0 !== a.konfirmasiOk &&
                            $(document).on(
                                "konfirmasiOk",
                                "." + e,
                                function (e, t) {
                                    e.stopPropagation(),
                                        e.stopImmediatePropagation();
                                    let i = $(e.currentTarget);
                                    a.konfirmasiOk.bind(i)(e, t);
                                }
                            ),
                        void 0 !== a.konfirmasiCancel &&
                            $(document).on(
                                "konfirmasiCancel",
                                "." + e,
                                function (e, t) {
                                    e.stopPropagation(),
                                        e.stopImmediatePropagation();
                                    let i = $(e.currentTarget);
                                    a.konfirmasiCancel.bind(i)(e, t);
                                }
                            ),
                        void 0 !== a.ajaxErrorElement &&
                            $(document).on(
                                "ajaxErrorElement",
                                "." + e,
                                function (e, t) {
                                    e.stopPropagation(),
                                        e.stopImmediatePropagation();
                                    let i = $(e.currentTarget);
                                    a.ajaxErrorElement.bind(i)(e, t);
                                }
                            ),
                        void 0 !== a.ajaxSuccessElement &&
                            $(document).on(
                                "ajaxSuccessElement",
                                "." + e,
                                function (e, t) {
                                    e.stopPropagation(),
                                        e.stopImmediatePropagation();
                                    let i = $(e.currentTarget);
                                    a.ajaxSuccessElement.bind(i)(e, t);
                                }
                            ),
                        void 0 !== a.afterAjaxSuccess &&
                            $(document).on(
                                "afterAjaxSuccess",
                                "." + e,
                                function (e) {
                                    e.stopPropagation(),
                                        e.stopImmediatePropagation();
                                    let t = $(e.currentTarget);
                                    a.afterAjaxSuccess.bind(t)(e);
                                }
                            ),
                        void 0 !== a.afterMessageSuccess &&
                            $(document).on(
                                "afterMessageSuccess",
                                "." + e,
                                function (e) {
                                    e.stopPropagation(),
                                        e.stopImmediatePropagation();
                                    let t = $(e.currentTarget);
                                    a.afterMessageSuccess.bind(t)(e);
                                }
                            ),
                        void 0 !== a.ajaxSuccessExtendedHandler &&
                            $(document).on(
                                "ajaxSuccessExtendedHandler",
                                "." + e,
                                function (e) {
                                    e.stopPropagation(),
                                        e.stopImmediatePropagation();
                                    let t = $(e.currentTarget);
                                    a.ajaxSuccessExtendedHandler.bind(t)(e);
                                }
                            ),
                        void 0 !== a.afterMessageError &&
                            $(document).on(
                                "afterMessageError",
                                "." + e,
                                function (e) {
                                    e.stopPropagation(),
                                        e.stopImmediatePropagation();
                                    let t = $(e.currentTarget);
                                    a.afterMessageError.bind(t)(e);
                                }
                            ),
                        void 0 !== a.ajaxErrorExtendedHandler &&
                            $(document).on(
                                "ajaxErrorExtendedHandler",
                                "." + e,
                                function (e) {
                                    e.stopPropagation(),
                                        e.stopImmediatePropagation();
                                    let t = $(e.currentTarget);
                                    a.ajaxErrorExtendedHandler.bind(t)(e);
                                }
                            ),
                        void 0 !== a.kembaliHandler &&
                            $(document).on(
                                "kembaliHandler",
                                "." + e,
                                function (e) {
                                    e.stopPropagation(),
                                        e.stopImmediatePropagation();
                                    let t = $(e.currentTarget);
                                    a.kembaliHandler.bind(t)(e);
                                }
                            ),
                        void 0 !== a.reshown &&
                            $(document).on("reshown", "." + e, function (e) {
                                e.stopPropagation(),
                                    e.stopImmediatePropagation();
                                let t = $(e.currentTarget);
                                a.reshown.bind(t)(e);
                            });
                }),
                $(document).ajaxSuccess(function (e, a, t) {
                    if (
                        (e.stopPropagation(),
                        e.stopImmediatePropagation(),
                        void 0 !== t.element_target)
                    ) {
                        $(t.element_target).trigger("ajaxSuccessElement", a);
                    }
                }),
                $(document).ajaxError(function (e, a, t) {
                    void 0 !== t.element_target &&
                        $(t.element_target).trigger("ajaxErrorElement", a);
                }),
                $(document).on(
                    "click",
                    ".ajaxify:not([data-konfirmasi])",
                    function (e) {
                        e.preventDefault(), e.stopPropagation();
                        let a = $(e.currentTarget);
                        a.attr("disabled") || (a.attr("disabled", !0), S(a));
                    }
                ),
                $(document).on(
                    "click",
                    ".ajaxify[data-konfirmasi]",
                    function (e, a) {
                        e.preventDefault(), e.stopPropagation();
                        let t = $(e.currentTarget);
                        a
                            ? S(t)
                            : (t.attr("disabled") || t.attr("disabled", !0),
                              SiakClient.confirm_simpan(t));
                    }
                ),
                $(document).on("click", ".ajax_logout", function (e, a) {
                    e.preventDefault(), e.stopPropagation();
                    let t = $(e.currentTarget);
                    t.data("noconfirmation")
                        ? t.attr("disabled") || (t.attr("disabled", !0), S(t))
                        : a
                        ? S(t)
                        : (t.attr("disabled") || t.attr("disabled", !0),
                          SiakClient.confirm_simpan(t));
                }),
                $(document).on("click", ".clickmenu", function (e) {
                    e.preventDefault(),
                        e.stopPropagation(),
                        e.stopImmediatePropagation();
                    let a = $(e.currentTarget);
                    $("a.ajaxify[href='" + a.attr("href") + "']").click();
                }),
                $(document).on("submit", "form.form_cari", function (e) {
                    e.preventDefault(),
                        e.stopPropagation(),
                        e.stopImmediatePropagation();
                    let a = $(e.currentTarget);
                    a.attr("disabled") ||
                        (a.attr("disabled", !0),
                        a.data("nonDisable") || SiakClient.enable_form(a),
                        a.valid() && (SiakClient.loading_block(), x(a)));
                }),
                $(document).on("submit", "form.form_paging", function (e) {
                    e.preventDefault(),
                        e.stopPropagation(),
                        e.stopImmediatePropagation();
                    let a = $(e.currentTarget);
                    a.attr("disabled") ||
                        (a.attr("disabled", !0),
                        a.data("nonDisable") || SiakClient.enable_form(a),
                        a.valid() && (SiakClient.loading_block(), x(a)));
                }),
                $(document).on("click", ".pagingPrev", function (e) {
                    e.preventDefault(),
                        e.stopPropagation(),
                        e.stopImmediatePropagation();
                    let a = $(e.currentTarget)
                            .parent()
                            .siblings("[name='page']")
                            .get(0),
                        t = $(a),
                        i = SiakDev.siakBigInt(t.val()) - 1;
                    i < 0 && (i = 0),
                        t.val(SiakDev.siakBigInt(i)),
                        t.closest("form").submit();
                }),
                $(document).on("click", ".pagingNext", function (e) {
                    e.preventDefault(),
                        e.stopPropagation(),
                        e.stopImmediatePropagation();
                    let a = $(e.currentTarget)
                            .parent()
                            .siblings("[name='page']")
                            .get(0),
                        t = $(a),
                        i = SiakDev.siakBigInt(t.val());
                    i < 0 && (i = 0);
                    let n = i + 1;
                    t.val(SiakDev.siakBigInt(n)), t.closest("form").submit();
                }),
                $(document).on("submit", "form.form_login", function (e) {
                    e.preventDefault(),
                        e.stopPropagation(),
                        e.stopImmediatePropagation();
                    let a = $(e.currentTarget);
                    if ("javascript:;" === a.attr("action")) return !1;
                    a.attr("disabled") ||
                        (a.attr("disabled", !0),
                        a.data("nonDisable") || SiakClient.enable_form(a),
                        a.valid() &&
                            ($(".aes256", a).length &&
                                $(".aes256", a).each((e, a) => {
                                    let t = $(a),
                                        i = $.trim(t.val());
                                    if ("" !== i && t.data("vector")) {
                                        let e = $.trim(
                                            $("#" + t.data("vector")).val()
                                        );
                                        if (e.length >= 16) {
                                            let a =
                                                    SiakDev.siakCrypto.enc.Utf8.parse(
                                                        e
                                                    ),
                                                n =
                                                    SiakDev.siakCrypto.enc.Utf8.parse(
                                                        e + $.trim(p)
                                                    ),
                                                r =
                                                    SiakDev.siakCrypto.AES.encrypt(
                                                        i,
                                                        a,
                                                        { iv: n }
                                                    );
                                            t.val(r.toString());
                                        }
                                    }
                                }),
                            SiakClient.loading_block(),
                            x(a)));
                }),
                $(document).on(
                    "change",
                    "select.dropdown_wilayah",
                    function (e) {
                        e.preventDefault(),
                            e.stopPropagation(),
                            e.stopImmediatePropagation();
                        let a = $(e.currentTarget),
                            t = a.data("parameter"),
                            i = a.data("default"),
                            n = a.data("map"),
                            r = !1;
                        for (let e in t) {
                            $("#" + t[e]).val() == i[0] &&
                                0 == i[0] &&
                                (r = r || !0);
                        }
                        for (let e in n) {
                            let a = $("#" + e);
                            a.empty(),
                                a.append(
                                    $("<option></option>")
                                        .attr("value", a.data("default")[0])
                                        .text(a.data("default")[1])
                                ),
                                a.hasClass("dropdown_wilayah")
                                    ? a.trigger("change")
                                    : a.hasClass("m_selectpicker") && I(a);
                        }
                        if (r)
                            for (let e in n) {
                                let a = $("#" + e);
                                a.hasClass("dropdown_wilayah") ||
                                    (a.data("reset") && a.trigger("change")),
                                    a.hasClass("m_selectpicker") && I(a);
                            }
                        else
                            !r && a.data("url")
                                ? (a.select_readonly(), y(a))
                                : r ||
                                  a.data("url") ||
                                  (a.hasClass("m_selectpicker") && I(a));
                    }
                ),
                $(document).on("click", ".kembali", function (e) {
                    e.preventDefault(),
                        e.stopPropagation(),
                        e.stopImmediatePropagation();
                    let a = $(e.currentTarget);
                    SiakClient.loading_block(),
                        a.is('[data-toggle="m-tooltip"]') && a.tooltip("hide"),
                        a.parent().is('[data-toggle="m-tooltip"]') &&
                            a.parent().tooltip("hide");
                    let t = $("#" + a.data("hidden"));
                    t.hide();
                    let i = $("#" + a.data("target"));
                    i.hasClass("hidden_then")
                        ? i.trigger("kembaliHandler")
                        : (_(i), H(i), SiakClient.loading_unblock()),
                        t.empty().off("*"),
                        i.show(),
                        a.data("top") && mApp.scrollTop();
                }),
                $(document).on(
                    "click",
                    ".sorting,.sorting_desc,.sorting_asc",
                    function (e) {
                        e.preventDefault(),
                            e.stopPropagation(),
                            e.stopImmediatePropagation();
                        let a = $(e.currentTarget),
                            t = a.closest("div.table-responsive"),
                            i = $(".form_cari", t).get(0),
                            n = $("[name='order']", i).get(0);
                        $("[name='page']", i).val(1),
                            a.hasClass("sorting_asc")
                                ? $(n).val(a.data("kolom") + " desc")
                                : $(n).val(a.data("kolom")),
                            $(i).submit();
                    }
                ),
                $(document).on("submit", "form.form_input", function (e, a) {
                    e.preventDefault(),
                        e.stopPropagation(),
                        e.stopImmediatePropagation();
                    let t = $(e.currentTarget);
                    t.attr("disabled") ||
                        (t.attr("disabled", !0),
                        t.data("nonDisable") || SiakClient.enable_form(t),
                        t.valid() &&
                            (a
                                ? (SiakClient.loading_block(), x(t))
                                : SiakClient.confirm_simpan(t)));
                }),
                $(document).on("submit", "form.form_default", function (e) {
                    e.preventDefault(),
                        e.stopPropagation(),
                        e.stopImmediatePropagation();
                    let a = $(e.currentTarget);
                    a.attr("disabled") ||
                        (a.attr("disabled", !0),
                        a.data("nonDisable") || SiakClient.enable_form(a),
                        a.valid() && (SiakClient.loading_block(), x(a)));
                }),
                $(document).on("submit", "form.form_esign", function (e) {
                    e.preventDefault(),
                        e.stopPropagation(),
                        e.stopImmediatePropagation();
                    let a = $(e.currentTarget);
                    return (
                        void 0 !== a.attr("action") &&
                        "javascript:;" !== a.attr("action") &&
                        void (
                            a.attr("disabled") ||
                            (a.attr("disabled", !0),
                            a.data("nonDisable") || SiakClient.enable_form(a),
                            a.valid() &&
                                ($(".aes256", a).length &&
                                    $(".aes256", a).each((e, a) => {
                                        let t = $(a),
                                            i = $.trim(t.val());
                                        if ("" !== i && t.data("vector")) {
                                            let e = $.trim(
                                                $("#" + t.data("vector")).val()
                                            );
                                            if (e.length >= 16) {
                                                let a =
                                                        SiakDev.siakCrypto.enc.Utf8.parse(
                                                            e
                                                        ),
                                                    n =
                                                        SiakDev.siakCrypto.enc.Utf8.parse(
                                                            e + $.trim(p)
                                                        ),
                                                    r =
                                                        SiakDev.siakCrypto.AES.encrypt(
                                                            i,
                                                            a,
                                                            { iv: n }
                                                        );
                                                t.val(r.toString());
                                            }
                                        }
                                    }),
                                SiakClient.loading_block(),
                                x(a)))
                        )
                    );
                }),
                $(document).on("click", ".cari_biodata", function (e) {
                    e.preventDefault(),
                        e.stopPropagation(),
                        e.stopImmediatePropagation();
                    let t = $(e.currentTarget);
                    t.attr("disabled") ||
                        (t.attr("disabled", !0),
                        ((e) => {
                            let t = $(e);
                            t.data("blockui")
                                ? "none" !== t.data("blockui") &&
                                  SiakClient.loading_block(t.data("blockui"))
                                : SiakClient.loading_block();
                            let i = "POST";
                            t.data("method") && (i = t.data("method"));
                            let n = t.data("url"),
                                r = a + n,
                                s = t.data("parameter"),
                                o = {};
                            for (var l in s) {
                                let e = $("#" + s[l]),
                                    a = "auto";
                                if (
                                    (e.data("value-type") &&
                                        (a = $.trim(e.data("value-type"))),
                                    "auto" === a)
                                )
                                    o[l] = $.serializeJSON.parseValue(
                                        e.val(),
                                        null,
                                        null,
                                        {
                                            parseNumbers: !0,
                                            parseBooleans: !0,
                                            parseNulls: !0,
                                        }
                                    );
                                else if ("BigInt" === a) {
                                    let a = SiakDev.siakBigInt(e.val());
                                    o[l] = a.value;
                                } else
                                    o[l] = $.serializeJSON.parseValue(
                                        e.val(),
                                        null,
                                        a,
                                        $.serializeJSON.setupOpts()
                                    );
                                if (
                                    "number" == typeof o[l] &&
                                    o[l] > 9007199254740991
                                ) {
                                    let a = SiakDev.siakBigInt(e.val());
                                    o[l] = a.value;
                                }
                            }
                            let d = SiakDev.JSONBig.stringify(o);
                            $.ajax({
                                type: i,
                                contentType: "application/json; charset=utf-8",
                                url: r,
                                data: d,
                                element_target: e,
                            });
                        })(t));
                }),
                $(document).on("click", ".reset_biodata", function (e) {
                    e.preventDefault(),
                        e.stopPropagation(),
                        e.stopImmediatePropagation(),
                        ((e) => {
                            let a = $(e),
                                t = a.data("map"),
                                i = a.data("parameter");
                            for (let e in t) {
                                let t = $("#" + e);
                                if (t.data("src") == a.attr("id"))
                                    if (t.is("select")) {
                                        if (
                                            0 ==
                                            $("option[value='0']", t).length
                                        ) {
                                            let e = "0",
                                                a = "==PILIHAN==";
                                            if (t.data("default")) {
                                                let i = t.data("default");
                                                "string" ==
                                                    typeof t.data("default") &&
                                                    (i = JSON.parse(
                                                        $.trim(
                                                            i.data("default")
                                                        )
                                                    )),
                                                    (i.constructor === Array ||
                                                        (i.prop &&
                                                            i.prop
                                                                .constructor ===
                                                                Array) ||
                                                        Array.isArray(i) ||
                                                        "[object Array]" ===
                                                            Object.prototype.toString.call(
                                                                i
                                                            )) &&
                                                        ((e = i[0]),
                                                        (a = i[1]));
                                            }
                                            t.empty(),
                                                t.append(
                                                    $("<option></option>")
                                                        .attr("value", e)
                                                        .text(a)
                                                ),
                                                t.val(e);
                                        } else t.val("0");
                                        t.removeAttr("data-value"),
                                            t.select_readonly(!1),
                                            t.hasClass("m_selectpicker") &&
                                                SiakClient.reInitSelectPicker(
                                                    t
                                                );
                                    } else if (t.is("input"))
                                        t.attr("readonly", !1), t.val("");
                                    else if (t.is("img")) {
                                        let e = "minduk/img/img-not-found3.png";
                                        t.data("imgreset") &&
                                            (e = $.trim(t.data("imgreset"))),
                                            t.attr("src", e);
                                    } else t.html("");
                            }
                            if (a.hasClass("reset_biodata")) {
                                if (a.attr("data-cekniknull")) {
                                    let e = a.data("cekniknull").split("=");
                                    $("#" + $.trim(e[0])).val(
                                        $.trim(e[1]) + "=0"
                                    );
                                }
                                a.attr("data-ortuclass") &&
                                    $(a.attr("data-ortuclass")).each((e, a) => {
                                        $(a).hasClass("reset_biodata") &&
                                            $(a).click();
                                    });
                                var n =
                                    void 0 !== a.attr("data-keepparam") &&
                                    a.attr("data-keepparam");
                                $(e).removeClass("reset_biodata"),
                                    $(e).addClass("cari_biodata");
                                var r = 0;
                                for (let e in i) {
                                    let a = $("#" + i[e]);
                                    if (0 == r && !n)
                                        if (a.is("select")) {
                                            let e = "0";
                                            a.attr("data-awal") &&
                                                (e = a.data("data-awal")),
                                                a.val(e),
                                                a.select_readonly(!1);
                                        } else
                                            a.is(":text") &&
                                                (a.attr("readonly", !1),
                                                a.attr("data-default")
                                                    ? a.val(
                                                          a.attr("data-default")
                                                      )
                                                    : a.val(""));
                                    r++;
                                }
                            }
                        })($(e.currentTarget));
                });
        },
        setupAjax: (e) => {
            $.ajaxSetup({
                beforeSend: function (a) {
                    null != e &&
                        a.setRequestHeader("Authorization", "Bearer " + e);
                },
            });
        },
        initAjax: (e) => {
            _(e);
        },
        initInputmask: (e) => {
            E(e);
        },
        initUtil: (e) => {
            H(e);
        },
        initScroller: (e, a) => {
            mUtil.isMobileDevice()
                ? e.css("overflow", "auto")
                : (!0 !== a && SiakClient.destroyScroller(e),
                  e.mCustomScrollbar({
                      scrollInertia: 0,
                      autoDraggerLength: !0,
                      autoHideScrollbar:
                          !e.data("scrollbar-autohide") ||
                          null ===
                              SiakClient.parseBool(
                                  e.data("scrollbar-autohide")
                              ) ||
                          SiakClient.parseBool(e.data("scrollbar-autohide")),
                      autoExpandScrollbar: !1,
                      alwaysShowScrollbar:
                          !!e.data("scrollbar-shown") &&
                          null !==
                              SiakClient.parseBool(e.data("scrollbar-shown")) &&
                          SiakClient.parseBool(e.data("scrollbar-shown")),
                      axis: e.data("axis") ? e.data("axis") : "y",
                      mouseWheel: { scrollAmount: 120, preventDefault: !0 },
                      setHeight: e.data("height") ? e.data("height") : "",
                      theme: "minimal-dark",
                  }));
        },
        destroyScroller: function (e) {
            e.mCustomScrollbar("destroy"), e.removeClass("mCS_destroyed");
        },
        parseBool: (e) =>
            ("string" == typeof e &&
                ("true" === e.toLowerCase() || "yes" === e.toLowerCase())) ||
            1 === e ||
            (("string" != typeof e ||
                ("false" !== e.toLowerCase() && "no" !== e.toLowerCase())) &&
                0 !== e &&
                null),
        reInitSelectPicker: (e) => {
            I(e);
        },
        loading_block: function (e, a) {
            let t,
                i,
                n,
                r = void 0 !== e ? $(e) : $("body");
            if (
                "spinner" ==
                (a = $.extend(
                    !0,
                    {
                        opacity: 0.03,
                        overlayColor: "#000000",
                        state: "warning",
                        type: "loader",
                        size: "lg",
                        centerX: !0,
                        centerY: !0,
                        message: "Harap Tunggu ...",
                        shadow: !0,
                        width: "auto",
                    },
                    a
                )).type
            )
                (t = a.skin ? "m-spinner--skin-" + a.skin : ""),
                    (i = a.state ? "m-spinner--" + a.state : ""),
                    (n = '<div class="m-spinner ' + t + " " + i + '"></div');
            else {
                let e = a.size ? "m-loader--" + a.size : "";
                (t = a.skin ? "m-loader--skin-" + a.skin : ""),
                    (i = a.state ? "m-loader--" + a.state : ""),
                    (n =
                        '<div class="m-loader ' +
                        t +
                        " " +
                        i +
                        " " +
                        e +
                        '"></div');
            }
            let s = n;
            if (a.message && a.message.length > 0) {
                let e =
                    "m-blockui " +
                    (!1 === a.shadow ? "m-blockui-no-shadow" : "");
                s =
                    '<div class="' +
                    e +
                    '"><span>' +
                    a.message +
                    "</span><span>" +
                    n +
                    "</span></div>";
                let t = document.createElement("div");
                mUtil.get("body").prepend(t),
                    mUtil.addClass(t, e),
                    (t.innerHTML =
                        "<span>" + a.message + "</span><span>" + n + "</span>"),
                    (a.width = mUtil.actualWidth(t) + 10),
                    mUtil.remove(t),
                    r.is("body") &&
                        (s =
                            '<div class="' +
                            e +
                            '" style="margin-left:-' +
                            a.width / 2 +
                            'px;"><span>' +
                            a.message +
                            "</span><span>" +
                            n +
                            "</span></div>");
            }
            var o = {
                message: s,
                centerY: a.centerY,
                centerX: a.centerX,
                css: {
                    top: "30%",
                    left: "50%",
                    border: "0",
                    padding: "0",
                    backgroundColor: "none",
                    width: a.width,
                },
                overlayCSS: {
                    backgroundColor: a.overlayColor,
                    opacity: a.opacity,
                    cursor: "wait",
                    zIndex: "99999",
                },
                onUnblock: function () {
                    r &&
                        r[0] &&
                        (mUtil.css(r[0], "position", ""),
                        mUtil.css(r[0], "zoom", ""));
                },
            };
            r.is("body") ? ((o.css.top = "50%"), $.blockUI(o)) : r.block(o);
        },
        loading_unblock: function (e) {
            if (void 0 !== e) {
                $(e).unblock();
            } else $.unblockUI();
        },
        confirm_simpan: function (e) {
            let a = $("#modal_konfirmasi"),
                t = $("#korfirmasi_ya", a),
                i = $("#modal_konfirmasi_tulisan", a),
                n = $(e);
            a.data("modal-options-relatedtarget") &&
                a
                    .removeAttr("data-modal-options-relatedtarget")
                    .removeData("modal-options-relatedtarget");
            let r = "Simpan Perubahan?";
            n.data("konfirmasi") && (r = n.data("konfirmasi")),
                a
                    .attr("data-modal-options-relatedtarget", n)
                    .data("modal-options-relatedtarget", n),
                i.html(r),
                t.attr("disabled", !1),
                a.data("modal-options-hidetarget") &&
                    a
                        .removeAttr("data-modal-options-hidetarget")
                        .removeData("modal-options-hidetarget"),
                a.modal("show");
        },
        sukses: function (e, a) {
            let t = $("#modal_berhasil"),
                i = $("#modal_berhasil_tulisan", t);
            if (void 0 !== a) {
                let e = $(a);
                t.data("modal-options-relatedtarget") &&
                    t
                        .removeAttr("data-modal-options-relatedtarget")
                        .removeData("modal-options-relatedtarget"),
                    t
                        .attr("data-modal-options-relatedtarget", e)
                        .data("modal-options-relatedtarget", e);
            }
            i.html(e), t.modal("show");
        },
        peringatan: (e, a) => {
            let t = $("#modal_gagal"),
                i = $("#modal_gagal_tulisan", t);
            if (void 0 !== a) {
                let e = $(a);
                t.data("modal-options-relatedtarget") &&
                    t
                        .removeAttr("data-modal-options-relatedtarget")
                        .removeData("modal-options-relatedtarget"),
                    t
                        .attr("data-modal-options-relatedtarget", e)
                        .data("modal-options-relatedtarget", e);
            }
            i.html(e), t.modal("show");
        },
        peringatan_inline: (e, a) => {
            if (void 0 !== a) {
                let i = $(a);
                var t = $(
                    '<div class="m-alert m-alert--outline alert alert-danger alert-dismissible" role="alert">\t\t\t<button type="button" class="close" data-dismiss="alert" aria-label="Close"></button>\t\t\t<span></span>\t\t</div>'
                );
                i.find(".alert").remove(),
                    t.prependTo(i),
                    mUtil.animateClass(t[0], "fadeIn animated"),
                    t.find("span").html(e);
            } else SiakClient.peringatan(e);
        },
        enable_form: (e) => {
            let a = $(e);
            $("input:disabled,select:disabled", a).addClass("disabled"),
                $("input:disabled,select:disabled", a).attr("disabled", !1);
        },
        disable_form: (e) => {
            let a = $(e);
            $("input.disabled,select.disabled", a).attr("disabled", !0),
                $("input.disabled,select.disabled", a).removeClass("disabled");
        },
        formatBytes: function (e, a, t) {
            if (
                (void 0 === a && (a = 2),
                void 0 === t && (t = !0),
                void 0 === e || 0 === e)
            )
                return "0 Byte";
            {
                const i = 1024,
                    n = a < 0 ? 0 : a,
                    r = [
                        "Bytes",
                        "KB",
                        "MB",
                        "GB",
                        "TB",
                        "PB",
                        "EB",
                        "ZB",
                        "YB",
                    ],
                    s = Math.floor(Math.log(e) / Math.log(i));
                return t
                    ? parseFloat((e / Math.pow(i, s)).toFixed(n)) + " " + r[s]
                    : parseFloat((e / Math.pow(i, s)).toFixed(n)) + " ";
            }
        },
        uuid: function () {
            return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(
                /[xy]/g,
                function (e) {
                    var a = (16 * Math.random()) | 0;
                    return ("x" == e ? a : (3 & a) | 8).toString(16);
                }
            );
        },
        uuidv4: function () {
            let e = () =>
                    Math.floor(65536 * (1 + Math.random()))
                        .toString(16)
                        .substring(1),
                a = "";
            if (moment) {
                let e = moment().local();
                a = moment(e).utcOffset("+0700").format("x");
            } else a = new Date().getTime();
            return (
                e() +
                e() +
                "-" +
                e() +
                "-" +
                e() +
                "-" +
                e() +
                "-" +
                e() +
                e() +
                e() +
                "-" +
                a
            );
        },
        getUrlServer: function () {
            return a;
        },
        tektokCariBiodata: (e, a, t) => {
            let i = $.trim(a.val());
            if (
                (e.on("ajaxErrorElement", (e) => {
                    a.is(":disabled") && a.prop("disabled", !1),
                        a.is("[readonly]") && a.prop("readonly", !1),
                        a.hasClass("disabled") && a.removeClass("disabled"),
                        t.is(":disabled") && t.prop("disabled", !1),
                        t.is("[readonly]") && t.prop("readonly", !1),
                        t.hasClass("disabled") && t.removeClass("disabled");
                }),
                ("" != i && 0 != i) ||
                    (a.val(""),
                    a.prop("disabled", !1).prop("readonly", !1),
                    e.hasClass("reset_biodata") &&
                        setTimeout(() => {
                            e.click();
                        }, 100)),
                i.length >= 16 &&
                    (e.hasClass("reset_biodata") &&
                        (e.removeClass("reset_biodata"),
                        e.addClass("cari_biodata")),
                    a.val(i),
                    setTimeout(() => {
                        e.click();
                    }, 500)),
                void 0 !== t)
            ) {
                (0 == $.trim(t.val()).length || i.length < 16) &&
                    t.prop("disabled", !1).prop("readonly", !1);
            }
        },
        getUserLevelLabel: (e) => g.userGroupLevelLabel(e),
        getUserLevel: (e) => g.userGroupLevel(e),
        notifyExecTime: (e, a, t) => {
            e.stopPropagation(), e.stopImmediatePropagation();
            let i = $(e.currentTarget),
                n =
                    '<span class="m--font-warning m--font-bolder"><abbr title="Execution Time SIAK (in Millisecond)">' +
                    a +
                    "</abbr></span>&nbsp;ms",
                r = { mod: "REST Service", act: "Response" };
            if (i.data("notify-exectime")) {
                let e = i.data("notify-exectime");
                "object" == typeof e
                    ? (r = JSON.parse(SiakDev.JSONBigStr.stringify(e)))
                    : "string" == typeof e &&
                      ((r = SiakDev.JSONBigStr.parse(e)),
                      (r = JSON.parse(SiakDev.JSONBigStr.stringify(r))));
            }
            (n =
                void 0 !== r.submod
                    ? '<span class="m-badge m-badge--' +
                      t +
                      ' m-badge--wide m--font-bold">' +
                      r.mod +
                      "</span>&nbsp;<b>" +
                      r.submod +
                      "</b>&nbsp;<u>" +
                      r.act +
                      "</u> : " +
                      n
                    : '<span class="m-badge m-badge--' +
                      t +
                      ' m-badge--wide m--font-bold">' +
                      r.mod +
                      "</span>&nbsp;<u>" +
                      r.act +
                      "</u> : " +
                      n),
                i.data("notify-exectime") &&
                    ((e, a) => {
                        let t = {
                            title: "Execution Time",
                            icon: "icon flaticon-stopwatch",
                        };
                        (t.message = e),
                            $.notify(t, {
                                type: a,
                                allow_dismiss: !0,
                                newest_on_top: !0,
                                mouse_over: !1,
                                showProgressbar: !1,
                                spacing: 8,
                                timer: 1e3,
                                placement: { from: "bottom", align: "center" },
                                offset: { x: 21, y: 13 },
                                delay: 1500,
                                z_index: 9999,
                                animate: {
                                    enter: "animated fadeInUp",
                                    exit: "animated fadeOutDown",
                                },
                                template:
                                    '<div data-notify="container" class="alert alert-secondary m-alert" role="alert"><button type="button" aria-hidden="true" class="close" data-notify="dismiss"></button><span data-notify="icon" class="m--font-{0}"></span><span data-notify="title" class="m--font-{0}">{1}</span><span data-notify="message">{2}</span></div>',
                            });
                    })(n, t);
        },
        displayAge: (e, a) => {
            let t = a.diff(e, "months", !0),
                i = Math.floor(t / 12),
                n = Math.floor(t) % 12,
                r = Math.round((t % 1) * a.daysInMonth(), 0),
                s = "";
            return (
                i > 0 && (s += i + " tahun "),
                n > 0 && (s += n + " bulan "),
                r > 0 && (s += r + " hari "),
                s
            );
        },
        ageFormatDuration: (e) => {
            let a = e.years(),
                t = e.months(),
                i = e.days(),
                n = "";
            return (
                1 === a ? (n += a + "tahun ") : a > 1 && (n += a + " tahun "),
                (1 === t || t > 1) && (n += t + " bulan "),
                (1 === i || i > 1) && (n += i + " hari "),
                n
            );
        },
        dynamicKnownValidation: (e, a, t, i) => ({
            add: () => {
                $(e)
                    .attr("data-rule-" + a, t)
                    .data("rule-" + a, t),
                    $(e)
                        .attr("data-msg-" + a, i)
                        .data("msg-" + a, i);
            },
            remove: () => {
                $(e)
                    .removeAttr("data-rule-" + a)
                    .removeData("rule-" + a),
                    $(e)
                        .removeAttr("data-msg-" + a)
                        .removeData("msg-" + a);
            },
        }),
        translateFunction: (e, a) => {
            if (
                "string" == typeof a ||
                "number" == typeof a ||
                "bigint" == typeof a
            ) {
                if ($(e).data("function"))
                    if ("string" == typeof $(e).data("function"))
                        a = g[$(e).data("function")](a);
                    else {
                        let t = Object.assign([], $(e).data("function")),
                            i = t.shift();
                        t.unshift(a), (a = g[i].apply(null, t));
                    }
                $(e).html(a);
            } else null === a ? $(e).html("") : $(e).html(a);
        },
        padLeft: (e, a, t) => ((t = t || "0"), (e += ""), g.pad(e, a, t)),
        initSession: async () => {
            O()
                .proxy_connect()
                .then((e) => {
                    (SiakClient.getClient.version.semantic = e.semantic),
                        (SiakClient.getClient.version.major = e.major),
                        (SiakClient.getClient.version.minor = e.minor),
                        (SiakClient.getClient.version.patch = e.patch),
                        (SiakClient.getClient.version.state = e.state),
                        (SiakClient.getClient.ip = e.ip_client),
                        O()
                            .getUserData()
                            .then((e) => {
                                if (null !== e.data.username)
                                    (c.data = {
                                        username: null,
                                        prop: [],
                                        kab: [],
                                        kec: [],
                                        kel: [],
                                    }),
                                        D()
                                            .check()
                                            .then((a) => {
                                                if (
                                                    e.data.username ===
                                                    a.username
                                                ) {
                                                    let e =
                                                        "window.location.replace('menu.html')";
                                                    void 0 !== a.javascript &&
                                                        ((e = a.javascript),
                                                        delete a.javascript),
                                                        (c.data = a),
                                                        D().redirect(e);
                                                } else D().redirect();
                                            })
                                            .catch((e) => {
                                                D().redirect();
                                            });
                                else if (
                                    (SiakClient.init(), $.isEmptyObject(v))
                                )
                                    SiakApp.loginForm.enable(
                                        "auth/user/procLogin"
                                    ),
                                        E(SiakApp.loginForm.getForm());
                                else {
                                    let e =
                                        "Gagal mengambil referensi dari <br/><code>/</code><br/><ul>";
                                    for (let a in v)
                                        e += "<li>" + a.toUpperCase() + "</li>";
                                    (e += "</ul>"),
                                        SiakApp.loginForm.loginFlipError(e);
                                }
                            });
                });
        },
        initMain: async () =>
            new Promise((e, a) => {
                O()
                    .proxy_connect()
                    .then((t) => {
                        (SiakClient.getClient.version.semantic = t.semantic),
                            (SiakClient.getClient.version.major = t.major),
                            (SiakClient.getClient.version.minor = t.minor),
                            (SiakClient.getClient.version.patch = t.patch),
                            (SiakClient.getClient.version.state = t.state),
                            (SiakClient.getClient.ip = t.ip_client),
                            O()
                                .getUserData()
                                .then((t) => {
                                    if (null !== t.data.username)
                                        if ($.isEmptyObject(v))
                                            (c.data = t.data),
                                                SiakClient.init(),
                                                SiakClient.loading_unblock(),
                                                e();
                                        else {
                                            let e =
                                                "Gagal mengambil referensi dari <br/><code>/</code><br/>";
                                            for (let a in v)
                                                e +=
                                                    '<span class="m-badge m-badge--info m-badge--dot m-badge--dot-small"></span>&nbsp;' +
                                                    a.toUpperCase() +
                                                    "<br/>";
                                            SiakClient.loading_block(),
                                                swal({
                                                    type: "error",
                                                    title: "Terjadi Kesalahan",
                                                    html: e,
                                                    showConfirmButton: !1,
                                                    allowEscapeKey: !1,
                                                });
                                        }
                                    else
                                        (c.data = {
                                            username: null,
                                            prop: [],
                                            kab: [],
                                            kec: [],
                                            kel: [],
                                        }),
                                            a(),
                                            SiakClient.setupAjax(),
                                            D().redirect();
                                });
                    });
            }),
        initPublicAccess: async () =>
            new Promise((e, a) => {
                O()
                    .proxy_connect()
                    .then((a) => {
                        if ($.isEmptyObject(v))
                            (SiakClient.getClient.version.semantic =
                                a.semantic),
                                (SiakClient.getClient.version.major = a.major),
                                (SiakClient.getClient.version.minor = a.minor),
                                (SiakClient.getClient.version.patch = a.patch),
                                (SiakClient.getClient.version.state = a.state),
                                (SiakClient.getClient.ip = a.ip_client),
                                SiakClient.init(),
                                SiakClient.loading_unblock(),
                                e();
                        else {
                            let e =
                                "Gagal mengambil referensi dari <br/><code>/</code><br/>";
                            for (let a in v)
                                e +=
                                    '<span class="m-badge m-badge--info m-badge--dot m-badge--dot-small"></span>&nbsp;' +
                                    a.toUpperCase() +
                                    "<br/>";
                            SiakClient.loading_block(),
                                swal({
                                    type: "error",
                                    title: "Terjadi Kesalahan",
                                    html: e,
                                    showConfirmButton: !1,
                                    allowEscapeKey: !1,
                                });
                        }
                    });
            }),
        appStaging: () =>
            new Promise(function (e, a) {
                $.ajax({
                    url: "/ping",
                    type: "GET",
                    contentType: "application/json",
                    dataType: "json",
                    timeout: 15e3,
                })
                    .done((a) => {
                        e(a);
                    })
                    .fail((e) => {
                        a(e);
                    });
            }),
        toTitleCase: (e) =>
            e.replace(/(?:^|\s)\w/g, function (e) {
                return e.toUpperCase();
            }),
        getClient: {
            storage: { user: { name: i, key: r } },
            version: { semantic: "0.0.0", major: 0, minor: 0, patch: 0 },
            ip: "0.0.0.0",
            sessionDestroyedStatusCode: e,
        },
    };
})();
